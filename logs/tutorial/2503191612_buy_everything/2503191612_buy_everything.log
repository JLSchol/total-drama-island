Sandbox logs:
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=0\nstate.own_trades={}\nstate.market_trades={}\nstate.position={}\nBUY KELP: for 2029$ -- with size: 31\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 31",
  "timestamp": 0
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 0), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 29, 0)], 'KELP': [(KELP, SUBMISSION << , 2029.0, 29, 0), (KELP, SUBMISSION << , 2029.0, 2, 0)]}\nstate.market_trades={}\nstate.position={'KELP': 31, 'RAINFOREST_RESIN': 31}\nBUY KELP: for 2029$ -- with size: 19\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 19",
  "timestamp": 100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2029$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 1100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 1100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 1100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 1100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 1100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 1700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 1700)], 'KELP': [(KELP,  << , 2026.0, 8, 1700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=1900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 1800)], 'KELP': [(KELP,  << , 2026.0, 1, 1900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 1900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 1800)], 'KELP': [(KELP,  << , 2026.0, 1, 1900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2026.0, 1, 1900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2026.0, 1, 1900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2026.0, 1, 1900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2026.0, 1, 1900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2025.0, 1, 2400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2025.0, 1, 2400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2025.0, 1, 2400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2025.0, 1, 2400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=2900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 2000)], 'KELP': [(KELP,  << , 2025.0, 1, 2400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 2900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 2900), (RAINFOREST_RESIN,  << , 9996.0, 11, 2900)], 'KELP': [(KELP,  << , 2025.0, 1, 2400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 3000)], 'KELP': [(KELP,  << , 2027.0, 1, 3000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 3100)], 'KELP': [(KELP,  << , 2023.0, 2, 3100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3200), (RAINFOREST_RESIN,  << , 9996.0, 1, 3200)], 'KELP': [(KELP,  << , 2023.0, 2, 3200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3200), (RAINFOREST_RESIN,  << , 9996.0, 1, 3200)], 'KELP': [(KELP,  << , 2023.0, 2, 3200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3200), (RAINFOREST_RESIN,  << , 9996.0, 1, 3200)], 'KELP': [(KELP,  << , 2023.0, 2, 3200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3200), (RAINFOREST_RESIN,  << , 9996.0, 1, 3200)], 'KELP': [(KELP,  << , 2023.0, 2, 3200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3200), (RAINFOREST_RESIN,  << , 9996.0, 1, 3200)], 'KELP': [(KELP,  << , 2023.0, 2, 3200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 3700)], 'KELP': [(KELP,  << , 2023.0, 2, 3200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=3900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3800)], 'KELP': [(KELP,  << , 2023.0, 14, 3800), (KELP,  << , 2023.0, 1, 3800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 3900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3800)], 'KELP': [(KELP,  << , 2023.0, 14, 3800), (KELP,  << , 2023.0, 1, 3800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3800)], 'KELP': [(KELP,  << , 2023.0, 14, 3800), (KELP,  << , 2023.0, 1, 3800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 3800)], 'KELP': [(KELP,  << , 2023.0, 14, 3800), (KELP,  << , 2023.0, 1, 3800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 4200)], 'KELP': [(KELP,  << , 2025.0, 1, 4300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 4300)], 'KELP': [(KELP,  << , 2025.0, 1, 4300), (KELP,  << , 2023.0, 2, 4300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 4300)], 'KELP': [(KELP,  << , 2023.0, 1, 4500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 4300)], 'KELP': [(KELP,  << , 2023.0, 1, 4500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 4300)], 'KELP': [(KELP,  << , 2023.0, 7, 4700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 4300)], 'KELP': [(KELP,  << , 2023.0, 7, 4700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=4900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2027.0, 2, 4800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 4900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2027.0, 2, 4800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2027.0, 2, 4800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2027.0, 2, 4800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2027.0, 2, 4800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2025.0, 1, 5300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2025.0, 1, 5300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2025.0, 1, 5300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 5700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 5700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=5900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 5700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 5900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 5700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 6100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 6100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 6100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 6100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 4800)], 'KELP': [(KELP,  << , 2024.0, 1, 6100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 6500)], 'KELP': [(KELP,  << , 2024.0, 1, 6100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 6700)], 'KELP': [(KELP,  << , 2024.0, 1, 6100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 6700)], 'KELP': [(KELP,  << , 2024.0, 1, 6100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=6900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 6900)], 'KELP': [(KELP,  << , 2026.0, 1, 6900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 6900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 6900)], 'KELP': [(KELP,  << , 2026.0, 1, 6900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 7000)], 'KELP': [(KELP,  << , 2027.0, 2, 7000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 7000)], 'KELP': [(KELP,  << , 2027.0, 2, 7000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 7000)], 'KELP': [(KELP,  << , 2027.0, 2, 7000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 7300)], 'KELP': [(KELP,  << , 2024.0, 1, 7400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 7300)], 'KELP': [(KELP,  << , 2024.0, 1, 7400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 7300)], 'KELP': [(KELP,  << , 2024.0, 1, 7400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 7300)], 'KELP': [(KELP,  << , 2024.0, 1, 7700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 7300)], 'KELP': [(KELP,  << , 2024.0, 1, 7700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=7900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 7300)], 'KELP': [(KELP,  << , 2024.0, 1, 7700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 7900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 7300)], 'KELP': [(KELP,  << , 2024.0, 1, 7700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 7300)], 'KELP': [(KELP,  << , 2024.0, 1, 7700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 8100), (RAINFOREST_RESIN,  << , 9996.0, 1, 8100)], 'KELP': [(KELP,  << , 2027.0, 1, 8100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 8100), (RAINFOREST_RESIN,  << , 9996.0, 1, 8100)], 'KELP': [(KELP,  << , 2027.0, 1, 8100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 8100), (RAINFOREST_RESIN,  << , 9996.0, 1, 8100)], 'KELP': [(KELP,  << , 2027.0, 1, 8100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 8100), (RAINFOREST_RESIN,  << , 9996.0, 1, 8100)], 'KELP': [(KELP,  << , 2027.0, 1, 8100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 8100), (RAINFOREST_RESIN,  << , 9996.0, 1, 8100)], 'KELP': [(KELP,  << , 2023.0, 1, 8600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 8100), (RAINFOREST_RESIN,  << , 9996.0, 1, 8100)], 'KELP': [(KELP,  << , 2023.0, 1, 8600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 8100), (RAINFOREST_RESIN,  << , 9996.0, 1, 8100)], 'KELP': [(KELP,  << , 2023.0, 1, 8600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=8900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2023.0, 1, 8600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 8900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2023.0, 1, 8600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2023.0, 1, 8600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=9900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 9900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 8800)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 10300)], 'KELP': [(KELP,  << , 2025.0, 1, 9200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 10300)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 10400)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 10400)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 10400)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 10400)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=10900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 10800), (RAINFOREST_RESIN,  << , 10004.0, 10, 10800)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 10900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 10800), (RAINFOREST_RESIN,  << , 10004.0, 10, 10800)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 10800), (RAINFOREST_RESIN,  << , 10004.0, 10, 10800)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 11100), (RAINFOREST_RESIN,  << , 9998.0, 4, 11100)], 'KELP': [(KELP,  << , 2024.0, 1, 10300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 11100), (RAINFOREST_RESIN,  << , 9998.0, 4, 11100)], 'KELP': [(KELP,  << , 2022.0, 3, 11300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 11100), (RAINFOREST_RESIN,  << , 9998.0, 4, 11100)], 'KELP': [(KELP,  << , 2022.0, 3, 11300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 11500)], 'KELP': [(KELP,  << , 2022.0, 2, 11400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 11500)], 'KELP': [(KELP,  << , 2022.0, 2, 11400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 11500)], 'KELP': [(KELP,  << , 2022.0, 2, 11400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 11500)], 'KELP': [(KELP,  << , 2025.0, 1, 11800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=11900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 11500)], 'KELP': [(KELP,  << , 2025.0, 1, 11800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 11900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 11500)], 'KELP': [(KELP,  << , 2025.0, 1, 11800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2025.0, 1, 11800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2025.0, 1, 11800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2025.0, 1, 11800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2025.0, 1, 11800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2023.0, 1, 12500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2023.0, 1, 12500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2023.0, 1, 12500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2023.0, 1, 12500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=12900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2023.0, 1, 12500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 12900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 12000)], 'KELP': [(KELP,  << , 2023.0, 1, 12500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 13000)], 'KELP': [(KELP,  << , 2025.0, 1, 13000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 13200)], 'KELP': [(KELP,  << , 2025.0, 1, 13000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 13200)], 'KELP': [(KELP,  << , 2025.0, 1, 13000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2026.0, 2, 13300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2026.0, 2, 13300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 13600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 13600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 13600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=13900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 13600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 13900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 13600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 13600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 14200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 14200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 14200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 14200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 14200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 14200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 14200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=14900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2023.0, 1, 14200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 14900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2024.0, 2, 15000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2024.0, 2, 15000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2022.0, 1, 15200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 13300)], 'KELP': [(KELP,  << , 2022.0, 1, 15200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 15300)], 'KELP': [(KELP,  << , 2022.0, 1, 15200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 15400)], 'KELP': [(KELP,  << , 2022.0, 1, 15200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 15400)], 'KELP': [(KELP,  << , 2022.0, 1, 15200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 15700)], 'KELP': [(KELP,  << , 2025.0, 2, 15600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 15700)], 'KELP': [(KELP,  << , 2025.0, 2, 15600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=15900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 15700)], 'KELP': [(KELP,  << , 2025.0, 1, 15800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 15900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 15700)], 'KELP': [(KELP,  << , 2025.0, 1, 15800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 15700)], 'KELP': [(KELP,  << , 2025.0, 1, 15800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 15700)], 'KELP': [(KELP,  << , 2023.0, 1, 16200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 16200)], 'KELP': [(KELP,  << , 2023.0, 1, 16200), (KELP,  << , 2023.0, 1, 16200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 16400)], 'KELP': [(KELP,  << , 2023.0, 1, 16200), (KELP,  << , 2023.0, 1, 16200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 16400)], 'KELP': [(KELP,  << , 2023.0, 1, 16200), (KELP,  << , 2023.0, 1, 16200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 16400)], 'KELP': [(KELP,  << , 2023.0, 1, 16200), (KELP,  << , 2023.0, 1, 16200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 16400)], 'KELP': [(KELP,  << , 2023.0, 1, 16600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 16700)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=16900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 16900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=17900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 17900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2025.0, 1, 16700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2024.0, 4, 18200), (KELP,  << , 2024.0, 1, 18200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2024.0, 4, 18200), (KELP,  << , 2024.0, 1, 18200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2024.0, 4, 18200), (KELP,  << , 2024.0, 1, 18200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2026.0, 1, 18500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2026.0, 1, 18500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2026.0, 1, 18500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2026.0, 1, 18500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=18900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2026.0, 1, 18500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 18900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2024.0, 10, 19000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2024.0, 10, 19000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2024.0, 10, 19000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 5, 16800)], 'KELP': [(KELP,  << , 2024.0, 10, 19000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 19300)], 'KELP': [(KELP,  << , 2024.0, 1, 19300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 19300)], 'KELP': [(KELP,  << , 2024.0, 1, 19300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 19300)], 'KELP': [(KELP,  << , 2024.0, 1, 19300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 19300)], 'KELP': [(KELP,  << , 2024.0, 1, 19700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 19700)], 'KELP': [(KELP,  << , 2024.0, 1, 19700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=19900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 19700)], 'KELP': [(KELP,  << , 2024.0, 1, 19700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 19900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 19700)], 'KELP': [(KELP,  << , 2024.0, 1, 19700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 20100)], 'KELP': [(KELP,  << , 2024.0, 1, 19700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 20100), (RAINFOREST_RESIN,  << , 10002.0, 1, 20100)], 'KELP': [(KELP,  << , 2024.0, 1, 19700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 20200)], 'KELP': [(KELP,  << , 2024.0, 1, 20300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 20200)], 'KELP': [(KELP,  << , 2024.0, 1, 20300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 20500)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 20500)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 20500)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 20700)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=20900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 20700)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 20900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 20700)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 20700)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 20700)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 21200)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2025.0, 4, 20400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2027.0, 8, 21700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=21900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2027.0, 8, 21700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 21900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2027.0, 8, 21700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2024.0, 1, 22100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 21300), (RAINFOREST_RESIN,  << , 9996.0, 7, 21300)], 'KELP': [(KELP,  << , 2024.0, 1, 22100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 6, 22200)], 'KELP': [(KELP,  << , 2024.0, 1, 22100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 6, 22200)], 'KELP': [(KELP,  << , 2024.0, 1, 22100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 22400)], 'KELP': [(KELP,  << , 2024.0, 1, 22100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 22400)], 'KELP': [(KELP,  << , 2026.0, 11, 22500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 22400)], 'KELP': [(KELP,  << , 2023.0, 1, 22700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 22400)], 'KELP': [(KELP,  << , 2023.0, 1, 22800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=22900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 22800)], 'KELP': [(KELP,  << , 2023.0, 1, 22800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 22900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 22800)], 'KELP': [(KELP,  << , 2023.0, 1, 22800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 22800)], 'KELP': [(KELP,  << , 2023.0, 1, 22800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 22800)], 'KELP': [(KELP,  << , 2023.0, 1, 22800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 23300)], 'KELP': [(KELP,  << , 2023.0, 2, 23200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 23300)], 'KELP': [(KELP,  << , 2023.0, 2, 23200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 23300)], 'KELP': [(KELP,  << , 2023.0, 1, 23500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 23300)], 'KELP': [(KELP,  << , 2023.0, 1, 23500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 23300)], 'KELP': [(KELP,  << , 2023.0, 1, 23500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 23700)], 'KELP': [(KELP,  << , 2023.0, 1, 23500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=23900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 23700)], 'KELP': [(KELP,  << , 2023.0, 1, 23500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 23900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 23700)], 'KELP': [(KELP,  << , 2025.0, 1, 23900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 23700)], 'KELP': [(KELP,  << , 2025.0, 1, 24100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 24100), (RAINFOREST_RESIN,  << , 9996.0, 7, 24100)], 'KELP': [(KELP,  << , 2025.0, 1, 24100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 24100), (RAINFOREST_RESIN,  << , 9996.0, 7, 24100)], 'KELP': [(KELP,  << , 2025.0, 1, 24100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 24100), (RAINFOREST_RESIN,  << , 9996.0, 7, 24100)], 'KELP': [(KELP,  << , 2025.0, 1, 24100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 24100), (RAINFOREST_RESIN,  << , 9996.0, 7, 24100)], 'KELP': [(KELP,  << , 2025.0, 1, 24100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 24500)], 'KELP': [(KELP,  << , 2024.0, 5, 24600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 24600)], 'KELP': [(KELP,  << , 2024.0, 5, 24600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 24600)], 'KELP': [(KELP,  << , 2024.0, 5, 24600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=24900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 24600)], 'KELP': [(KELP,  << , 2024.0, 5, 24600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 24900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 24600)], 'KELP': [(KELP,  << , 2024.0, 4, 24900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 24600)], 'KELP': [(KELP,  << , 2024.0, 4, 24900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 25200), (RAINFOREST_RESIN,  << , 9998.0, 3, 25200)], 'KELP': [(KELP,  << , 2025.0, 1, 25200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 25200), (RAINFOREST_RESIN,  << , 9998.0, 3, 25200), (RAINFOREST_RESIN,  << , 9998.0, 5, 25200)], 'KELP': [(KELP,  << , 2023.0, 1, 25300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 25200), (RAINFOREST_RESIN,  << , 9998.0, 3, 25200), (RAINFOREST_RESIN,  << , 9998.0, 5, 25200)], 'KELP': [(KELP,  << , 2023.0, 1, 25300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 25200), (RAINFOREST_RESIN,  << , 9998.0, 3, 25200), (RAINFOREST_RESIN,  << , 9998.0, 5, 25200)], 'KELP': [(KELP,  << , 2023.0, 1, 25300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 25200), (RAINFOREST_RESIN,  << , 9998.0, 3, 25200), (RAINFOREST_RESIN,  << , 9998.0, 5, 25200)], 'KELP': [(KELP,  << , 2023.0, 1, 25300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 25200), (RAINFOREST_RESIN,  << , 9998.0, 3, 25200), (RAINFOREST_RESIN,  << , 9998.0, 5, 25200)], 'KELP': [(KELP,  << , 2023.0, 1, 25300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 25700)], 'KELP': [(KELP,  << , 2023.0, 1, 25800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=25900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 25700)], 'KELP': [(KELP,  << , 2023.0, 1, 25800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 25900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 25700)], 'KELP': [(KELP,  << , 2023.0, 7, 26000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 25700)], 'KELP': [(KELP,  << , 2023.0, 7, 26000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 25700)], 'KELP': [(KELP,  << , 2023.0, 7, 26000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 25700)], 'KELP': [(KELP,  << , 2023.0, 7, 26000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26300)], 'KELP': [(KELP,  << , 2023.0, 1, 26400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26300)], 'KELP': [(KELP,  << , 2023.0, 1, 26400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26300)], 'KELP': [(KELP,  << , 2023.0, 1, 26400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2023.0, 1, 26400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2023.0, 1, 26400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=26900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2023.0, 1, 26900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 26900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2023.0, 1, 26900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2023.0, 1, 26900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2023.0, 1, 26900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2023.0, 1, 26900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2025.0, 1, 27300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 26600)], 'KELP': [(KELP,  << , 2025.0, 1, 27300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 27600)], 'KELP': [(KELP,  << , 2023.0, 1, 27600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 27600)], 'KELP': [(KELP,  << , 2023.0, 5, 27700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 27600)], 'KELP': [(KELP,  << , 2025.0, 1, 27800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=27900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 27600)], 'KELP': [(KELP,  << , 2025.0, 1, 27800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 27900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 27600)], 'KELP': [(KELP,  << , 2025.0, 1, 27900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 27600)], 'KELP': [(KELP,  << , 2025.0, 1, 27900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 27600)], 'KELP': [(KELP,  << , 2025.0, 1, 27900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 28200)], 'KELP': [(KELP,  << , 2025.0, 5, 28200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 28200)], 'KELP': [(KELP,  << , 2023.0, 1, 28400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 28200)], 'KELP': [(KELP,  << , 2023.0, 1, 28400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 28200)], 'KELP': [(KELP,  << , 2023.0, 1, 28400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 28200)], 'KELP': [(KELP,  << , 2023.0, 1, 28400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 28200)], 'KELP': [(KELP,  << , 2023.0, 1, 28400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=28900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 28200)], 'KELP': [(KELP,  << , 2023.0, 1, 28400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 28900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 28200)], 'KELP': [(KELP,  << , 2024.0, 1, 29000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 29000)], 'KELP': [(KELP,  << , 2024.0, 1, 29000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 29000)], 'KELP': [(KELP,  << , 2024.0, 1, 29000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 29000)], 'KELP': [(KELP,  << , 2024.0, 1, 29000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 29400)], 'KELP': [(KELP,  << , 2024.0, 1, 29400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 29400)], 'KELP': [(KELP,  << , 2024.0, 1, 29400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 29400)], 'KELP': [(KELP,  << , 2024.0, 1, 29400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 29400)], 'KELP': [(KELP,  << , 2024.0, 1, 29700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 29400)], 'KELP': [(KELP,  << , 2024.0, 1, 29700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=29900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 29400)], 'KELP': [(KELP,  << , 2024.0, 1, 29700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 29900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 30000)], 'KELP': [(KELP,  << , 2024.0, 1, 29700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2028$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 30000), (RAINFOREST_RESIN,  << , 9998.0, 3, 30000)], 'KELP': [(KELP,  << , 2024.0, 1, 29700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 30000), (RAINFOREST_RESIN,  << , 9998.0, 3, 30000)], 'KELP': [(KELP,  << , 2024.0, 1, 29700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 30000), (RAINFOREST_RESIN,  << , 9998.0, 3, 30000)], 'KELP': [(KELP,  << , 2027.0, 10, 30200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 30000), (RAINFOREST_RESIN,  << , 9998.0, 3, 30000)], 'KELP': [(KELP,  << , 2026.0, 1, 30300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 30000), (RAINFOREST_RESIN,  << , 9998.0, 3, 30000)], 'KELP': [(KELP,  << , 2026.0, 1, 30300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 30000), (RAINFOREST_RESIN,  << , 9998.0, 3, 30000)], 'KELP': [(KELP,  << , 2024.0, 1, 30600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2024.0, 1, 30600), (KELP,  << , 2027.0, 1, 30600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2024.0, 1, 30600), (KELP,  << , 2027.0, 1, 30600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=30900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2024.0, 1, 30600), (KELP,  << , 2027.0, 1, 30600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 30900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2024.0, 1, 30600), (KELP,  << , 2027.0, 1, 30600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2024.0, 1, 30600), (KELP,  << , 2027.0, 1, 30600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2024.0, 1, 30600), (KELP,  << , 2027.0, 1, 30600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2024.0, 1, 30600), (KELP,  << , 2027.0, 1, 30600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2023.0, 13, 31300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2023.0, 13, 31300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2023.0, 13, 31300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2025.0, 1, 31600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2025.0, 1, 31600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=31900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 30600)], 'KELP': [(KELP,  << , 2025.0, 1, 31600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 31900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 31900)], 'KELP': [(KELP,  << , 2025.0, 1, 31600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 31900)], 'KELP': [(KELP,  << , 2025.0, 1, 31600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 31900)], 'KELP': [(KELP,  << , 2025.0, 1, 31600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 31900)], 'KELP': [(KELP,  << , 2025.0, 1, 31600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 31900)], 'KELP': [(KELP,  << , 2023.0, 1, 32400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 31900)], 'KELP': [(KELP,  << , 2023.0, 1, 32500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 31900)], 'KELP': [(KELP,  << , 2023.0, 1, 32500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 32600), (RAINFOREST_RESIN,  << , 10002.0, 1, 32600)], 'KELP': [(KELP,  << , 2027.0, 2, 32600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 32600), (RAINFOREST_RESIN,  << , 10002.0, 1, 32600)], 'KELP': [(KELP,  << , 2027.0, 2, 32600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=32900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 32800)], 'KELP': [(KELP,  << , 2027.0, 2, 32600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 32900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33000)], 'KELP': [(KELP,  << , 2027.0, 2, 32600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33000)], 'KELP': [(KELP,  << , 2023.0, 1, 33100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33000)], 'KELP': [(KELP,  << , 2023.0, 1, 33200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33000)], 'KELP': [(KELP,  << , 2023.0, 1, 33200), (KELP,  << , 2024.0, 10, 33200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33000)], 'KELP': [(KELP,  << , 2023.0, 1, 33200), (KELP,  << , 2024.0, 10, 33200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2027$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33000)], 'KELP': [(KELP,  << , 2023.0, 1, 33200), (KELP,  << , 2024.0, 10, 33200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 33500)], 'KELP': [(KELP,  << , 2026.0, 1, 33500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33600)], 'KELP': [(KELP,  << , 2026.0, 1, 33500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33600)], 'KELP': [(KELP,  << , 2026.0, 1, 33500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=33900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33600)], 'KELP': [(KELP,  << , 2026.0, 1, 33500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 33900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33600)], 'KELP': [(KELP,  << , 2023.0, 1, 34000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 33600)], 'KELP': [(KELP,  << , 2023.0, 1, 34000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 34100), (RAINFOREST_RESIN,  << , 9996.0, 2, 34100)], 'KELP': [(KELP,  << , 2023.0, 1, 34000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 34100), (RAINFOREST_RESIN,  << , 9996.0, 2, 34100)], 'KELP': [(KELP,  << , 2022.0, 9, 34200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 34300)], 'KELP': [(KELP,  << , 2022.0, 9, 34200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 34300)], 'KELP': [(KELP,  << , 2022.0, 9, 34200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 34300)], 'KELP': [(KELP,  << , 2022.0, 9, 34200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 34300)], 'KELP': [(KELP,  << , 2023.0, 1, 34600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 34300)], 'KELP': [(KELP,  << , 2023.0, 1, 34600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=34900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 34300)], 'KELP': [(KELP,  << , 2023.0, 1, 34600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 34900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 34300)], 'KELP': [(KELP,  << , 2023.0, 1, 34600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 35000)], 'KELP': [(KELP,  << , 2025.0, 1, 35000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35100)], 'KELP': [(KELP,  << , 2025.0, 1, 35000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35100)], 'KELP': [(KELP,  << , 2025.0, 1, 35300), (KELP,  << , 2023.0, 8, 35300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35100)], 'KELP': [(KELP,  << , 2025.0, 1, 35300), (KELP,  << , 2023.0, 8, 35300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35400)], 'KELP': [(KELP,  << , 2025.0, 1, 35400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35400)], 'KELP': [(KELP,  << , 2025.0, 1, 35400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35400)], 'KELP': [(KELP,  << , 2025.0, 1, 35400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35400)], 'KELP': [(KELP,  << , 2023.0, 2, 35800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=35900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35400)], 'KELP': [(KELP,  << , 2023.0, 2, 35800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 35900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 35400)], 'KELP': [(KELP,  << , 2023.0, 2, 35800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 36100)], 'KELP': [(KELP,  << , 2023.0, 2, 35800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 36100)], 'KELP': [(KELP,  << , 2023.0, 2, 35800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 35800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 35800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2026$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2024.0, 1, 36400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 36500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 36500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 36500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=36900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 36500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 36900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 36500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 36500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2023.0, 2, 36500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2021.0, 1, 37300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2021.0, 1, 37300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 36200)], 'KELP': [(KELP,  << , 2021.0, 1, 37300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=37900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 37900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 1, 37800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 37500)], 'KELP': [(KELP,  << , 2020.0, 6, 38400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 38500)], 'KELP': [(KELP,  << , 2020.0, 6, 38400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 38600)], 'KELP': [(KELP,  << , 2019.0, 1, 38600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 38600)], 'KELP': [(KELP,  << , 2019.0, 1, 38600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=38900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 38800)], 'KELP': [(KELP,  << , 2019.0, 1, 38600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 38900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 38800)], 'KELP': [(KELP,  << , 2019.0, 1, 38600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 38800)], 'KELP': [(KELP,  << , 2019.0, 1, 38600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39200)], 'KELP': [(KELP,  << , 2022.0, 1, 39200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39200)], 'KELP': [(KELP,  << , 2022.0, 1, 39200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39200)], 'KELP': [(KELP,  << , 2022.0, 1, 39200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 39400)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=39900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 39900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2022.0, 1, 39400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2019.0, 1, 40500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2019.0, 1, 40500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2019.0, 1, 40500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2019.0, 1, 40500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=40900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 39500)], 'KELP': [(KELP,  << , 2019.0, 1, 40500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 40900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 1, 41000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 2, 41100), (KELP,  << , 2018.0, 1, 41100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 2, 41100), (KELP,  << , 2018.0, 1, 41100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 2, 41100), (KELP,  << , 2018.0, 1, 41100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 2, 41100), (KELP,  << , 2018.0, 1, 41100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2019.0, 5, 41500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2019.0, 5, 41500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 1, 41700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 1, 41700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=41900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2020.0, 1, 41900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 41900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 1, 42000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 1, 42000), (KELP,  << , 2020.0, 5, 42000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 1, 42000), (KELP,  << , 2020.0, 5, 42000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2018.0, 1, 42000), (KELP,  << , 2020.0, 5, 42000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2019.0, 1, 42400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 40900), (RAINFOREST_RESIN,  << , 10004.0, 1, 40900), (RAINFOREST_RESIN,  << , 10004.0, 8, 40900)], 'KELP': [(KELP,  << , 2019.0, 1, 42400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 42500), (RAINFOREST_RESIN,  << , 10002.0, 1, 42500)], 'KELP': [(KELP,  << , 2019.0, 1, 42500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 42600)], 'KELP': [(KELP,  << , 2019.0, 2, 42600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 42600)], 'KELP': [(KELP,  << , 2019.0, 2, 42600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=42900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 42600)], 'KELP': [(KELP,  << , 2019.0, 2, 42600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 42900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2022.0, 2, 42900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2022.0, 2, 42900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2022.0, 2, 42900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2022.0, 2, 42900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2022.0, 2, 42900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=43900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 42900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 43900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2020.0, 1, 43500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2021.0, 1, 44500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2021.0, 1, 44500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 43900)], 'KELP': [(KELP,  << , 2021.0, 1, 44500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=44900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 44800)], 'KELP': [(KELP,  << , 2021.0, 1, 44500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 44900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 44800)], 'KELP': [(KELP,  << , 2021.0, 1, 44500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2021.0, 1, 44500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2021.0, 1, 44500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2021.0, 1, 44500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2018.0, 1, 45400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2018.0, 1, 45400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2019.0, 3, 45500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2019.0, 3, 45500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2018.0, 1, 45800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=45900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 45000)], 'KELP': [(KELP,  << , 2018.0, 1, 45800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 45900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 45900), (RAINFOREST_RESIN,  << , 10004.0, 1, 45900)], 'KELP': [(KELP,  << , 2022.0, 2, 45900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 45900), (RAINFOREST_RESIN,  << , 10004.0, 1, 45900)], 'KELP': [(KELP,  << , 2022.0, 2, 45900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 45900), (RAINFOREST_RESIN,  << , 10004.0, 1, 45900)], 'KELP': [(KELP,  << , 2022.0, 2, 45900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 45900), (RAINFOREST_RESIN,  << , 10004.0, 1, 45900)], 'KELP': [(KELP,  << , 2022.0, 2, 45900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 45900), (RAINFOREST_RESIN,  << , 10004.0, 1, 45900)], 'KELP': [(KELP,  << , 2022.0, 2, 45900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 45900), (RAINFOREST_RESIN,  << , 10004.0, 1, 45900)], 'KELP': [(KELP,  << , 2022.0, 2, 45900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 45900), (RAINFOREST_RESIN,  << , 10004.0, 1, 45900)], 'KELP': [(KELP,  << , 2022.0, 2, 45900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 46600)], 'KELP': [(KELP,  << , 2019.0, 2, 46600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 46600)], 'KELP': [(KELP,  << , 2019.0, 2, 46600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=46900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 46600)], 'KELP': [(KELP,  << , 2019.0, 2, 46600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 46900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 46600)], 'KELP': [(KELP,  << , 2021.0, 1, 46900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 46600)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 47100)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 47100)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 47100)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 47500)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 47500)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 47500)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 47500)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=47900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 47500)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 47900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 47500)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 47500)], 'KELP': [(KELP,  << , 2019.0, 4, 47100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 48100)], 'KELP': [(KELP,  << , 2019.0, 1, 48100), (KELP,  << , 2019.0, 1, 48100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 48100)], 'KELP': [(KELP,  << , 2019.0, 1, 48100), (KELP,  << , 2019.0, 1, 48100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 48100)], 'KELP': [(KELP,  << , 2019.0, 1, 48100), (KELP,  << , 2019.0, 1, 48100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 48100)], 'KELP': [(KELP,  << , 2019.0, 1, 48100), (KELP,  << , 2019.0, 1, 48100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 48100)], 'KELP': [(KELP,  << , 2019.0, 1, 48600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2019.0, 1, 48600), (KELP,  << , 2019.0, 1, 48600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2019.0, 1, 48600), (KELP,  << , 2019.0, 1, 48600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=48900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2019.0, 1, 48600), (KELP,  << , 2019.0, 1, 48600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 48900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2019.0, 1, 49000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2019.0, 1, 49000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2019.0, 1, 49000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2019.0, 1, 49300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2019.0, 1, 49300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2021.0, 9, 49400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2022.0, 6, 49500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2021.0, 1, 49600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 48600)], 'KELP': [(KELP,  << , 2021.0, 1, 49600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=49900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 6, 49900)], 'KELP': [(KELP,  << , 2020.0, 5, 49800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 49900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 6, 49900), (RAINFOREST_RESIN,  << , 10005.0, 2, 49900)], 'KELP': [(KELP,  << , 2023.0, 2, 49900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 6, 49900), (RAINFOREST_RESIN,  << , 10005.0, 2, 49900)], 'KELP': [(KELP,  << , 2023.0, 2, 49900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 6, 49900), (RAINFOREST_RESIN,  << , 10005.0, 2, 49900)], 'KELP': [(KELP,  << , 2023.0, 2, 49900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 6, 49900), (RAINFOREST_RESIN,  << , 10005.0, 2, 49900)], 'KELP': [(KELP,  << , 2023.0, 2, 49900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 50400)], 'KELP': [(KELP,  << , 2023.0, 2, 49900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 50400)], 'KELP': [(KELP,  << , 2023.0, 2, 49900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 50400)], 'KELP': [(KELP,  << , 2020.0, 2, 50600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 2, 50600), (KELP,  << , 2019.0, 1, 50600), (KELP,  << , 2020.0, 6, 50600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 2, 50600), (KELP,  << , 2019.0, 1, 50600), (KELP,  << , 2020.0, 6, 50600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=50900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 2, 50600), (KELP,  << , 2019.0, 1, 50600), (KELP,  << , 2020.0, 6, 50600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 50900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 2, 50600), (KELP,  << , 2019.0, 1, 50600), (KELP,  << , 2020.0, 6, 50600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 2, 50600), (KELP,  << , 2019.0, 1, 50600), (KELP,  << , 2020.0, 6, 50600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 2, 50600), (KELP,  << , 2019.0, 1, 50600), (KELP,  << , 2020.0, 6, 50600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 2, 50600), (KELP,  << , 2019.0, 1, 50600), (KELP,  << , 2020.0, 6, 50600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 13, 51300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 13, 51300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 50600)], 'KELP': [(KELP,  << , 2020.0, 13, 51300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 51600), (RAINFOREST_RESIN,  << , 10002.0, 1, 51600)], 'KELP': [(KELP,  << , 2020.0, 4, 51700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 11, 51700)], 'KELP': [(KELP,  << , 2020.0, 4, 51700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=51900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 11, 51700)], 'KELP': [(KELP,  << , 2020.0, 4, 51700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 51900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 51900)], 'KELP': [(KELP,  << , 2020.0, 4, 51700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 51900)], 'KELP': [(KELP,  << , 2020.0, 4, 51700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 52100)], 'KELP': [(KELP,  << , 2020.0, 4, 51700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 52100)], 'KELP': [(KELP,  << , 2020.0, 4, 51700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 52300)], 'KELP': [(KELP,  << , 2022.0, 1, 52300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 52300)], 'KELP': [(KELP,  << , 2022.0, 1, 52300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 52300)], 'KELP': [(KELP,  << , 2022.0, 1, 52300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 52300)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 52300)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=52900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 52300)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 52900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=53900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 52900)], 'KELP': [(KELP,  << , 2019.0, 1, 52700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 53900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 53900)], 'KELP': [(KELP,  << , 2023.0, 2, 53900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 53900)], 'KELP': [(KELP,  << , 2023.0, 2, 53900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 54100)], 'KELP': [(KELP,  << , 2020.0, 1, 54100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 54100)], 'KELP': [(KELP,  << , 2020.0, 1, 54100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 54300), (RAINFOREST_RESIN,  << , 10004.0, 1, 54300)], 'KELP': [(KELP,  << , 2022.0, 1, 54300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 54300), (RAINFOREST_RESIN,  << , 10004.0, 1, 54300)], 'KELP': [(KELP,  << , 2022.0, 1, 54300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 54300), (RAINFOREST_RESIN,  << , 10004.0, 1, 54300)], 'KELP': [(KELP,  << , 2022.0, 1, 54300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 54600)], 'KELP': [(KELP,  << , 2022.0, 1, 54300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 54600)], 'KELP': [(KELP,  << , 2020.0, 4, 54700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=54900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 54600)], 'KELP': [(KELP,  << , 2020.0, 4, 54700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 54900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 54600)], 'KELP': [(KELP,  << , 2019.0, 1, 55000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 54600)], 'KELP': [(KELP,  << , 2019.0, 1, 55000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 55100)], 'KELP': [(KELP,  << , 2019.0, 2, 55200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 55100)], 'KELP': [(KELP,  << , 2019.0, 2, 55200), (KELP,  << , 2019.0, 3, 55200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 55100)], 'KELP': [(KELP,  << , 2019.0, 2, 55200), (KELP,  << , 2019.0, 3, 55200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 55100)], 'KELP': [(KELP,  << , 2019.0, 2, 55200), (KELP,  << , 2019.0, 3, 55200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 55100)], 'KELP': [(KELP,  << , 2019.0, 2, 55200), (KELP,  << , 2019.0, 3, 55200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 55100)], 'KELP': [(KELP,  << , 2019.0, 2, 55200), (KELP,  << , 2019.0, 3, 55200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=55900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 55900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2019.0, 1, 55700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2020.0, 2, 56700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2020.0, 2, 56700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=56900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2020.0, 2, 56700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 56900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2020.0, 2, 56700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2020.0, 2, 56700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 55700)], 'KELP': [(KELP,  << , 2020.0, 2, 56700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 57200)], 'KELP': [(KELP,  << , 2019.0, 1, 57200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 57200)], 'KELP': [(KELP,  << , 2019.0, 1, 57200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 57200)], 'KELP': [(KELP,  << , 2019.0, 1, 57200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 57200)], 'KELP': [(KELP,  << , 2019.0, 5, 57500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 57200)], 'KELP': [(KELP,  << , 2019.0, 5, 57500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 57800)], 'KELP': [(KELP,  << , 2019.0, 5, 57500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=57900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 57800)], 'KELP': [(KELP,  << , 2019.0, 5, 57500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 57900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 57900)], 'KELP': [(KELP,  << , 2018.0, 2, 57900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 58000)], 'KELP': [(KELP,  << , 2020.0, 1, 58000), (KELP,  << , 2020.0, 11, 58000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 3, 58100)], 'KELP': [(KELP,  << , 2020.0, 1, 58000), (KELP,  << , 2020.0, 11, 58000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 3, 58100)], 'KELP': [(KELP,  << , 2020.0, 1, 58000), (KELP,  << , 2020.0, 11, 58000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 3, 58100)], 'KELP': [(KELP,  << , 2020.0, 1, 58000), (KELP,  << , 2020.0, 11, 58000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 3, 58100)], 'KELP': [(KELP,  << , 2016.0, 15, 58400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 3, 58100)], 'KELP': [(KELP,  << , 2016.0, 15, 58400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 58600)], 'KELP': [(KELP,  << , 2016.0, 15, 58400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 58600)], 'KELP': [(KELP,  << , 2016.0, 15, 58400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=58900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 12, 58800)], 'KELP': [(KELP,  << , 2016.0, 15, 58400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 58900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 12, 58800)], 'KELP': [(KELP,  << , 2016.0, 15, 58400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 12, 58800)], 'KELP': [(KELP,  << , 2016.0, 15, 58400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2019.0, 1, 59100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2016.0, 1, 59300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2016.0, 1, 59300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2016.0, 1, 59300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2016.0, 1, 59300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2016.0, 1, 59300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2016.0, 1, 59300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=59900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2016.0, 1, 59300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 59900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 59100)], 'KELP': [(KELP,  << , 2016.0, 1, 59300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 60000), (RAINFOREST_RESIN,  << , 10005.0, 1, 60000)], 'KELP': [(KELP,  << , 2018.0, 1, 60000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 60000), (RAINFOREST_RESIN,  << , 10005.0, 1, 60000)], 'KELP': [(KELP,  << , 2016.0, 1, 60200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2016.0, 1, 60200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2016.0, 1, 60200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2016.0, 1, 60200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2016.0, 1, 60200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2017.0, 1, 60700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2015.0, 1, 60800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=60900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2015.0, 3, 60900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 60900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2015.0, 3, 60900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2015.0, 3, 60900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2015.0, 3, 60900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2016.0, 2, 61200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2016.0, 2, 61200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2016.0, 2, 61200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2016.0, 2, 61200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2014.0, 1, 61700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2014.0, 1, 61700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=61900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 60200)], 'KELP': [(KELP,  << , 2014.0, 1, 61700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 61900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 61900)], 'KELP': [(KELP,  << , 2017.0, 2, 61900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 61900)], 'KELP': [(KELP,  << , 2016.0, 1, 62000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 62200)], 'KELP': [(KELP,  << , 2016.0, 1, 62000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 62200)], 'KELP': [(KELP,  << , 2016.0, 1, 62000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 62300)], 'KELP': [(KELP,  << , 2016.0, 1, 62000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 62300)], 'KELP': [(KELP,  << , 2016.0, 1, 62000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 62300)], 'KELP': [(KELP,  << , 2016.0, 1, 62000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 62300)], 'KELP': [(KELP,  << , 2016.0, 1, 62000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 62300)], 'KELP': [(KELP,  << , 2015.0, 1, 62800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=62900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 62300)], 'KELP': [(KELP,  << , 2015.0, 1, 62800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 62900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2018.0, 1, 63000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2016.0, 1, 63100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2016.0, 1, 63100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2016.0, 1, 63100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2018.0, 5, 63400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2018.0, 5, 63400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2018.0, 5, 63400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2018.0, 1, 63600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2016.0, 1, 63800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=63900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 62900)], 'KELP': [(KELP,  << , 2016.0, 1, 63800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 63900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 12, 63900)], 'KELP': [(KELP,  << , 2016.0, 1, 63800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 64000)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 64000)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 64200), (RAINFOREST_RESIN,  << , 9996.0, 2, 64200)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 64200), (RAINFOREST_RESIN,  << , 9996.0, 2, 64200)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 64500)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 64500)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 64500)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 64500)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=64900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 64500)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 64900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 64500)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 65000)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 65100), (RAINFOREST_RESIN,  << , 9996.0, 1, 65100)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 65100), (RAINFOREST_RESIN,  << , 9996.0, 1, 65100)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 65300)], 'KELP': [(KELP,  << , 2016.0, 1, 64000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 65300)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 65300)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 65300)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 65300)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=65900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 65300)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 65900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2016.0, 3, 65400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2018.0, 1, 66300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2018.0, 1, 66300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2018.0, 1, 66300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2018.0, 1, 66300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2018.0, 1, 66300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=66900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2018.0, 1, 66300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 66900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2017.0, 1, 66900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2017.0, 1, 66900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 66000)], 'KELP': [(KELP,  << , 2015.0, 1, 67200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 67300)], 'KELP': [(KELP,  << , 2015.0, 1, 67200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 67300)], 'KELP': [(KELP,  << , 2015.0, 1, 67200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 67300)], 'KELP': [(KELP,  << , 2015.0, 1, 67500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 67300)], 'KELP': [(KELP,  << , 2015.0, 1, 67500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 67300)], 'KELP': [(KELP,  << , 2018.0, 12, 67600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 67300)], 'KELP': [(KELP,  << , 2018.0, 12, 67600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=67900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 67300)], 'KELP': [(KELP,  << , 2018.0, 12, 67600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 67900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 67300)], 'KELP': [(KELP,  << , 2018.0, 12, 67600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2015.0, 6, 68000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2015.0, 6, 68000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2017.0, 1, 68200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2017.0, 1, 68300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2017.0, 1, 68300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2015.0, 1, 68600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2015.0, 1, 68600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2015.0, 1, 68600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=68900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2015.0, 1, 68600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 68900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2017.0, 1, 68900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2017.0, 1, 69100), (KELP,  << , 2015.0, 8, 69100), (KELP,  << , 2015.0, 1, 69100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2017.0, 1, 69100), (KELP,  << , 2015.0, 8, 69100), (KELP,  << , 2015.0, 1, 69100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 68100)], 'KELP': [(KELP,  << , 2017.0, 2, 69200), (KELP,  << , 2017.0, 1, 69200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 69300)], 'KELP': [(KELP,  << , 2017.0, 1, 69300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 69300)], 'KELP': [(KELP,  << , 2017.0, 1, 69300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 69300)], 'KELP': [(KELP,  << , 2015.0, 1, 69600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 69300)], 'KELP': [(KELP,  << , 2015.0, 1, 69600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 69700)], 'KELP': [(KELP,  << , 2015.0, 2, 69700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=69900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 69700)], 'KELP': [(KELP,  << , 2015.0, 2, 69700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 69900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 69700)], 'KELP': [(KELP,  << , 2015.0, 2, 69700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 69700)], 'KELP': [(KELP,  << , 2015.0, 1, 70100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 69700)], 'KELP': [(KELP,  << , 2015.0, 1, 70100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 70300)], 'KELP': [(KELP,  << , 2015.0, 1, 70100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 70300)], 'KELP': [(KELP,  << , 2015.0, 1, 70100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 70300)], 'KELP': [(KELP,  << , 2015.0, 1, 70100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 70300)], 'KELP': [(KELP,  << , 2015.0, 1, 70100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 70600)], 'KELP': [(KELP,  << , 2015.0, 2, 70600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 70600)], 'KELP': [(KELP,  << , 2015.0, 1, 70800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=70900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 70600)], 'KELP': [(KELP,  << , 2015.0, 1, 70800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 70900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 70600)], 'KELP': [(KELP,  << , 2015.0, 1, 70800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 70600)], 'KELP': [(KELP,  << , 2015.0, 1, 70800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 70600)], 'KELP': [(KELP,  << , 2015.0, 1, 71200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 71200)], 'KELP': [(KELP,  << , 2015.0, 1, 71200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 71200)], 'KELP': [(KELP,  << , 2015.0, 1, 71200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 71500)], 'KELP': [(KELP,  << , 2015.0, 3, 71500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 71500)], 'KELP': [(KELP,  << , 2015.0, 3, 71500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 71500)], 'KELP': [(KELP,  << , 2015.0, 3, 71500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 71500)], 'KELP': [(KELP,  << , 2014.0, 8, 71700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=71900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 71500)], 'KELP': [(KELP,  << , 2014.0, 8, 71700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 71900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 71900)], 'KELP': [(KELP,  << , 2017.0, 1, 72000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 71900)], 'KELP': [(KELP,  << , 2017.0, 1, 72000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 71900)], 'KELP': [(KELP,  << , 2017.0, 1, 72000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 71900)], 'KELP': [(KELP,  << , 2017.0, 1, 72000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 71900)], 'KELP': [(KELP,  << , 2017.0, 1, 72000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 72400)], 'KELP': [(KELP,  << , 2017.0, 1, 72000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 72500)], 'KELP': [(KELP,  << , 2017.0, 1, 72500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 72500)], 'KELP': [(KELP,  << , 2017.0, 1, 72500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 72500)], 'KELP': [(KELP,  << , 2017.0, 1, 72500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=72900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 72500)], 'KELP': [(KELP,  << , 2017.0, 1, 72500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 72900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73000)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2014.0, 1, 73000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=73900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2015.0, 5, 73900), (KELP,  << , 2015.0, 3, 73900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 73900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 73100)], 'KELP': [(KELP,  << , 2015.0, 5, 73900), (KELP,  << , 2015.0, 3, 73900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2015.0, 5, 73900), (KELP,  << , 2015.0, 3, 73900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2015.0, 5, 73900), (KELP,  << , 2015.0, 3, 73900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2014.0, 1, 74300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2014.0, 1, 74300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2014.0, 1, 74300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2014.0, 1, 74300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2014.0, 1, 74300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2014.0, 1, 74300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=74900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74000)], 'KELP': [(KELP,  << , 2014.0, 1, 74300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 74900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 74900)], 'KELP': [(KELP,  << , 2014.0, 1, 74300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 75000), (RAINFOREST_RESIN,  << , 9998.0, 1, 75000)], 'KELP': [(KELP,  << , 2016.0, 1, 75000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 75000), (RAINFOREST_RESIN,  << , 9998.0, 1, 75000)], 'KELP': [(KELP,  << , 2016.0, 1, 75000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 75000), (RAINFOREST_RESIN,  << , 9998.0, 1, 75000)], 'KELP': [(KELP,  << , 2016.0, 1, 75000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 75000), (RAINFOREST_RESIN,  << , 9998.0, 1, 75000)], 'KELP': [(KELP,  << , 2016.0, 1, 75000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 75000), (RAINFOREST_RESIN,  << , 9998.0, 1, 75000)], 'KELP': [(KELP,  << , 2016.0, 1, 75000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 75500)], 'KELP': [(KELP,  << , 2014.0, 2, 75500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 75600)], 'KELP': [(KELP,  << , 2014.0, 2, 75500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 75600)], 'KELP': [(KELP,  << , 2014.0, 2, 75500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=75900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 75600)], 'KELP': [(KELP,  << , 2014.0, 2, 75500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 75900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 75600)], 'KELP': [(KELP,  << , 2014.0, 6, 75900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 75600)], 'KELP': [(KELP,  << , 2014.0, 6, 75900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 6, 75900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 14, 76200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 14, 76200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 14, 76200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 14, 76200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 14, 76200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 14, 76200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=76900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 2, 76900), (KELP,  << , 2014.0, 3, 76900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 76900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 76100)], 'KELP': [(KELP,  << , 2014.0, 2, 76900), (KELP,  << , 2014.0, 3, 76900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2016.0, 2, 77000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2014.0, 1, 77200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2014.0, 1, 77200), (KELP,  << , 2012.0, 10, 77200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2014.0, 1, 77200), (KELP,  << , 2012.0, 10, 77200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2014.0, 1, 77200), (KELP,  << , 2012.0, 10, 77200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2014.0, 1, 77200), (KELP,  << , 2012.0, 10, 77200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2012.0, 3, 77600), (KELP,  << , 2012.0, 7, 77600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2012.0, 3, 77600), (KELP,  << , 2012.0, 7, 77600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=77900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 77000)], 'KELP': [(KELP,  << , 2012.0, 3, 77600), (KELP,  << , 2012.0, 7, 77600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 77900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 77900)], 'KELP': [(KELP,  << , 2012.0, 3, 77600), (KELP,  << , 2012.0, 7, 77600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 77900)], 'KELP': [(KELP,  << , 2013.0, 1, 78100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 78100)], 'KELP': [(KELP,  << , 2013.0, 1, 78100), (KELP,  << , 2014.0, 3, 78100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 78100)], 'KELP': [(KELP,  << , 2013.0, 1, 78100), (KELP,  << , 2014.0, 3, 78100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 78100)], 'KELP': [(KELP,  << , 2013.0, 1, 78100), (KELP,  << , 2014.0, 3, 78100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 78100)], 'KELP': [(KELP,  << , 2013.0, 1, 78100), (KELP,  << , 2014.0, 3, 78100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 78500), (RAINFOREST_RESIN,  << , 10004.0, 10, 78500)], 'KELP': [(KELP,  << , 2013.0, 1, 78100), (KELP,  << , 2014.0, 3, 78100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 78500), (RAINFOREST_RESIN,  << , 10004.0, 10, 78500)], 'KELP': [(KELP,  << , 2013.0, 2, 78700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 78500), (RAINFOREST_RESIN,  << , 10004.0, 10, 78500)], 'KELP': [(KELP,  << , 2013.0, 2, 78700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=78900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 78800)], 'KELP': [(KELP,  << , 2013.0, 2, 78700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 78900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 78900)], 'KELP': [(KELP,  << , 2013.0, 3, 79000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 78900)], 'KELP': [(KELP,  << , 2013.0, 1, 79100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 78900)], 'KELP': [(KELP,  << , 2013.0, 1, 79100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79200)], 'KELP': [(KELP,  << , 2014.0, 5, 79200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79200)], 'KELP': [(KELP,  << , 2013.0, 1, 79400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79200)], 'KELP': [(KELP,  << , 2013.0, 1, 79400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79200)], 'KELP': [(KELP,  << , 2013.0, 1, 79400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79200)], 'KELP': [(KELP,  << , 2013.0, 13, 79600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79200)], 'KELP': [(KELP,  << , 2013.0, 13, 79600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=79900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 79900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 79900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=80900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 80900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 80900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 80900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2013.0, 1, 80900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 79900)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 81400)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 81400)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 81400)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 81400)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=81900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 81800)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 81900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2015.0, 1, 81100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2015.0, 1, 82500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2016.0, 1, 82600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2016.0, 1, 82600), (KELP,  << , 2016.0, 3, 82600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 81900)], 'KELP': [(KELP,  << , 2016.0, 1, 82600), (KELP,  << , 2016.0, 3, 82600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=82900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 82800)], 'KELP': [(KELP,  << , 2018.0, 1, 82800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 82900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 82800)], 'KELP': [(KELP,  << , 2018.0, 1, 82800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 82800)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=83900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 83900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 83100)], 'KELP': [(KELP,  << , 2016.0, 1, 83100), (KELP,  << , 2016.0, 3, 83100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 84100), (RAINFOREST_RESIN,  << , 9996.0, 8, 84100)], 'KELP': [(KELP,  << , 2016.0, 1, 84200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 84200), (RAINFOREST_RESIN,  << , 9996.0, 1, 84200)], 'KELP': [(KELP,  << , 2016.0, 1, 84200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2016.0, 1, 84200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 84500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 84500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 84500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 84500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=84900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 84500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 84900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 84500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 84500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2018.0, 14, 85100), (KELP,  << , 2015.0, 13, 85100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2018.0, 14, 85100), (KELP,  << , 2015.0, 13, 85100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2018.0, 14, 85100), (KELP,  << , 2015.0, 13, 85100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2018.0, 14, 85100), (KELP,  << , 2015.0, 13, 85100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2018.0, 14, 85100), (KELP,  << , 2015.0, 13, 85100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2018.0, 14, 85100), (KELP,  << , 2015.0, 13, 85100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 85800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=85900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 84300)], 'KELP': [(KELP,  << , 2015.0, 1, 85800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 85900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 85900)], 'KELP': [(KELP,  << , 2015.0, 1, 85800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 85900)], 'KELP': [(KELP,  << , 2015.0, 1, 85800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 86100)], 'KELP': [(KELP,  << , 2015.0, 3, 86200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 86100)], 'KELP': [(KELP,  << , 2015.0, 3, 86200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 86100)], 'KELP': [(KELP,  << , 2015.0, 3, 86200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 86100)], 'KELP': [(KELP,  << , 2015.0, 3, 86200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 86100)], 'KELP': [(KELP,  << , 2015.0, 3, 86200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 86700)], 'KELP': [(KELP,  << , 2015.0, 1, 86700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 86700)], 'KELP': [(KELP,  << , 2015.0, 1, 86700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=86900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 86700)], 'KELP': [(KELP,  << , 2015.0, 1, 86700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 86900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 86700)], 'KELP': [(KELP,  << , 2015.0, 1, 86700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 86700)], 'KELP': [(KELP,  << , 2015.0, 1, 86700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 86700)], 'KELP': [(KELP,  << , 2015.0, 1, 86700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 87200)], 'KELP': [(KELP,  << , 2015.0, 1, 86700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 87200)], 'KELP': [(KELP,  << , 2015.0, 1, 87400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 87200)], 'KELP': [(KELP,  << , 2015.0, 1, 87400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 87200)], 'KELP': [(KELP,  << , 2015.0, 1, 87400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 87200)], 'KELP': [(KELP,  << , 2013.0, 1, 87700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 87200)], 'KELP': [(KELP,  << , 2013.0, 1, 87700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=87900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 87200)], 'KELP': [(KELP,  << , 2013.0, 1, 87700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 87900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 87900)], 'KELP': [(KELP,  << , 2017.0, 1, 87900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2013.0, 2, 88000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2017.0, 8, 88100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2014.0, 1, 88300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2014.0, 1, 88300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2016.0, 1, 88500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2016.0, 1, 88500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2016.0, 1, 88500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2016.0, 1, 88500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=88900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2014.0, 1, 88900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 88900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2014.0, 1, 88900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 88000)], 'KELP': [(KELP,  << , 2014.0, 1, 88900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 89200)], 'KELP': [(KELP,  << , 2014.0, 1, 89100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 89200)], 'KELP': [(KELP,  << , 2014.0, 1, 89100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 89200)], 'KELP': [(KELP,  << , 2014.0, 1, 89100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 89200)], 'KELP': [(KELP,  << , 2014.0, 1, 89100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 89200)], 'KELP': [(KELP,  << , 2014.0, 1, 89100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 89600)], 'KELP': [(KELP,  << , 2016.0, 6, 89600), (KELP,  << , 2016.0, 2, 89600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 89600)], 'KELP': [(KELP,  << , 2014.0, 1, 89800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=89900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 89600)], 'KELP': [(KELP,  << , 2014.0, 1, 89800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 89900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90000), (RAINFOREST_RESIN,  << , 9998.0, 1, 90000)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 90100)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 90100)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=90900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2014.0, 2, 89900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 90900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2017.0, 1, 90900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 90300)], 'KELP': [(KELP,  << , 2017.0, 1, 91000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 91100)], 'KELP': [(KELP,  << , 2015.0, 1, 91100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 91200)], 'KELP': [(KELP,  << , 2015.0, 1, 91200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 91200)], 'KELP': [(KELP,  << , 2015.0, 1, 91200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 91200)], 'KELP': [(KELP,  << , 2015.0, 1, 91200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 91200)], 'KELP': [(KELP,  << , 2015.0, 15, 91500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 91200)], 'KELP': [(KELP,  << , 2015.0, 15, 91500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 91700)], 'KELP': [(KELP,  << , 2015.0, 15, 91500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=91900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 91700)], 'KELP': [(KELP,  << , 2015.0, 15, 91500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 91900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 91700)], 'KELP': [(KELP,  << , 2015.0, 15, 91500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 91700)], 'KELP': [(KELP,  << , 2015.0, 15, 91500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 92100)], 'KELP': [(KELP,  << , 2015.0, 15, 91500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 92200), (RAINFOREST_RESIN,  << , 9996.0, 1, 92200)], 'KELP': [(KELP,  << , 2015.0, 8, 92200), (KELP,  << , 2015.0, 2, 92200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 92200), (RAINFOREST_RESIN,  << , 9996.0, 1, 92200)], 'KELP': [(KELP,  << , 2018.0, 12, 92300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 92200), (RAINFOREST_RESIN,  << , 9996.0, 1, 92200)], 'KELP': [(KELP,  << , 2018.0, 12, 92300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 92200), (RAINFOREST_RESIN,  << , 9996.0, 1, 92200)], 'KELP': [(KELP,  << , 2018.0, 12, 92300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 92700)], 'KELP': [(KELP,  << , 2015.0, 1, 92700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 92700), (RAINFOREST_RESIN,  << , 10002.0, 1, 92700)], 'KELP': [(KELP,  << , 2015.0, 1, 92700), (KELP,  << , 2016.0, 1, 92700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=92900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 92700), (RAINFOREST_RESIN,  << , 10002.0, 1, 92700)], 'KELP': [(KELP,  << , 2015.0, 1, 92700), (KELP,  << , 2016.0, 1, 92700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 92900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 92900)], 'KELP': [(KELP,  << , 2016.0, 1, 92900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 92900)], 'KELP': [(KELP,  << , 2016.0, 1, 92900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 92900)], 'KELP': [(KELP,  << , 2019.0, 1, 93200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 92900)], 'KELP': [(KELP,  << , 2019.0, 1, 93200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 92900)], 'KELP': [(KELP,  << , 2019.0, 1, 93300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 93400)], 'KELP': [(KELP,  << , 2019.0, 1, 93300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 93400)], 'KELP': [(KELP,  << , 2019.0, 1, 93300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 93600)], 'KELP': [(KELP,  << , 2023.0, 1, 93600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 93600)], 'KELP': [(KELP,  << , 2023.0, 1, 93600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=93900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 93800)], 'KELP': [(KELP,  << , 2023.0, 1, 93600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 93900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 93800)], 'KELP': [(KELP,  << , 2023.0, 1, 93600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 93800)], 'KELP': [(KELP,  << , 2023.0, 1, 93600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 94200)], 'KELP': [(KELP,  << , 2023.0, 1, 93600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 94200)], 'KELP': [(KELP,  << , 2023.0, 1, 93600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 94300)], 'KELP': [(KELP,  << , 2023.0, 1, 93600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 94400)], 'KELP': [(KELP,  << , 2023.0, 1, 94400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 94600)], 'KELP': [(KELP,  << , 2023.0, 1, 94400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 94600)], 'KELP': [(KELP,  << , 2023.0, 1, 94400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 94600)], 'KELP': [(KELP,  << , 2023.0, 1, 94400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=94900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 94600)], 'KELP': [(KELP,  << , 2023.0, 1, 94400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 94900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 94600)], 'KELP': [(KELP,  << , 2023.0, 6, 94900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 95000), (RAINFOREST_RESIN,  << , 10005.0, 1, 95000)], 'KELP': [(KELP,  << , 2023.0, 1, 95000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 95000), (RAINFOREST_RESIN,  << , 10005.0, 1, 95000)], 'KELP': [(KELP,  << , 2023.0, 1, 95000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 95000), (RAINFOREST_RESIN,  << , 10005.0, 1, 95000)], 'KELP': [(KELP,  << , 2023.0, 1, 95000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 95000), (RAINFOREST_RESIN,  << , 10005.0, 1, 95000)], 'KELP': [(KELP,  << , 2023.0, 1, 95000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 95000), (RAINFOREST_RESIN,  << , 10005.0, 1, 95000)], 'KELP': [(KELP,  << , 2023.0, 1, 95000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 95000), (RAINFOREST_RESIN,  << , 10005.0, 1, 95000)], 'KELP': [(KELP,  << , 2018.0, 1, 95600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 95000), (RAINFOREST_RESIN,  << , 10005.0, 1, 95000)], 'KELP': [(KELP,  << , 2018.0, 1, 95600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 95700)], 'KELP': [(KELP,  << , 2018.0, 1, 95600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=95900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 7, 95800)], 'KELP': [(KELP,  << , 2018.0, 1, 95600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 95900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 7, 95800)], 'KELP': [(KELP,  << , 2018.0, 1, 95600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 96000)], 'KELP': [(KELP,  << , 2016.0, 2, 96000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 96000)], 'KELP': [(KELP,  << , 2017.0, 1, 96200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 96200)], 'KELP': [(KELP,  << , 2016.0, 1, 96300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 96200)], 'KELP': [(KELP,  << , 2016.0, 1, 96300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 96200)], 'KELP': [(KELP,  << , 2016.0, 1, 96300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 96200)], 'KELP': [(KELP,  << , 2016.0, 1, 96300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 96200)], 'KELP': [(KELP,  << , 2016.0, 1, 96300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 96200)], 'KELP': [(KELP,  << , 2016.0, 1, 96300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=96900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 96800)], 'KELP': [(KELP,  << , 2016.0, 1, 96300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 96900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 96800)], 'KELP': [(KELP,  << , 2018.0, 14, 96900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 96800)], 'KELP': [(KELP,  << , 2018.0, 14, 96900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 97100)], 'KELP': [(KELP,  << , 2018.0, 1, 97100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 97100)], 'KELP': [(KELP,  << , 2018.0, 1, 97300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 97100)], 'KELP': [(KELP,  << , 2018.0, 1, 97300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 97100)], 'KELP': [(KELP,  << , 2018.0, 1, 97300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 97100)], 'KELP': [(KELP,  << , 2018.0, 1, 97300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2021.0, 1, 97700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2021.0, 1, 97700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=97900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2018.0, 1, 97900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 97900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2018.0, 1, 97900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2018.0, 1, 97900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2018.0, 1, 97900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2018.0, 1, 97900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2018.0, 1, 97900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2020.0, 7, 98400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2020.0, 7, 98400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2020.0, 7, 98400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 7, 97600)], 'KELP': [(KELP,  << , 2020.0, 7, 98400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=98900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 98800)], 'KELP': [(KELP,  << , 2020.0, 1, 98800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 98900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 98800)], 'KELP': [(KELP,  << , 2018.0, 1, 99000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 98800)], 'KELP': [(KELP,  << , 2018.0, 1, 99000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 98800)], 'KELP': [(KELP,  << , 2018.0, 1, 99000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 98800)], 'KELP': [(KELP,  << , 2018.0, 1, 99000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 98800)], 'KELP': [(KELP,  << , 2018.0, 1, 99000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 99400)], 'KELP': [(KELP,  << , 2022.0, 2, 99400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 99400)], 'KELP': [(KELP,  << , 2022.0, 2, 99400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 99400)], 'KELP': [(KELP,  << , 2022.0, 2, 99400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 99400)], 'KELP': [(KELP,  << , 2022.0, 2, 99400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=99900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 99400)], 'KELP': [(KELP,  << , 2018.0, 1, 99900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 99900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 99400)], 'KELP': [(KELP,  << , 2018.0, 1, 99900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 100000)], 'KELP': [(KELP,  << , 2020.0, 1, 100000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 100200)], 'KELP': [(KELP,  << , 2020.0, 1, 100000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 100200)], 'KELP': [(KELP,  << , 2020.0, 1, 100000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 100200)], 'KELP': [(KELP,  << , 2020.0, 1, 100000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 100200)], 'KELP': [(KELP,  << , 2020.0, 1, 100000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 100500)], 'KELP': [(KELP,  << , 2020.0, 1, 100000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 100500)], 'KELP': [(KELP,  << , 2020.0, 1, 100000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 100700)], 'KELP': [(KELP,  << , 2020.0, 1, 100000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=100900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 100700)], 'KELP': [(KELP,  << , 2018.0, 8, 100900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 100900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 100700)], 'KELP': [(KELP,  << , 2018.0, 8, 100900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 100700)], 'KELP': [(KELP,  << , 2018.0, 8, 100900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 100700)], 'KELP': [(KELP,  << , 2019.0, 1, 101200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 101200)], 'KELP': [(KELP,  << , 2019.0, 1, 101200), (KELP,  << , 2022.0, 15, 101200), (KELP,  << , 2022.0, 2, 101200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 101200)], 'KELP': [(KELP,  << , 2019.0, 1, 101200), (KELP,  << , 2022.0, 15, 101200), (KELP,  << , 2022.0, 2, 101200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 101500)], 'KELP': [(KELP,  << , 2019.0, 1, 101500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 101500), (RAINFOREST_RESIN,  << , 10004.0, 2, 101500)], 'KELP': [(KELP,  << , 2019.0, 5, 101600), (KELP,  << , 2019.0, 1, 101600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 101500), (RAINFOREST_RESIN,  << , 10004.0, 2, 101500)], 'KELP': [(KELP,  << , 2019.0, 5, 101600), (KELP,  << , 2019.0, 1, 101600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 101500), (RAINFOREST_RESIN,  << , 10004.0, 2, 101500)], 'KELP': [(KELP,  << , 2019.0, 5, 101600), (KELP,  << , 2019.0, 1, 101600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=101900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 101500), (RAINFOREST_RESIN,  << , 10004.0, 2, 101500)], 'KELP': [(KELP,  << , 2019.0, 5, 101600), (KELP,  << , 2019.0, 1, 101600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 101900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 101500), (RAINFOREST_RESIN,  << , 10004.0, 2, 101500)], 'KELP': [(KELP,  << , 2019.0, 5, 101600), (KELP,  << , 2019.0, 1, 101600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 101500), (RAINFOREST_RESIN,  << , 10004.0, 2, 101500)], 'KELP': [(KELP,  << , 2019.0, 5, 101600), (KELP,  << , 2019.0, 1, 101600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 101500), (RAINFOREST_RESIN,  << , 10004.0, 2, 101500)], 'KELP': [(KELP,  << , 2021.0, 1, 102200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 102300)], 'KELP': [(KELP,  << , 2021.0, 1, 102200), (KELP,  << , 2021.0, 2, 102200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 102300)], 'KELP': [(KELP,  << , 2021.0, 1, 102200), (KELP,  << , 2021.0, 2, 102200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 102300)], 'KELP': [(KELP,  << , 2021.0, 1, 102200), (KELP,  << , 2021.0, 2, 102200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 102600), (RAINFOREST_RESIN,  << , 9998.0, 1, 102600)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 102600), (RAINFOREST_RESIN,  << , 9998.0, 1, 102600)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 102700)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=102900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 102700)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 102900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 102700)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 102700)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 102700)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 102700)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=103900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 103900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 2, 102600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 1, 104200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 1, 104300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 1, 104300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 1, 104300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 1, 104300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 103400)], 'KELP': [(KELP,  << , 2019.0, 1, 104300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 104700)], 'KELP': [(KELP,  << , 2019.0, 1, 104300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=104900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 104700)], 'KELP': [(KELP,  << , 2019.0, 1, 104300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 104900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 104900)], 'KELP': [(KELP,  << , 2021.0, 1, 104900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 104900)], 'KELP': [(KELP,  << , 2021.0, 1, 104900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 104900)], 'KELP': [(KELP,  << , 2018.0, 1, 105200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 104900)], 'KELP': [(KELP,  << , 2018.0, 1, 105200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 104900)], 'KELP': [(KELP,  << , 2018.0, 1, 105200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 105400)], 'KELP': [(KELP,  << , 2018.0, 1, 105200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 105400)], 'KELP': [(KELP,  << , 2018.0, 1, 105200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 105400)], 'KELP': [(KELP,  << , 2018.0, 1, 105200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 105400)], 'KELP': [(KELP,  << , 2020.0, 1, 105700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=105900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 105400)], 'KELP': [(KELP,  << , 2020.0, 1, 105700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 105900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 105400)], 'KELP': [(KELP,  << , 2018.0, 4, 106000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 105400)], 'KELP': [(KELP,  << , 2018.0, 4, 106000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 106100), (RAINFOREST_RESIN,  << , 9996.0, 5, 106100)], 'KELP': [(KELP,  << , 2018.0, 4, 106000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 106300)], 'KELP': [(KELP,  << , 2018.0, 1, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 106300)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 106300)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=106900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 106900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 106600)], 'KELP': [(KELP,  << , 2018.0, 1, 106300), (KELP,  << , 2018.0, 4, 106300), (KELP,  << , 2018.0, 4, 106300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 107400)], 'KELP': [(KELP,  << , 2019.0, 1, 107400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 107400)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 107400)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 107400)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=107900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 107400)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 107900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 107400)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 107400)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 108100)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 108100)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 108100)], 'KELP': [(KELP,  << , 2020.0, 1, 107600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 108100)], 'KELP': [(KELP,  << , 2017.0, 1, 108500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 108100)], 'KELP': [(KELP,  << , 2017.0, 1, 108500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 108500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 108500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=108900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 108500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 108900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 109000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 109100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 109100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 109300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 109300), (KELP,  << , 2020.0, 11, 109300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 109300), (KELP,  << , 2020.0, 11, 109300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2017.0, 1, 109300), (KELP,  << , 2020.0, 11, 109300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2018.0, 1, 109700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2018.0, 1, 109700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=109900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2018.0, 1, 109700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 109900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 108600), (RAINFOREST_RESIN,  << , 9998.0, 1, 108600)], 'KELP': [(KELP,  << , 2018.0, 1, 109700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 110000)], 'KELP': [(KELP,  << , 2018.0, 1, 110100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 110000)], 'KELP': [(KELP,  << , 2018.0, 1, 110100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 110000)], 'KELP': [(KELP,  << , 2018.0, 1, 110100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 110000)], 'KELP': [(KELP,  << , 2018.0, 7, 110400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 10, 110400)], 'KELP': [(KELP,  << , 2018.0, 7, 110400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 10, 110400)], 'KELP': [(KELP,  << , 2018.0, 7, 110400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 10, 110400)], 'KELP': [(KELP,  << , 2018.0, 7, 110400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 10, 110400)], 'KELP': [(KELP,  << , 2018.0, 7, 110400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=110900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 10, 110400)], 'KELP': [(KELP,  << , 2018.0, 7, 110400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 110900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 10, 110400)], 'KELP': [(KELP,  << , 2018.0, 7, 110400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 111000)], 'KELP': [(KELP,  << , 2021.0, 1, 111000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2022.0, 15, 111100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=111900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 111900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 111100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 112100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 112100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 112100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 112100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 112100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 112100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 112100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=112900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 112100)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 112900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2019.0, 1, 111700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2018.0, 5, 113300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2018.0, 5, 113300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2018.0, 5, 113300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2018.0, 5, 113300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2018.0, 1, 113700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 113000)], 'KELP': [(KELP,  << , 2018.0, 1, 113700), (KELP,  << , 2018.0, 6, 113700), (KELP,  << , 2018.0, 6, 113700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=113900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 113800)], 'KELP': [(KELP,  << , 2021.0, 13, 113800), (KELP,  << , 2017.0, 2, 113800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 113900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 113800)], 'KELP': [(KELP,  << , 2021.0, 13, 113800), (KELP,  << , 2017.0, 2, 113800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 113800)], 'KELP': [(KELP,  << , 2021.0, 13, 113800), (KELP,  << , 2017.0, 2, 113800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 113800)], 'KELP': [(KELP,  << , 2020.0, 1, 114100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 113800)], 'KELP': [(KELP,  << , 2020.0, 1, 114100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 113800)], 'KELP': [(KELP,  << , 2020.0, 1, 114100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2020.0, 1, 114100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2020.0, 1, 114100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2020.0, 1, 114100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2020.0, 1, 114100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=114900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 114900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 114400)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2021.0, 15, 114800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2020.0, 1, 115700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=115900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2020.0, 1, 115700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 115900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2018.0, 1, 116000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2018.0, 1, 116000), (KELP,  << , 2021.0, 10, 116000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 115300)], 'KELP': [(KELP,  << , 2018.0, 1, 116000), (KELP,  << , 2021.0, 10, 116000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 116200)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 116200)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 116200)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 116200)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 116200)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 116200)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=116900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 116800)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 116900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 1, 116200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 2, 117500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 2, 117500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 2, 117500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 1, 117700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=117900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 1, 117700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 117900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 116900), (RAINFOREST_RESIN,  << , 9996.0, 7, 116900)], 'KELP': [(KELP,  << , 2018.0, 1, 117700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2018.0, 1, 117700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2017.0, 1, 118200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2018.0, 1, 118300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2018.0, 1, 118300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2018.0, 1, 118300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2018.0, 1, 118300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2017.0, 10, 118700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2017.0, 10, 118700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=118900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2017.0, 10, 118700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 118900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2017.0, 10, 118700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2017.0, 10, 118700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2019.0, 2, 119100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 118100)], 'KELP': [(KELP,  << , 2019.0, 2, 119100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 119300)], 'KELP': [(KELP,  << , 2019.0, 2, 119100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 119300)], 'KELP': [(KELP,  << , 2019.0, 2, 119100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 119300)], 'KELP': [(KELP,  << , 2017.0, 1, 119600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 119300)], 'KELP': [(KELP,  << , 2017.0, 1, 119600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 119300)], 'KELP': [(KELP,  << , 2019.0, 1, 119800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=119900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 1, 119800)], 'KELP': [(KELP,  << , 2017.0, 1, 119900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 119900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 1, 119800)], 'KELP': [(KELP,  << , 2017.0, 1, 119900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120000)], 'KELP': [(KELP,  << , 2017.0, 1, 119900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120000)], 'KELP': [(KELP,  << , 2017.0, 1, 119900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120000)], 'KELP': [(KELP,  << , 2017.0, 1, 119900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 120300)], 'KELP': [(KELP,  << , 2015.0, 2, 120400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 120300)], 'KELP': [(KELP,  << , 2015.0, 2, 120400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2014.0, 1, 120600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2014.0, 1, 120600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2014.0, 1, 120600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=120900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2014.0, 1, 120600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 120900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2014.0, 1, 120600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2013.0, 1, 121100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2013.0, 1, 121100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2013.0, 1, 121100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 120500)], 'KELP': [(KELP,  << , 2013.0, 1, 121100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121500)], 'KELP': [(KELP,  << , 2015.0, 1, 121500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121500)], 'KELP': [(KELP,  << , 2015.0, 1, 121500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121500)], 'KELP': [(KELP,  << , 2015.0, 1, 121500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2015.0, 1, 121500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=121900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2015.0, 1, 121500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 121900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2015.0, 1, 121900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2015.0, 1, 121900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2015.0, 1, 121900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2015.0, 1, 121900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2013.0, 3, 122300), (KELP,  << , 2013.0, 2, 122300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2013.0, 3, 122300), (KELP,  << , 2013.0, 2, 122300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2013.0, 3, 122300), (KELP,  << , 2013.0, 2, 122300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2013.0, 1, 122600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2013.0, 1, 122600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=122900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2013.0, 6, 122800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 122900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 121800)], 'KELP': [(KELP,  << , 2013.0, 1, 122900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123000)], 'KELP': [(KELP,  << , 2010.0, 1, 123000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123000)], 'KELP': [(KELP,  << , 2012.0, 4, 123200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123000)], 'KELP': [(KELP,  << , 2012.0, 4, 123200), (KELP,  << , 2014.0, 1, 123200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123000)], 'KELP': [(KELP,  << , 2012.0, 4, 123200), (KELP,  << , 2014.0, 1, 123200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123000)], 'KELP': [(KELP,  << , 2012.0, 4, 123200), (KELP,  << , 2014.0, 1, 123200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2013$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123000)], 'KELP': [(KELP,  << , 2013.0, 15, 123500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2013$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123000)], 'KELP': [(KELP,  << , 2010.0, 7, 123600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2013$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 6, 123700)], 'KELP': [(KELP,  << , 2010.0, 7, 123600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=123900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123800)], 'KELP': [(KELP,  << , 2013.0, 1, 123800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 123900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 123800)], 'KELP': [(KELP,  << , 2013.0, 1, 123800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2014.0, 2, 124000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2014.0, 2, 124000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2014.0, 2, 124000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2014.0, 2, 124000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2011.0, 3, 124500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2013.0, 1, 124600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2013.0, 1, 124600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2014$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2013.0, 1, 124600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=124900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2013.0, 1, 124600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 124900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2013.0, 1, 124600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2013.0, 1, 124600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 124000)], 'KELP': [(KELP,  << , 2013.0, 1, 124600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 125200)], 'KELP': [(KELP,  << , 2012.0, 1, 125300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2012.0, 1, 125300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2012.0, 1, 125300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2012.0, 1, 125300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2012.0, 1, 125300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2012.0, 1, 125300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=125900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2012.0, 1, 125300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 125900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2014.0, 6, 125900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2014.0, 6, 125900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2014.0, 6, 125900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 125400), (RAINFOREST_RESIN,  << , 9998.0, 1, 125400)], 'KELP': [(KELP,  << , 2014.0, 6, 125900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 126300)], 'KELP': [(KELP,  << , 2013.0, 1, 126400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 126400)], 'KELP': [(KELP,  << , 2013.0, 1, 126400), (KELP,  << , 2013.0, 2, 126400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 126400)], 'KELP': [(KELP,  << , 2013.0, 1, 126400), (KELP,  << , 2013.0, 2, 126400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 126400)], 'KELP': [(KELP,  << , 2013.0, 1, 126400), (KELP,  << , 2013.0, 2, 126400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 126700)], 'KELP': [(KELP,  << , 2013.0, 1, 126400), (KELP,  << , 2013.0, 2, 126400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=126900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 126700)], 'KELP': [(KELP,  << , 2013.0, 1, 126400), (KELP,  << , 2013.0, 2, 126400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 126900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 126700)], 'KELP': [(KELP,  << , 2013.0, 1, 126400), (KELP,  << , 2013.0, 2, 126400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 127000)], 'KELP': [(KELP,  << , 2014.0, 2, 127000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 127000)], 'KELP': [(KELP,  << , 2014.0, 2, 127000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 127000)], 'KELP': [(KELP,  << , 2014.0, 2, 127000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 2, 127000)], 'KELP': [(KELP,  << , 2014.0, 2, 127000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 127400)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 127400)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 127400)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 127400)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=127900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 127400)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 127900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 127900), (RAINFOREST_RESIN,  << , 10004.0, 7, 127900)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 127900), (RAINFOREST_RESIN,  << , 10004.0, 7, 127900)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 127900), (RAINFOREST_RESIN,  << , 10004.0, 7, 127900)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 128200)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 128200)], 'KELP': [(KELP,  << , 2014.0, 1, 127500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 128400)], 'KELP': [(KELP,  << , 2013.0, 1, 128400), (KELP,  << , 2014.0, 2, 128400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 128400)], 'KELP': [(KELP,  << , 2013.0, 1, 128400), (KELP,  << , 2014.0, 2, 128400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 128400)], 'KELP': [(KELP,  << , 2013.0, 1, 128400), (KELP,  << , 2014.0, 2, 128400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 128700)], 'KELP': [(KELP,  << , 2013.0, 1, 128400), (KELP,  << , 2014.0, 2, 128400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=128900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 6, 128700)], 'KELP': [(KELP,  << , 2013.0, 1, 128400), (KELP,  << , 2014.0, 2, 128400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 128900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 1, 128900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 1, 128900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 1, 128900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 1, 128900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 1, 128900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 1, 128900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2014.0, 1, 129600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2014.0, 1, 129600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=129900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 129900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 128900)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2015.0, 3, 129700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 130700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=130900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2014.0, 2, 130900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 130900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 131000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 131000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 131000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 131000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 131000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 131000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 131000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2016.0, 1, 131000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2014.0, 4, 131800), (KELP,  << , 2014.0, 1, 131800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=131900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2014.0, 4, 131800), (KELP,  << , 2014.0, 1, 131800), (KELP,  << , 2014.0, 12, 131800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 131900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 130300)], 'KELP': [(KELP,  << , 2014.0, 4, 131800), (KELP,  << , 2014.0, 1, 131800), (KELP,  << , 2014.0, 12, 131800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132100), (RAINFOREST_RESIN,  << , 9998.0, 3, 132100)], 'KELP': [(KELP,  << , 2014.0, 4, 131800), (KELP,  << , 2014.0, 1, 131800), (KELP,  << , 2014.0, 12, 131800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132100), (RAINFOREST_RESIN,  << , 9998.0, 3, 132100)], 'KELP': [(KELP,  << , 2014.0, 4, 131800), (KELP,  << , 2014.0, 1, 131800), (KELP,  << , 2014.0, 12, 131800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132100), (RAINFOREST_RESIN,  << , 9998.0, 3, 132100)], 'KELP': [(KELP,  << , 2014.0, 4, 131800), (KELP,  << , 2014.0, 1, 131800), (KELP,  << , 2014.0, 12, 131800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 132300)], 'KELP': [(KELP,  << , 2014.0, 4, 131800), (KELP,  << , 2014.0, 1, 131800), (KELP,  << , 2014.0, 12, 131800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 132400)], 'KELP': [(KELP,  << , 2016.0, 1, 132400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132500)], 'KELP': [(KELP,  << , 2013.0, 14, 132500), (KELP,  << , 2013.0, 1, 132500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132500)], 'KELP': [(KELP,  << , 2013.0, 14, 132500), (KELP,  << , 2013.0, 1, 132500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132500)], 'KELP': [(KELP,  << , 2013.0, 14, 132500), (KELP,  << , 2013.0, 1, 132500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=132900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132500)], 'KELP': [(KELP,  << , 2013.0, 14, 132500), (KELP,  << , 2013.0, 1, 132500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 132900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132500)], 'KELP': [(KELP,  << , 2013.0, 14, 132500), (KELP,  << , 2013.0, 1, 132500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 132500)], 'KELP': [(KELP,  << , 2013.0, 13, 133000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 133100), (RAINFOREST_RESIN,  << , 10004.0, 4, 133100), (RAINFOREST_RESIN,  << , 10002.0, 5, 133100)], 'KELP': [(KELP,  << , 2013.0, 13, 133000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 133200)], 'KELP': [(KELP,  << , 2013.0, 13, 133000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 133200)], 'KELP': [(KELP,  << , 2013.0, 1, 133400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 133400)], 'KELP': [(KELP,  << , 2015.0, 1, 133500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 133400)], 'KELP': [(KELP,  << , 2015.0, 1, 133500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 133400)], 'KELP': [(KELP,  << , 2013.0, 1, 133700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 133400)], 'KELP': [(KELP,  << , 2013.0, 1, 133700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=133900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 133400)], 'KELP': [(KELP,  << , 2013.0, 1, 133700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 133900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 133400)], 'KELP': [(KELP,  << , 2015.0, 1, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 134100)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 134100)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 134200)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 134300)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 134300)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 134300)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 134600), (RAINFOREST_RESIN,  << , 10004.0, 1, 134600)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 134700), (RAINFOREST_RESIN,  << , 10004.0, 1, 134700), (RAINFOREST_RESIN,  << , 10002.0, 4, 134700)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=134900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 134900)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 134900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 134900), (RAINFOREST_RESIN,  << , 9998.0, 1, 134900)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 134900), (RAINFOREST_RESIN,  << , 9998.0, 1, 134900)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 134900), (RAINFOREST_RESIN,  << , 9998.0, 1, 134900)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 134900), (RAINFOREST_RESIN,  << , 9998.0, 1, 134900)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 134900), (RAINFOREST_RESIN,  << , 9998.0, 1, 134900)], 'KELP': [(KELP,  << , 2015.0, 1, 134000), (KELP,  << , 2014.0, 2, 134000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 134900), (RAINFOREST_RESIN,  << , 9998.0, 1, 134900)], 'KELP': [(KELP,  << , 2015.0, 1, 135500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 134900), (RAINFOREST_RESIN,  << , 9998.0, 1, 134900)], 'KELP': [(KELP,  << , 2015.0, 1, 135500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 135600)], 'KELP': [(KELP,  << , 2015.0, 1, 135500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 135600)], 'KELP': [(KELP,  << , 2015.0, 1, 135500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=135900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 135600)], 'KELP': [(KELP,  << , 2015.0, 1, 135500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 135900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 135900)], 'KELP': [(KELP,  << , 2017.0, 2, 135900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 136000)], 'KELP': [(KELP,  << , 2017.0, 2, 135900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 136000)], 'KELP': [(KELP,  << , 2017.0, 2, 135900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 136000)], 'KELP': [(KELP,  << , 2017.0, 2, 135900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 136300)], 'KELP': [(KELP,  << , 2017.0, 2, 135900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 136300)], 'KELP': [(KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 136500)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 136500)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 136500)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=136900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 136500)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 136900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 136500)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 137000)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 137100)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 137100)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 137100)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 137400)], 'KELP': [(KELP,  << , 2014.0, 1, 136500), (KELP,  << , 2014.0, 1, 136500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 137400)], 'KELP': [(KELP,  << , 2015.0, 1, 137600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 137700)], 'KELP': [(KELP,  << , 2015.0, 1, 137600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 137700)], 'KELP': [(KELP,  << , 2014.0, 3, 137700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=137900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 137700)], 'KELP': [(KELP,  << , 2014.0, 3, 137700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 137900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 137900)], 'KELP': [(KELP,  << , 2016.0, 1, 137900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 137900)], 'KELP': [(KELP,  << , 2016.0, 1, 137900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 138100), (RAINFOREST_RESIN,  << , 9996.0, 7, 138100)], 'KELP': [(KELP,  << , 2016.0, 1, 137900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 138100), (RAINFOREST_RESIN,  << , 9996.0, 7, 138100)], 'KELP': [(KELP,  << , 2016.0, 1, 137900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2016.0, 1, 137900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 138500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 138600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 138600), (KELP,  << , 2014.0, 2, 138600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 138600), (KELP,  << , 2014.0, 2, 138600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=138900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 138600), (KELP,  << , 2014.0, 2, 138600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 138900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 139000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 139000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 139000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2013.0, 1, 139000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 7, 138300)], 'KELP': [(KELP,  << , 2014.0, 1, 139400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 139400), (RAINFOREST_RESIN,  << , 10004.0, 1, 139400), (RAINFOREST_RESIN,  << , 10002.0, 5, 139400)], 'KELP': [(KELP,  << , 2014.0, 1, 139400), (KELP,  << , 2017.0, 2, 139400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 139400), (RAINFOREST_RESIN,  << , 10004.0, 1, 139400), (RAINFOREST_RESIN,  << , 10002.0, 5, 139400)], 'KELP': [(KELP,  << , 2014.0, 1, 139400), (KELP,  << , 2017.0, 2, 139400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2014.0, 1, 139400), (KELP,  << , 2017.0, 2, 139400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2014.0, 4, 139700), (KELP,  << , 2014.0, 1, 139700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=139900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2014.0, 4, 139700), (KELP,  << , 2014.0, 1, 139700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 139900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2014.0, 4, 139700), (KELP,  << , 2014.0, 1, 139700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2013.0, 1, 140100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2013.0, 1, 140100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2013.0, 1, 140100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2013.0, 1, 140100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2013.0, 1, 140100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=140900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 140900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 139600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=141900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 141900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2012.0, 1, 140600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2013.0, 1, 142600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 141600)], 'KELP': [(KELP,  << , 2013.0, 1, 142600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 142800)], 'KELP': [(KELP,  << , 2013.0, 1, 142600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=142900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 142800)], 'KELP': [(KELP,  << , 2013.0, 1, 142600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 142900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 142800)], 'KELP': [(KELP,  << , 2013.0, 1, 142600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 143100)], 'KELP': [(KELP,  << , 2014.0, 1, 143100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 143100)], 'KELP': [(KELP,  << , 2014.0, 1, 143100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 143100)], 'KELP': [(KELP,  << , 2014.0, 1, 143100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 143100)], 'KELP': [(KELP,  << , 2014.0, 1, 143100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 143100)], 'KELP': [(KELP,  << , 2014.0, 1, 143100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 143100)], 'KELP': [(KELP,  << , 2014.0, 1, 143100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2013.0, 1, 143600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2013.0, 1, 143600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=143900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2013.0, 1, 143600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 143900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2013.0, 1, 143600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2016.0, 1, 144000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 143600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 144600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 144600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=144900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 144600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 144900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 144600)], 'KELP': [(KELP,  << , 2015.0, 1, 144200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 145000)], 'KELP': [(KELP,  << , 2012.0, 1, 145000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 145000)], 'KELP': [(KELP,  << , 2012.0, 1, 145000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 145000)], 'KELP': [(KELP,  << , 2012.0, 1, 145000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 145300)], 'KELP': [(KELP,  << , 2012.0, 1, 145000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 145400)], 'KELP': [(KELP,  << , 2015.0, 1, 145500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 145500)], 'KELP': [(KELP,  << , 2015.0, 1, 145500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 145500)], 'KELP': [(KELP,  << , 2015.0, 1, 145500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 145700), (RAINFOREST_RESIN,  << , 10004.0, 8, 145700)], 'KELP': [(KELP,  << , 2015.0, 1, 145500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=145900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 145700), (RAINFOREST_RESIN,  << , 10004.0, 8, 145700)], 'KELP': [(KELP,  << , 2015.0, 1, 145500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 145900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 145700), (RAINFOREST_RESIN,  << , 10004.0, 8, 145700)], 'KELP': [(KELP,  << , 2015.0, 1, 145500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 145700), (RAINFOREST_RESIN,  << , 10004.0, 8, 145700)], 'KELP': [(KELP,  << , 2012.0, 6, 146000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 145700), (RAINFOREST_RESIN,  << , 10004.0, 8, 145700)], 'KELP': [(KELP,  << , 2012.0, 6, 146000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 146300)], 'KELP': [(KELP,  << , 2012.0, 6, 146000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 146300)], 'KELP': [(KELP,  << , 2012.0, 15, 146300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 146300)], 'KELP': [(KELP,  << , 2012.0, 9, 146400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 146500)], 'KELP': [(KELP,  << , 2014.0, 1, 146500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2014.0, 1, 146500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2014.0, 1, 146500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=146900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2013.0, 1, 146900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 146900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2013.0, 1, 146900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2013.0, 1, 146900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2013.0, 1, 146900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2016.0, 14, 147200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2016.0, 14, 147200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2016.0, 14, 147200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2012.0, 1, 147600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10000.0, 4, 146600)], 'KELP': [(KELP,  << , 2012.0, 1, 147600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2012.0, 1, 147600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=147900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2014.0, 1, 147800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 147900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2014.0, 1, 147800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2015$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2015.0, 9, 148000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2013.0, 1, 148200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2013.0, 1, 148200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2013.0, 1, 148200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2013.0, 1, 148200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2013.0, 1, 148200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 147700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700), (KELP,  << , 2016.0, 2, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=148900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700), (KELP,  << , 2016.0, 2, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 148900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700), (KELP,  << , 2016.0, 2, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700), (KELP,  << , 2016.0, 2, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700), (KELP,  << , 2016.0, 2, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700), (KELP,  << , 2016.0, 2, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700), (KELP,  << , 2016.0, 2, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2013.0, 1, 148700), (KELP,  << , 2016.0, 2, 148700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2015.0, 1, 149500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2015.0, 1, 149500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 2, 148700)], 'KELP': [(KELP,  << , 2016.0, 5, 149700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=149900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 149800), (RAINFOREST_RESIN,  << , 10002.0, 3, 149800)], 'KELP': [(KELP,  << , 2013.0, 5, 149900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 149900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 149800), (RAINFOREST_RESIN,  << , 10002.0, 3, 149800)], 'KELP': [(KELP,  << , 2013.0, 5, 149900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 150000)], 'KELP': [(KELP,  << , 2013.0, 5, 149900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 150200)], 'KELP': [(KELP,  << , 2013.0, 5, 149900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 150200)], 'KELP': [(KELP,  << , 2013.0, 5, 149900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 150200)], 'KELP': [(KELP,  << , 2013.0, 1, 150400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 150200)], 'KELP': [(KELP,  << , 2013.0, 1, 150400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=150900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 150900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2016$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2013.0, 1, 150600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2014.0, 1, 151500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 150500)], 'KELP': [(KELP,  << , 2014.0, 1, 151500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 151600)], 'KELP': [(KELP,  << , 2014.0, 1, 151500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 151600)], 'KELP': [(KELP,  << , 2014.0, 1, 151500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=151900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 151600)], 'KELP': [(KELP,  << , 2014.0, 1, 151500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 151900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 151600)], 'KELP': [(KELP,  << , 2014.0, 1, 151500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 151600)], 'KELP': [(KELP,  << , 2014.0, 1, 151500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 151600)], 'KELP': [(KELP,  << , 2014.0, 5, 152200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 151600)], 'KELP': [(KELP,  << , 2014.0, 5, 152200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 152300)], 'KELP': [(KELP,  << , 2017.0, 9, 152300), (KELP,  << , 2017.0, 2, 152300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 152300)], 'KELP': [(KELP,  << , 2017.0, 9, 152300), (KELP,  << , 2017.0, 2, 152300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 152300)], 'KELP': [(KELP,  << , 2013.0, 1, 152600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 152300)], 'KELP': [(KELP,  << , 2013.0, 1, 152600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 152300)], 'KELP': [(KELP,  << , 2013.0, 1, 152600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=152900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 152300)], 'KELP': [(KELP,  << , 2013.0, 1, 152600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 152900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 152300)], 'KELP': [(KELP,  << , 2013.0, 1, 152600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 3, 153000)], 'KELP': [(KELP,  << , 2013.0, 1, 152600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 3, 153000)], 'KELP': [(KELP,  << , 2013.0, 1, 152600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 3, 153000)], 'KELP': [(KELP,  << , 2013.0, 1, 152600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 3, 153000)], 'KELP': [(KELP,  << , 2017.0, 14, 153300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 3, 153000)], 'KELP': [(KELP,  << , 2017.0, 14, 153300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 153500)], 'KELP': [(KELP,  << , 2017.0, 1, 153500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 153500)], 'KELP': [(KELP,  << , 2017.0, 14, 153600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 153500)], 'KELP': [(KELP,  << , 2017.0, 14, 153600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=153900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 153500)], 'KELP': [(KELP,  << , 2017.0, 14, 153600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 153900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 153500)], 'KELP': [(KELP,  << , 2017.0, 14, 153600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 153500)], 'KELP': [(KELP,  << , 2017.0, 14, 153600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 153500)], 'KELP': [(KELP,  << , 2017.0, 14, 153600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 153500)], 'KELP': [(KELP,  << , 2017.0, 14, 153600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 154300)], 'KELP': [(KELP,  << , 2015.0, 6, 154300), (KELP,  << , 2015.0, 2, 154300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 154300)], 'KELP': [(KELP,  << , 2015.0, 6, 154300), (KELP,  << , 2015.0, 2, 154300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 154300)], 'KELP': [(KELP,  << , 2015.0, 6, 154300), (KELP,  << , 2015.0, 2, 154300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 154300)], 'KELP': [(KELP,  << , 2015.0, 6, 154300), (KELP,  << , 2015.0, 2, 154300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 154300)], 'KELP': [(KELP,  << , 2019.0, 11, 154700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=154900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 154800)], 'KELP': [(KELP,  << , 2019.0, 11, 154700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 154900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 154800)], 'KELP': [(KELP,  << , 2015.0, 15, 154900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 154800)], 'KELP': [(KELP,  << , 2015.0, 1, 155100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 154800)], 'KELP': [(KELP,  << , 2015.0, 1, 155100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 155200)], 'KELP': [(KELP,  << , 2015.0, 1, 155100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 155200)], 'KELP': [(KELP,  << , 2015.0, 1, 155100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 155200)], 'KELP': [(KELP,  << , 2015.0, 1, 155100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 155500)], 'KELP': [(KELP,  << , 2015.0, 1, 155100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 155500)], 'KELP': [(KELP,  << , 2015.0, 1, 155100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 155700)], 'KELP': [(KELP,  << , 2016.0, 1, 155700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=155900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 155700)], 'KELP': [(KELP,  << , 2016.0, 1, 155700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 155900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 155700)], 'KELP': [(KELP,  << , 2016.0, 1, 155700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 155700)], 'KELP': [(KELP,  << , 2016.0, 1, 155700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 155700)], 'KELP': [(KELP,  << , 2016.0, 1, 155700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 155700)], 'KELP': [(KELP,  << , 2014.0, 7, 156200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 1, 155700)], 'KELP': [(KELP,  << , 2014.0, 7, 156200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 156500)], 'KELP': [(KELP,  << , 2014.0, 7, 156200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 156500)], 'KELP': [(KELP,  << , 2015.0, 1, 156600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 156600), (RAINFOREST_RESIN,  << , 9996.0, 1, 156600)], 'KELP': [(KELP,  << , 2015.0, 1, 156600), (KELP,  << , 2015.0, 2, 156600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 156600), (RAINFOREST_RESIN,  << , 9996.0, 1, 156600)], 'KELP': [(KELP,  << , 2015.0, 1, 156600), (KELP,  << , 2015.0, 2, 156600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=156900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 156600), (RAINFOREST_RESIN,  << , 9996.0, 1, 156600)], 'KELP': [(KELP,  << , 2015.0, 1, 156900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 156900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 156600), (RAINFOREST_RESIN,  << , 9996.0, 1, 156600)], 'KELP': [(KELP,  << , 2015.0, 1, 157000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 156600), (RAINFOREST_RESIN,  << , 9996.0, 1, 156600)], 'KELP': [(KELP,  << , 2015.0, 1, 157000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 156600), (RAINFOREST_RESIN,  << , 9996.0, 1, 156600)], 'KELP': [(KELP,  << , 2015.0, 1, 157000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 156600), (RAINFOREST_RESIN,  << , 9996.0, 1, 156600)], 'KELP': [(KELP,  << , 2015.0, 1, 157000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2014.0, 9, 157400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2014.0, 1, 157500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2014.0, 1, 157500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2014.0, 1, 157500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2016.0, 1, 157700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=157900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2016.0, 1, 157700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 157900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2016.0, 1, 157700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2014.0, 1, 158100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 10, 157400)], 'KELP': [(KELP,  << , 2014.0, 1, 158100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2014.0, 1, 158100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2014.0, 1, 158100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2014.0, 1, 158100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2014.0, 1, 158100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2014.0, 1, 158100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2016.0, 1, 158800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=158900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2016.0, 1, 158800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 158900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2016.0, 1, 158800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2016.0, 1, 158800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 7, 158300)], 'KELP': [(KELP,  << , 2016.0, 1, 158800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 159200)], 'KELP': [(KELP,  << , 2014.0, 1, 159300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 159200)], 'KELP': [(KELP,  << , 2014.0, 1, 159300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 159200)], 'KELP': [(KELP,  << , 2014.0, 1, 159300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 159200)], 'KELP': [(KELP,  << , 2014.0, 1, 159300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 159200)], 'KELP': [(KELP,  << , 2014.0, 1, 159300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 159200)], 'KELP': [(KELP,  << , 2014.0, 1, 159300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=159900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 159200)], 'KELP': [(KELP,  << , 2014.0, 1, 159300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 159900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 9, 159200)], 'KELP': [(KELP,  << , 2014.0, 1, 159300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 160000)], 'KELP': [(KELP,  << , 2018.0, 2, 160000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 160000)], 'KELP': [(KELP,  << , 2018.0, 2, 160000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 160000)], 'KELP': [(KELP,  << , 2018.0, 2, 160000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 160300)], 'KELP': [(KELP,  << , 2018.0, 2, 160000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 160400)], 'KELP': [(KELP,  << , 2017.0, 1, 160400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 160400)], 'KELP': [(KELP,  << , 2018.0, 13, 160500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2018.0, 13, 160500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2017$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2018.0, 13, 160500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=160900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2018.0, 13, 160500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 160900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2018.0, 13, 160500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 160600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=161900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 161900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 8, 161000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2015.0, 4, 162400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=162900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 161600)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 162900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 4, 162900)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 4, 162900)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 4, 162900)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 4, 162900)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 4, 162900)], 'KELP': [(KELP,  << , 2018.0, 1, 162600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 4, 162900)], 'KELP': [(KELP,  << , 2016.0, 2, 163500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 163500)], 'KELP': [(KELP,  << , 2016.0, 2, 163500), (KELP,  << , 2016.0, 2, 163500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 163500)], 'KELP': [(KELP,  << , 2016.0, 2, 163500), (KELP,  << , 2016.0, 2, 163500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 163500)], 'KELP': [(KELP,  << , 2015.0, 1, 163800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=163900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 163500)], 'KELP': [(KELP,  << , 2015.0, 1, 163800), (KELP,  << , 2018.0, 13, 163800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 163900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2015.0, 2, 163900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2015.0, 2, 163900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2015.0, 2, 163900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2015.0, 2, 163900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2018$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2015.0, 2, 163900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2015.0, 2, 163900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2015.0, 2, 163900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2018.0, 1, 164600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 163900)], 'KELP': [(KELP,  << , 2018.0, 1, 164600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=164900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2018.0, 1, 164600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 164900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2018.0, 1, 164600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2018.0, 1, 164600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2018.0, 1, 165100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2017.0, 6, 165200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2017.0, 6, 165200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2017.0, 6, 165200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2017.0, 6, 165200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2017.0, 6, 165200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2017.0, 6, 165200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=165900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2017.0, 6, 165200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 165900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2017.0, 6, 165200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 164800), (RAINFOREST_RESIN,  << , 10004.0, 6, 164800)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 166400)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 166400)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 166400)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 166400)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 166400)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=166900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 166400)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 166900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 166400)], 'KELP': [(KELP,  << , 2019.0, 1, 166000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 166400)], 'KELP': [(KELP,  << , 2017.0, 5, 167000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 167100)], 'KELP': [(KELP,  << , 2017.0, 5, 167000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 167100)], 'KELP': [(KELP,  << , 2017.0, 5, 167000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 167100)], 'KELP': [(KELP,  << , 2016.0, 11, 167300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 167100)], 'KELP': [(KELP,  << , 2016.0, 11, 167300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 167100)], 'KELP': [(KELP,  << , 2016.0, 11, 167300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 167100)], 'KELP': [(KELP,  << , 2016.0, 11, 167300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 167100)], 'KELP': [(KELP,  << , 2016.0, 11, 167300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=167900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 167800)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 167900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 167900)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2019$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=168900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 168900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 1, 167800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 3, 169000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 3, 169000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 3, 169000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 3, 169000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 3, 169000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 3, 169000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 3, 169000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2019.0, 3, 169000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=169900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2017.0, 1, 169900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 169900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2017.0, 1, 169900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 8, 168000)], 'KELP': [(KELP,  << , 2017.0, 1, 169900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=170900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 170900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 170200)], 'KELP': [(KELP,  << , 2017.0, 1, 170200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 171100)], 'KELP': [(KELP,  << , 2019.0, 3, 171000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 171100)], 'KELP': [(KELP,  << , 2019.0, 3, 171000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 171100)], 'KELP': [(KELP,  << , 2019.0, 3, 171000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 171100)], 'KELP': [(KELP,  << , 2019.0, 3, 171000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 5, 171400)], 'KELP': [(KELP,  << , 2019.0, 3, 171000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 5, 171400)], 'KELP': [(KELP,  << , 2018.0, 4, 171600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 5, 171400)], 'KELP': [(KELP,  << , 2018.0, 4, 171600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 5, 171400)], 'KELP': [(KELP,  << , 2018.0, 4, 171600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=171900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 5, 171400)], 'KELP': [(KELP,  << , 2018.0, 4, 171600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 171900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 171900)], 'KELP': [(KELP,  << , 2017.0, 1, 171900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 171900)], 'KELP': [(KELP,  << , 2017.0, 1, 171900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 172100)], 'KELP': [(KELP,  << , 2017.0, 1, 171900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 172100)], 'KELP': [(KELP,  << , 2017.0, 1, 171900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 172100)], 'KELP': [(KELP,  << , 2017.0, 1, 171900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 172100)], 'KELP': [(KELP,  << , 2017.0, 1, 171900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 172100)], 'KELP': [(KELP,  << , 2017.0, 1, 171900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 172600)], 'KELP': [(KELP,  << , 2017.0, 2, 172600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 172700)], 'KELP': [(KELP,  << , 2017.0, 2, 172600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=172900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 172700)], 'KELP': [(KELP,  << , 2017.0, 2, 172600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 172900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 172700)], 'KELP': [(KELP,  << , 2017.0, 2, 172600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 172700)], 'KELP': [(KELP,  << , 2017.0, 2, 172600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 172700)], 'KELP': [(KELP,  << , 2017.0, 2, 172600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 172700)], 'KELP': [(KELP,  << , 2017.0, 2, 173300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 173400)], 'KELP': [(KELP,  << , 2017.0, 2, 173300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 173400), (RAINFOREST_RESIN,  << , 9996.0, 1, 173400)], 'KELP': [(KELP,  << , 2017.0, 2, 173400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 173500)], 'KELP': [(KELP,  << , 2017.0, 2, 173400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 173500)], 'KELP': [(KELP,  << , 2017.0, 2, 173400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 173500)], 'KELP': [(KELP,  << , 2017.0, 2, 173400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=173900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 173500)], 'KELP': [(KELP,  << , 2020.0, 1, 173800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 173900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10005.0, 9, 173900)], 'KELP': [(KELP,  << , 2020.0, 1, 173800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 174000)], 'KELP': [(KELP,  << , 2017.0, 1, 174000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 174000)], 'KELP': [(KELP,  << , 2017.0, 1, 174000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=174900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 174900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 174300)], 'KELP': [(KELP,  << , 2017.0, 1, 174400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=175900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 175800)], 'KELP': [(KELP,  << , 2020.0, 1, 175800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 175900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 175800)], 'KELP': [(KELP,  << , 2017.0, 1, 176000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 176000)], 'KELP': [(KELP,  << , 2017.0, 1, 176000), (KELP,  << , 2017.0, 1, 176000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2021.0, 2, 176100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2021.0, 2, 176100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2021.0, 2, 176100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2021.0, 2, 176100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 1, 176600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 1, 176600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 1, 176600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=176900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 1, 176600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 176900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 5, 176900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 5, 176900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 5, 176900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 5, 176900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 1, 177400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 1, 177400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 176100), (RAINFOREST_RESIN,  << , 10004.0, 1, 176100)], 'KELP': [(KELP,  << , 2018.0, 1, 177400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 177600)], 'KELP': [(KELP,  << , 2018.0, 1, 177400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 177700)], 'KELP': [(KELP,  << , 2018.0, 1, 177700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=177900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 177700)], 'KELP': [(KELP,  << , 2018.0, 1, 177700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 177900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 14, 177900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 14, 177900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 14, 177900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 14, 177900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 14, 177900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 14, 177900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 14, 177900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 1, 178700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 1, 178700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=178900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 1, 178900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 178900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 178000)], 'KELP': [(KELP,  << , 2018.0, 1, 178900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 179000)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 179000)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 179000)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 179300)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 179300)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 179600)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 179600)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 179600)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=179900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 8, 179800)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 179900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 179900)], 'KELP': [(KELP,  << , 2018.0, 1, 179100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 179900)], 'KELP': [(KELP,  << , 2020.0, 11, 180000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 180100)], 'KELP': [(KELP,  << , 2020.0, 11, 180000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2020$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 3, 180100)], 'KELP': [(KELP,  << , 2020.0, 11, 180000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 4, 180300)], 'KELP': [(KELP,  << , 2020.0, 11, 180000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 180500)], 'KELP': [(KELP,  << , 2020.0, 6, 180500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 180500)], 'KELP': [(KELP,  << , 2020.0, 6, 180500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 180500)], 'KELP': [(KELP,  << , 2020.0, 6, 180500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 180800)], 'KELP': [(KELP,  << , 2020.0, 6, 180500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=180900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 180900)], 'KELP': [(KELP,  << , 2020.0, 6, 180500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 180900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 180900)], 'KELP': [(KELP,  << , 2020.0, 1, 181000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 180900)], 'KELP': [(KELP,  << , 2020.0, 1, 181000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 180900)], 'KELP': [(KELP,  << , 2020.0, 1, 181000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 180900)], 'KELP': [(KELP,  << , 2020.0, 1, 181000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 180900)], 'KELP': [(KELP,  << , 2020.0, 1, 181000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 181400)], 'KELP': [(KELP,  << , 2018.0, 1, 181500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 181500)], 'KELP': [(KELP,  << , 2018.0, 2, 181600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 181500)], 'KELP': [(KELP,  << , 2018.0, 2, 181600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 181500)], 'KELP': [(KELP,  << , 2018.0, 1, 181800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=181900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 181500)], 'KELP': [(KELP,  << , 2018.0, 1, 181800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 181900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 181900)], 'KELP': [(KELP,  << , 2018.0, 1, 181800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 182000)], 'KELP': [(KELP,  << , 2018.0, 2, 182100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 182000)], 'KELP': [(KELP,  << , 2018.0, 2, 182100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 182000)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 182300)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 182300)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 182500)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 182500)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 182500)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=182900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 182500)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 182900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 182500)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 182500)], 'KELP': [(KELP,  << , 2020.0, 1, 182200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 183100)], 'KELP': [(KELP,  << , 2022.0, 1, 183100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 183100)], 'KELP': [(KELP,  << , 2019.0, 9, 183200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 183100)], 'KELP': [(KELP,  << , 2019.0, 9, 183200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 183100)], 'KELP': [(KELP,  << , 2022.0, 1, 183500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 183100)], 'KELP': [(KELP,  << , 2022.0, 1, 183500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 183100)], 'KELP': [(KELP,  << , 2022.0, 1, 183500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 183100)], 'KELP': [(KELP,  << , 2023.0, 8, 183700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=183900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 183100)], 'KELP': [(KELP,  << , 2023.0, 8, 183700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 183900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 6, 183900)], 'KELP': [(KELP,  << , 2023.0, 8, 183700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 6, 183900)], 'KELP': [(KELP,  << , 2019.0, 13, 184000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 6, 183900)], 'KELP': [(KELP,  << , 2022.0, 1, 184100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 6, 183900)], 'KELP': [(KELP,  << , 2022.0, 1, 184100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 6, 183900)], 'KELP': [(KELP,  << , 2022.0, 1, 184100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 6, 183900)], 'KELP': [(KELP,  << , 2022.0, 1, 184100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 6, 183900)], 'KELP': [(KELP,  << , 2022.0, 1, 184100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9995.0, 1, 184600)], 'KELP': [(KELP,  << , 2020.0, 1, 184600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 184800)], 'KELP': [(KELP,  << , 2020.0, 1, 184600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=184900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 184800), (RAINFOREST_RESIN,  << , 10002.0, 5, 184800)], 'KELP': [(KELP,  << , 2020.0, 1, 184600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 184900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 184800), (RAINFOREST_RESIN,  << , 10002.0, 5, 184800)], 'KELP': [(KELP,  << , 2020.0, 1, 184600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 184800), (RAINFOREST_RESIN,  << , 10002.0, 5, 184800)], 'KELP': [(KELP,  << , 2020.0, 1, 184600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 184800), (RAINFOREST_RESIN,  << , 10002.0, 5, 184800)], 'KELP': [(KELP,  << , 2020.0, 1, 184600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 184800), (RAINFOREST_RESIN,  << , 10002.0, 5, 184800)], 'KELP': [(KELP,  << , 2024.0, 10, 185200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 3, 184800), (RAINFOREST_RESIN,  << , 10002.0, 5, 184800)], 'KELP': [(KELP,  << , 2024.0, 10, 185200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 185400)], 'KELP': [(KELP,  << , 2020.0, 1, 185400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 185400)], 'KELP': [(KELP,  << , 2020.0, 1, 185400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 185400)], 'KELP': [(KELP,  << , 2020.0, 1, 185400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 185800)], 'KELP': [(KELP,  << , 2020.0, 1, 185400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=185900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 185800)], 'KELP': [(KELP,  << , 2020.0, 1, 185400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 185900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 185800)], 'KELP': [(KELP,  << , 2020.0, 1, 185400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 185800)], 'KELP': [(KELP,  << , 2022.0, 1, 186100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 185800)], 'KELP': [(KELP,  << , 2022.0, 1, 186100), (KELP,  << , 2022.0, 4, 186100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 185800)], 'KELP': [(KELP,  << , 2021.0, 10, 186300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 186400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 186400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 186400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 186400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 186400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2025$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=186900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 186400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 186900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 186400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2022.0, 3, 187000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2022.0, 3, 187000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2023.0, 1, 187300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2023.0, 1, 187300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2023.0, 1, 187400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2023.0, 1, 187400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=187900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 187900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 186300), (RAINFOREST_RESIN,  << , 10004.0, 10, 186300)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188000)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188000)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188000)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 188400)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=188900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 1, 187700), (KELP,  << , 2024.0, 15, 187700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 188900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2020.0, 1, 189000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2020.0, 1, 189000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 3, 189200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 3, 189200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 3, 189200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 188500)], 'KELP': [(KELP,  << , 2021.0, 3, 189200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 189500), (RAINFOREST_RESIN,  << , 10005.0, 2, 189500)], 'KELP': [(KELP,  << , 2024.0, 2, 189500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 189500), (RAINFOREST_RESIN,  << , 10005.0, 2, 189500)], 'KELP': [(KELP,  << , 2024.0, 2, 189500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 189500), (RAINFOREST_RESIN,  << , 10005.0, 2, 189500)], 'KELP': [(KELP,  << , 2024.0, 2, 189500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=189900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2022.0, 1, 189900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 189900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2020.0, 9, 190000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2020.0, 9, 190000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2020.0, 9, 190000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2023.0, 1, 190300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2023.0, 1, 190300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2023.0, 1, 190300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2020.0, 1, 190600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2020.0, 1, 190600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 189800), (RAINFOREST_RESIN,  << , 10004.0, 1, 189800)], 'KELP': [(KELP,  << , 2020.0, 10, 190700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=190900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 5, 190800)], 'KELP': [(KELP,  << , 2020.0, 10, 190700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 190900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 191000)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 191000)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 191000)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 191000)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 191400)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 191400)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 191400)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 191400)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 191700), (RAINFOREST_RESIN,  << , 10004.0, 4, 191700)], 'KELP': [(KELP,  << , 2024.0, 1, 190900), (KELP,  << , 2023.0, 1, 190900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=191900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 191700), (RAINFOREST_RESIN,  << , 10004.0, 4, 191700)], 'KELP': [(KELP,  << , 2022.0, 1, 191800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 191900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 2, 191700), (RAINFOREST_RESIN,  << , 10004.0, 4, 191700)], 'KELP': [(KELP,  << , 2022.0, 1, 191800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 192000)], 'KELP': [(KELP,  << , 2022.0, 1, 192000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 192100)], 'KELP': [(KELP,  << , 2022.0, 1, 192000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 192200)], 'KELP': [(KELP,  << , 2019.0, 5, 192200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 192200)], 'KELP': [(KELP,  << , 2019.0, 5, 192200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 192400)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 192400)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 192400)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 192700), (RAINFOREST_RESIN,  << , 9996.0, 5, 192700)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=192900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 192700), (RAINFOREST_RESIN,  << , 9996.0, 5, 192700)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 192900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 192700), (RAINFOREST_RESIN,  << , 9996.0, 5, 192700)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 192700), (RAINFOREST_RESIN,  << , 9996.0, 5, 192700)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 192700), (RAINFOREST_RESIN,  << , 9996.0, 5, 192700)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 193300)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 193300), (RAINFOREST_RESIN,  << , 10002.0, 4, 193300)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 193300), (RAINFOREST_RESIN,  << , 10002.0, 4, 193300)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 193300), (RAINFOREST_RESIN,  << , 10002.0, 4, 193300)], 'KELP': [(KELP,  << , 2019.0, 1, 192400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 193300), (RAINFOREST_RESIN,  << , 10002.0, 4, 193300)], 'KELP': [(KELP,  << , 2021.0, 14, 193600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 193700)], 'KELP': [(KELP,  << , 2021.0, 14, 193600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=193900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 193700)], 'KELP': [(KELP,  << , 2020.0, 1, 193800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 193900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 193700)], 'KELP': [(KELP,  << , 2018.0, 1, 194000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 193700)], 'KELP': [(KELP,  << , 2018.0, 1, 194000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 193700)], 'KELP': [(KELP,  << , 2018.0, 1, 194000)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 193700)], 'KELP': [(KELP,  << , 2018.0, 1, 194300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 1, 193700)], 'KELP': [(KELP,  << , 2018.0, 1, 194300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 194400)], 'KELP': [(KELP,  << , 2021.0, 2, 194400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 194400)], 'KELP': [(KELP,  << , 2018.0, 1, 194600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 194400)], 'KELP': [(KELP,  << , 2018.0, 1, 194600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 194400)], 'KELP': [(KELP,  << , 2018.0, 1, 194600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=194900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 194400)], 'KELP': [(KELP,  << , 2018.0, 1, 194600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 194900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 194400)], 'KELP': [(KELP,  << , 2018.0, 1, 194600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 195100)], 'KELP': [(KELP,  << , 2018.0, 1, 194600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 195100), (RAINFOREST_RESIN,  << , 10002.0, 1, 195100)], 'KELP': [(KELP,  << , 2018.0, 2, 195100), (KELP,  << , 2018.0, 6, 195100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 195100), (RAINFOREST_RESIN,  << , 10002.0, 1, 195100)], 'KELP': [(KELP,  << , 2018.0, 2, 195100), (KELP,  << , 2018.0, 6, 195100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 195100), (RAINFOREST_RESIN,  << , 10002.0, 1, 195100)], 'KELP': [(KELP,  << , 2018.0, 2, 195100), (KELP,  << , 2018.0, 6, 195100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 195100), (RAINFOREST_RESIN,  << , 10002.0, 1, 195100)], 'KELP': [(KELP,  << , 2018.0, 2, 195100), (KELP,  << , 2018.0, 6, 195100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 195100), (RAINFOREST_RESIN,  << , 10002.0, 1, 195100)], 'KELP': [(KELP,  << , 2018.0, 2, 195100), (KELP,  << , 2018.0, 6, 195100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2021$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 4, 195100), (RAINFOREST_RESIN,  << , 10002.0, 1, 195100)], 'KELP': [(KELP,  << , 2018.0, 2, 195100), (KELP,  << , 2018.0, 6, 195100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 195700)], 'KELP': [(KELP,  << , 2018.0, 2, 195100), (KELP,  << , 2018.0, 6, 195100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=195900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 195800)], 'KELP': [(KELP,  << , 2021.0, 1, 195800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 195900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2021.0, 1, 195800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2022$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2021.0, 1, 195800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2021.0, 1, 195800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2021.0, 1, 195800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2021.0, 1, 195800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2021.0, 1, 195800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2022.0, 1, 196500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2022.0, 1, 196500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2022.0, 1, 196500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=196900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2022.0, 1, 196500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 196900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2022.0, 1, 196500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2022.0, 1, 196500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2022.0, 1, 196500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 196000)], 'KELP': [(KELP,  << , 2022.0, 1, 196500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 197300), (RAINFOREST_RESIN,  << , 9996.0, 1, 197300)], 'KELP': [(KELP,  << , 2023.0, 1, 197300)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 197300), (RAINFOREST_RESIN,  << , 9996.0, 1, 197300)], 'KELP': [(KELP,  << , 2020.0, 1, 197500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 197300), (RAINFOREST_RESIN,  << , 9996.0, 1, 197300)], 'KELP': [(KELP,  << , 2020.0, 1, 197500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 1, 197300), (RAINFOREST_RESIN,  << , 9996.0, 1, 197300)], 'KELP': [(KELP,  << , 2020.0, 1, 197500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 197700)], 'KELP': [(KELP,  << , 2024.0, 2, 197700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=197900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 197700)], 'KELP': [(KELP,  << , 2024.0, 2, 197700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 197900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 197700)], 'KELP': [(KELP,  << , 2024.0, 2, 197700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 197700)], 'KELP': [(KELP,  << , 2024.0, 2, 197700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 197700)], 'KELP': [(KELP,  << , 2024.0, 2, 197700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 197700)], 'KELP': [(KELP,  << , 2024.0, 2, 197700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 197700)], 'KELP': [(KELP,  << , 2024.0, 2, 197700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 197700)], 'KELP': [(KELP,  << , 2024.0, 2, 197700)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 198500)], 'KELP': [(KELP,  << , 2024.0, 2, 198500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 198500)], 'KELP': [(KELP,  << , 2024.0, 2, 198500)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 198500)], 'KELP': [(KELP,  << , 2021.0, 1, 198800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=198900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9998.0, 2, 198500)], 'KELP': [(KELP,  << , 2021.0, 1, 198800)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 198900
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199000\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 198900)], 'KELP': [(KELP,  << , 2021.0, 5, 198900)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199000
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199100\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 199000)], 'KELP': [(KELP,  << , 2020.0, 1, 199100)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199100
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199200\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 199000)], 'KELP': [(KELP,  << , 2021.0, 2, 199200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199200
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199300\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 199000)], 'KELP': [(KELP,  << , 2021.0, 2, 199200)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199300
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199400\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 9996.0, 2, 199000)], 'KELP': [(KELP,  << , 2022.0, 1, 199400), (KELP,  << , 2021.0, 2, 199400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199400
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199500\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10004.0, 1, 199400)], 'KELP': [(KELP,  << , 2022.0, 1, 199400), (KELP,  << , 2021.0, 2, 199400), (KELP,  << , 2021.0, 1, 199400), (KELP,  << , 2021.0, 3, 199400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199500
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199600\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 1, 199500)], 'KELP': [(KELP,  << , 2022.0, 1, 199400), (KELP,  << , 2021.0, 2, 199400), (KELP,  << , 2021.0, 1, 199400), (KELP,  << , 2021.0, 3, 199400)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199600
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199700\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 199600)], 'KELP': [(KELP,  << , 2023.0, 1, 199600), (KELP,  << , 2023.0, 1, 199600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199700
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199800\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 199600)], 'KELP': [(KELP,  << , 2023.0, 1, 199600), (KELP,  << , 2023.0, 1, 199600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2023$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199800
}
{
  "sandboxLog": "",
  "lambdaLog": "state.timestamp=199900\nstate.own_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN, SUBMISSION << , 10004.0, 2, 100), (RAINFOREST_RESIN, SUBMISSION << , 10005.0, 17, 100)], 'KELP': [(KELP, SUBMISSION << , 2028.0, 2, 100), (KELP, SUBMISSION << , 2029.0, 17, 100)]}\nstate.market_trades={'RAINFOREST_RESIN': [(RAINFOREST_RESIN,  << , 10002.0, 2, 199600)], 'KELP': [(KELP,  << , 2023.0, 1, 199600), (KELP,  << , 2023.0, 1, 199600)]}\nstate.position={'KELP': 50, 'RAINFOREST_RESIN': 50}\nBUY KELP: for 2024$ -- with size: 0\nBUY RAINFOREST_RESIN: for 10005$ -- with size: 0",
  "timestamp": 199900
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss
-1;0;RAINFOREST_RESIN;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
-1;0;KELP;2028;1;2026;2;2025;29;2029;31;;;;;2028.5;0.0
-1;100;KELP;2025;24;;;;;2028;2;2029;22;;;2026.5;-66.8828125
-1;100;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-153.0
-1;200;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;200;KELP;2025;22;;;;;2028;20;;;;;2026.5;-109.7890625
-1;300;KELP;2025;31;;;;;2028;2;2029;29;;;2026.5;-105.3671875
-1;300;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;400;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;400;KELP;2025;27;;;;;2028;27;;;;;2026.5;-113.359375
-1;500;KELP;2025;30;;;;;2028;30;;;;;2026.5;-125.296875
-1;500;RAINFOREST_RESIN;9995;30;;;;;10002;4;10005;30;;;9998.5;-246.0
-1;600;RAINFOREST_RESIN;10000;5;9995;25;;;10005;25;;;;;10002.5;-246.0
-1;600;KELP;2026;5;2025;31;;;2028;25;;;;;2027.0;-137.1171875
-1;700;KELP;2025;2;2024;23;;;2028;23;;;;;2026.5;-155.046875
-1;700;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;800;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;800;KELP;2024;1;2023;29;;;2027;30;;;;;2025.5;-187.4921875
-1;900;KELP;2024;23;;;;;2027;23;;;;;2025.5;-162.8125
-1;900;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;1000;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;1000;KELP;2024;26;;;;;2026;6;2027;26;;;2025.0;-161.015625
-1;1100;KELP;2025;6;2024;26;;;2027;2;2028;24;;;2026.0;-155.453125
-1;1100;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;1200;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;-246.0
-1;1200;KELP;2024;21;;;;;2026;8;2028;21;;;2025.0;-149.828125
-1;1300;KELP;2024;31;;;;;2028;31;;;;;2026.0;-149.015625
-1;1300;RAINFOREST_RESIN;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;-246.0
-1;1400;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;1400;KELP;2025;3;2024;25;;;2028;26;;;;;2026.5;-140.3984375
-1;1500;KELP;2024;27;;;;;2028;27;;;;;2026.0;-137.796875
-1;1500;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;1600;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;1600;KELP;2024;29;;;;;2026;4;2028;29;;;2025.0;-142.3203125
-1;1700;KELP;2024;22;;;;;2026;8;2028;22;;;2025.0;-146.5625
-1;1700;RAINFOREST_RESIN;9996;2;9995;20;;;10002;1;10004;2;10005;20;9999.0;-246.0
-1;1800;RAINFOREST_RESIN;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;-246.0
-1;1800;KELP;2024;23;;;;;2028;23;;;;;2026.0;-152.2734375
-1;1900;KELP;2024;29;;;;;2026;5;2027;29;;;2025.0;-167.4296875
-1;1900;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;2000;KELP;2024;26;;;;;2027;26;;;;;2025.5;-166.2421875
-1;2000;RAINFOREST_RESIN;9996;2;9995;24;;;9998;1;10004;2;10005;24;9997.0;-246.0
-1;2100;RAINFOREST_RESIN;9996;2;9995;25;;;10002;3;10004;2;10005;25;9999.0;-246.0
-1;2100;KELP;2024;27;;;;;2027;2;2028;25;;;2025.5;-157.390625
-1;2200;RAINFOREST_RESIN;9998;8;9996;1;9995;24;10004;1;10005;24;;;10001.0;-246.0
-1;2200;KELP;2024;25;;;;;2026;7;2027;1;2028;24;2025.0;-154.859375
-1;2300;KELP;2024;32;;;;;2028;32;;;;;2026.0;-147.9609375
-1;2300;RAINFOREST_RESIN;9998;7;9996;2;9995;30;10004;2;10005;30;;;10001.0;-246.0
-1;2400;KELP;2024;29;;;;;2025;1;2028;29;;;2024.5;-144.4453125
-1;2400;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;2500;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;2500;KELP;2025;2;2024;23;;;2027;1;2028;22;;;2026.0;-154.234375
-1;2600;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;2600;KELP;2025;3;2024;23;;;2028;23;;;;;2026.5;-154.1015625
-1;2700;KELP;2024;26;;;;;2027;26;;;;;2025.5;-160.609375
-1;2700;RAINFOREST_RESIN;9998;6;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;2800;KELP;2023;25;;;;;2027;25;;;;;2025.0;-192.4609375
-1;2800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;2900;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;2900;KELP;2023;26;;;;;2027;26;;;;;2025.0;-198.546875
-1;3000;RAINFOREST_RESIN;9998;1;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;3000;KELP;2024;29;;;;;2027;26;;;;;2025.5;-182.09375
-1;3100;KELP;2023;26;;;;;2025;5;2026;26;;;2024.0;-231.671875
-1;3100;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;3200;KELP;2023;23;;;;;2025;3;2026;23;;;2024.0;-222.8359375
-1;3200;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;3300;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;3300;KELP;2023;32;;;;;2025;2;2026;32;;;2024.0;-215.8046875
-1;3400;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;3400;KELP;2023;26;;;;;2026;26;;;;;2024.5;-217.1796875
-1;3500;KELP;2023;26;;;;;2026;26;;;;;2024.5;-216.34375
-1;3500;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;3600;KELP;2023;21;;;;;2026;21;;;;;2024.5;-216.515625
-1;3600;RAINFOREST_RESIN;9995;21;;;;;9998;4;10005;21;;;9996.5;-246.0
-1;3700;RAINFOREST_RESIN;10002;1;9996;1;9995;23;10004;1;10005;23;;;10003.0;-246.0
-1;3700;KELP;2023;27;;;;;2026;24;;;;;2024.5;-231.609375
-1;3800;RAINFOREST_RESIN;9996;2;9995;23;;;10002;10;10004;2;10005;23;9999.0;-246.0
-1;3800;KELP;2023;25;;;;;2026;25;;;;;2024.5;-232.125
-1;3900;KELP;2023;28;;;;;2026;26;;;;;2024.5;-227.7890625
-1;3900;RAINFOREST_RESIN;9998;1;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;4000;KELP;2023;32;;;;;2026;32;;;;;2024.5;-218.0078125
-1;4000;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;4100;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;4100;KELP;2023;29;;;;;2027;29;;;;;2025.0;-199.421875
-1;4200;RAINFOREST_RESIN;9996;2;9995;24;;;10002;4;10004;2;10005;24;9999.0;-246.0
-1;4200;KELP;2023;26;;;;;2027;26;;;;;2025.0;-200.1796875
-1;4300;KELP;2023;29;;;;;2024;5;2026;22;;;2023.5;-219.25
-1;4300;RAINFOREST_RESIN;9995;22;;;;;9998;1;10000;6;10005;22;9996.5;-246.0
-1;4400;KELP;2023;30;;;;;2026;30;;;;;2024.5;-216.6484375
-1;4400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;4500;RAINFOREST_RESIN;9996;1;9995;28;;;10002;10;10004;1;10005;28;9999.0;-246.0
-1;4500;KELP;2023;28;;;;;2026;29;;;;;2024.5;-221.2734375
-1;4600;RAINFOREST_RESIN;9996;1;9995;29;;;10002;10;10004;1;10005;29;9999.0;-246.0
-1;4600;KELP;2023;30;;;;;2026;30;;;;;2024.5;-220.1484375
-1;4700;KELP;2023;25;;;;;2025;3;2026;32;;;2024.0;-210.515625
-1;4700;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;4800;KELP;2023;24;;;;;2027;24;;;;;2025.0;-199.75
-1;4800;RAINFOREST_RESIN;9998;6;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;4900;RAINFOREST_RESIN;9995;22;;;;;10002;7;10005;22;;;9998.5;-246.0
-1;4900;KELP;2023;22;;;;;2027;22;;;;;2025.0;-196.65625
-1;5000;RAINFOREST_RESIN;9998;3;9996;2;9995;28;10004;2;10005;28;;;10001.0;-246.0
-1;5000;KELP;2023;30;;;;;2026;30;;;;;2024.5;-217.828125
-1;5100;KELP;2023;37;;;;;2026;31;;;;;2024.5;-216.7421875
-1;5100;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;5200;KELP;2023;35;;;;;2026;27;;;;;2024.5;-218.34375
-1;5200;RAINFOREST_RESIN;9998;9;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;5300;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;5300;KELP;2025;1;2023;21;;;2026;21;;;;;2025.5;-216.2578125
-1;5400;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;5400;KELP;2023;21;;;;;2025;6;2027;21;;;2024.0;-198.9375
-1;5500;KELP;2023;27;;;;;2027;27;;;;;2025.0;-193.296875
-1;5500;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;5600;KELP;2025;2;2023;28;;;2027;28;;;;;2026.0;-190.875
-1;5600;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;5700;RAINFOREST_RESIN;9998;2;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;5700;KELP;2024;26;;;;;2027;27;;;;;2025.5;-186.3984375
-1;5800;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;5800;KELP;2024;31;;;;;2027;31;;;;;2025.5;-169.6796875
-1;5900;KELP;2024;35;;;;;2027;30;;;;;2025.5;-173.625
-1;5900;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;6000;KELP;2024;30;;;;;2027;30;;;;;2025.5;-176.0546875
-1;6000;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;6100;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;6100;KELP;2024;24;;;;;2027;25;;;;;2025.5;-176.03125
-1;6200;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;6200;KELP;2024;22;;;;;2027;22;;;;;2025.5;-173.3828125
-1;6300;KELP;2024;30;;;;;2027;25;;;;;2025.5;-162.203125
-1;6300;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;6400;KELP;2024;25;;;;;2027;25;;;;;2025.5;-163.296875
-1;6400;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;6500;RAINFOREST_RESIN;9996;1;9995;26;;;9998;1;10004;1;10005;26;9997.0;-246.0
-1;6500;KELP;2024;27;;;;;2027;27;;;;;2025.5;-173.9609375
-1;6600;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;6600;KELP;2024;26;;;;;2028;26;;;;;2026.0;-148.90625
-1;6700;KELP;2025;7;2024;20;;;2028;20;;;;;2026.5;-141.390625
-1;6700;RAINFOREST_RESIN;9995;20;;;;;10002;3;10005;20;;;9998.5;-246.0
-1;6800;KELP;2024;32;;;;;2026;8;2027;2;2028;30;2025.0;-158.5546875
-1;6800;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;6900;RAINFOREST_RESIN;9996;1;9995;26;;;10002;5;10004;1;10005;26;9999.0;-246.0
-1;6900;KELP;2024;27;;;;;2026;1;2027;27;;;2025.0;-167.21875
-1;7000;RAINFOREST_RESIN;9998;2;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;7000;KELP;2026;4;2024;27;;;2027;27;;;;;2026.5;-164.578125
-1;7100;KELP;2024;30;;;;;2027;30;;;;;2025.5;-174.7265625
-1;7100;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;7200;KELP;2024;28;;;;;2027;28;;;;;2025.5;-180.203125
-1;7200;RAINFOREST_RESIN;9998;5;9996;1;9995;27;10004;1;10005;27;;;10001.0;-246.0
-1;7300;RAINFOREST_RESIN;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;-246.0
-1;7300;KELP;2024;35;;;;;2027;31;;;;;2025.5;-180.609375
-1;7400;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;7400;KELP;2024;22;;;;;2027;23;;;;;2025.5;-178.15625
-1;7500;KELP;2024;25;;;;;2027;25;;;;;2025.5;-174.0625
-1;7500;RAINFOREST_RESIN;9995;25;;;;;10002;10;10005;25;;;9998.5;-246.0
-1;7600;KELP;2024;22;;;;;2027;22;;;;;2025.5;-175.0234375
-1;7600;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;7700;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;7700;KELP;2024;21;;;;;2027;22;;;;;2025.5;-176.0390625
-1;7800;RAINFOREST_RESIN;9998;3;9996;1;9995;22;10004;1;10005;22;;;10001.0;-246.0
-1;7800;KELP;2024;23;;;;;2027;23;;;;;2025.5;-176.9453125
-1;7900;KELP;2024;31;;;;;2027;27;;;;;2025.5;-177.4921875
-1;7900;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;8000;KELP;2024;27;;;;;2026;8;2027;27;;;2025.0;-182.78125
-1;8000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;8100;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;8100;KELP;2023;23;;;;;2027;23;;;;;2025.0;-202.0625
-1;8200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;8200;KELP;2023;23;;;;;2025;1;2026;23;;;2024.0;-209.5859375
-1;8300;KELP;2023;30;;;;;2026;30;;;;;2024.5;-227.0
-1;8300;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;8400;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;8400;KELP;2023;28;;;;;2026;28;;;;;2024.5;-226.109375
-1;8500;KELP;2023;31;;;;;2026;31;;;;;2024.5;-230.0546875
-1;8500;RAINFOREST_RESIN;9998;10;9996;2;9995;29;10004;2;10005;29;;;10001.0;-246.0
-1;8600;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;8600;KELP;2023;22;;;;;2026;23;;;;;2024.5;-221.8984375
-1;8700;KELP;2023;27;;;;;2025;4;2026;27;;;2024.0;-213.3125
-1;8700;RAINFOREST_RESIN;9998;10;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;8800;RAINFOREST_RESIN;9995;25;;;;;9998;1;10005;25;;;9996.5;-246.0
-1;8800;KELP;2024;7;2023;25;;;2027;25;;;;;2025.5;-198.453125
-1;8900;KELP;2024;1;2023;26;;;2027;26;;;;;2025.5;-201.0546875
-1;8900;RAINFOREST_RESIN;9998;9;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;9000;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;9000;KELP;2023;31;;;;;2027;31;;;;;2025.0;-202.1328125
-1;9100;KELP;2023;29;;;;;2026;2;2027;27;;;2024.5;-206.2734375
-1;9100;RAINFOREST_RESIN;9998;3;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;9200;RAINFOREST_RESIN;9998;10;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;9200;KELP;2023;27;;;;;2025;7;2026;27;;;2024.0;-208.921875
-1;9300;KELP;2023;21;;;;;2026;21;;;;;2024.5;-218.0
-1;9300;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;9400;RAINFOREST_RESIN;9998;2;9996;2;9995;21;10004;2;10005;21;;;10001.0;-246.0
-1;9400;KELP;2023;23;;;;;2026;23;;;;;2024.5;-222.25
-1;9500;KELP;2023;35;;;;;2026;31;;;;;2024.5;-218.7734375
-1;9500;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;9600;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;9600;KELP;2023;31;;;;;2026;31;;;;;2024.5;-226.421875
-1;9700;KELP;2023;22;;;;;2026;22;;;;;2024.5;-226.4765625
-1;9700;RAINFOREST_RESIN;9995;22;;;;;10002;1;10005;22;;;9998.5;-246.0
-1;9800;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;9800;KELP;2023;26;;;;;2026;26;;;;;2024.5;-224.0546875
-1;9900;KELP;2025;4;2023;25;;;2026;25;;;;;2025.5;-214.4140625
-1;9900;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;10000;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;10000;KELP;2023;36;;;;;2026;28;;;;;2024.5;-215.546875
-1;10100;KELP;2023;25;;;;;2026;25;;;;;2024.5;-219.9140625
-1;10100;RAINFOREST_RESIN;9996;1;9995;24;;;10002;3;10004;1;10005;24;9999.0;-246.0
-1;10200;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;10200;KELP;2022;28;;;;;2026;28;;;;;2024.0;-249.0625
-1;10300;KELP;2024;1;2022;35;;;2025;27;;;;;2024.5;-278.078125
-1;10300;RAINFOREST_RESIN;9998;4;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;10400;RAINFOREST_RESIN;10002;1;9996;1;9995;28;10004;1;10005;28;;;10003.0;-246.0
-1;10400;KELP;2023;1;2022;29;;;2026;29;;;;;2024.5;-245.671875
-1;10500;KELP;2023;2;2022;29;;;2026;31;;;;;2024.5;-241.0
-1;10500;RAINFOREST_RESIN;9998;4;9996;2;9995;29;10004;2;10005;29;;;10001.0;-246.0
-1;10600;RAINFOREST_RESIN;9996;2;9995;29;;;10000;4;10004;2;10005;29;9998.0;-246.0
-1;10600;KELP;2022;31;;;;;2023;4;2024;4;2025;31;2022.5;-269.125
-1;10700;KELP;2022;29;;;;;2025;28;;;;;2023.5;-274.921875
-1;10700;RAINFOREST_RESIN;9998;8;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;10800;RAINFOREST_RESIN;9998;5;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;10800;KELP;2022;27;;;;;2025;24;;;;;2023.5;-270.5234375
-1;10900;KELP;2022;35;;;;;2025;28;;;;;2023.5;-271.828125
-1;10900;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;11000;KELP;2024;7;2022;24;;;2025;24;;;;;2024.5;-271.9609375
-1;11000;RAINFOREST_RESIN;9995;24;;;;;10002;7;10005;24;;;9998.5;-246.0
-1;11100;RAINFOREST_RESIN;9998;3;9995;21;;;10005;21;;;;;10001.5;-246.0
-1;11100;KELP;2022;21;;;;;2025;21;;;;;2023.5;-269.03125
-1;11200;RAINFOREST_RESIN;9996;2;9995;21;;;10002;7;10004;2;10005;21;9999.0;-246.0
-1;11200;KELP;2022;23;;;;;2025;23;;;;;2023.5;-273.046875
-1;11300;KELP;2022;25;;;;;2025;22;;;;;2023.5;-269.28125
-1;11300;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;11400;KELP;2022;26;;;;;2025;26;;;;;2023.5;-263.859375
-1;11400;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;11500;RAINFOREST_RESIN;9996;1;9995;25;;;10002;7;10004;1;10005;25;9999.0;-246.0
-1;11500;KELP;2022;26;;;;;2024;8;2025;26;;;2023.0;-265.9375
-1;11600;RAINFOREST_RESIN;9996;2;9995;27;;;10002;2;10004;2;10005;27;9999.0;-246.0
-1;11600;KELP;2022;29;;;;;2026;29;;;;;2024.0;-242.4609375
-1;11700;KELP;2022;23;;;;;2023;2;2026;23;;;2022.5;-251.75
-1;11700;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;11800;KELP;2022;29;;;;;2024;4;2026;29;;;2023.0;-238.890625
-1;11800;RAINFOREST_RESIN;9998;10;9995;29;;;10000;5;10005;29;;;9999.0;-246.0
-1;11900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;11900;KELP;2023;2;2022;30;;;2024;3;2026;32;;;2023.5;-240.9140625
-1;12000;RAINFOREST_RESIN;10002;1;9995;20;;;10005;20;;;;;10003.5;-246.0
-1;12000;KELP;2023;20;;;;;2026;20;;;;;2024.5;-224.453125
-1;12100;KELP;2023;27;;;;;2025;1;2026;27;;;2024.0;-225.0859375
-1;12100;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;12200;KELP;2023;34;;;;;2026;30;;;;;2024.5;-225.75
-1;12200;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;12300;RAINFOREST_RESIN;9998;6;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;12300;KELP;2023;29;;;;;2026;29;;;;;2024.5;-222.65625
-1;12400;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;12400;KELP;2023;30;;;;;2026;26;;;;;2024.5;-220.1953125
-1;12500;KELP;2023;19;;;;;2026;20;;;;;2024.5;-226.4453125
-1;12500;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;12600;KELP;2023;22;;;;;2026;22;;;;;2024.5;-232.671875
-1;12600;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;12700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;12700;KELP;2023;22;;;;;2026;22;;;;;2024.5;-228.015625
-1;12800;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;12800;KELP;2023;22;;;;;2026;22;;;;;2024.5;-224.5078125
-1;12900;KELP;2023;36;;;;;2026;29;;;;;2024.5;-219.984375
-1;12900;RAINFOREST_RESIN;9996;1;9995;28;;;10002;3;10004;1;10005;28;9999.0;-246.0
-1;13000;KELP;2025;1;2023;6;2022;20;2026;20;;;;;2025.5;-240.7890625
-1;13000;RAINFOREST_RESIN;10002;1;9995;20;;;10005;20;;;;;10003.5;-246.0
-1;13100;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;13100;KELP;2023;33;;;;;2026;26;;;;;2024.5;-233.6875
-1;13200;RAINFOREST_RESIN;9998;2;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;13200;KELP;2022;22;;;;;2025;5;2026;22;;;2023.5;-237.3359375
-1;13300;KELP;2023;6;2022;24;;;2026;24;;;;;2024.5;-238.8828125
-1;13300;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;13400;KELP;2023;32;;;;;2026;32;;;;;2024.5;-236.9921875
-1;13400;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;13500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;13500;KELP;2022;30;;;;;2025;8;2026;30;;;2023.5;-237.6015625
-1;13600;RAINFOREST_RESIN;9995;25;;;;;10002;10;10005;25;;;9998.5;-246.0
-1;13600;KELP;2023;24;;;;;2025;3;2026;25;;;2024.0;-229.9296875
-1;13700;KELP;2023;25;;;;;2026;21;;;;;2024.5;-229.765625
-1;13700;RAINFOREST_RESIN;9996;1;9995;20;;;9998;4;10004;1;10005;20;9997.0;-246.0
-1;13800;KELP;2023;23;;;;;2026;22;;;;;2024.5;-226.71875
-1;13800;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;13900;RAINFOREST_RESIN;9996;2;9995;20;;;10000;6;10004;2;10005;20;9998.0;-246.0
-1;13900;KELP;2023;22;;;;;2024;6;2025;4;2026;22;2023.5;-233.390625
-1;14000;RAINFOREST_RESIN;9998;5;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;14000;KELP;2023;3;2022;29;;;2026;29;;;;;2024.5;-242.609375
-1;14100;KELP;2023;25;;;;;2025;1;2026;25;;;2024.0;-226.140625
-1;14100;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;14200;KELP;2023;20;;;;;2026;21;;;;;2024.5;-225.1796875
-1;14200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;14300;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;14300;KELP;2022;29;;;;;2026;29;;;;;2024.0;-247.875
-1;14400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;14400;KELP;2023;30;;;;;2026;30;;;;;2024.5;-236.4921875
-1;14500;KELP;2023;24;;;;;2026;24;;;;;2024.5;-234.4609375
-1;14500;RAINFOREST_RESIN;9995;24;;;;;10002;1;10005;24;;;9998.5;-246.0
-1;14600;KELP;2022;28;;;;;2024;2;2026;28;;;2023.0;-244.25
-1;14600;RAINFOREST_RESIN;9996;2;9995;26;;;10000;2;10004;2;10005;26;9998.0;-246.0
-1;14700;RAINFOREST_RESIN;9995;30;;;;;10002;7;10005;30;;;9998.5;-246.0
-1;14700;KELP;2022;30;;;;;2025;30;;;;;2023.5;-263.4609375
-1;14800;RAINFOREST_RESIN;9995;28;;;;;10002;6;10005;28;;;9998.5;-246.0
-1;14800;KELP;2022;28;;;;;2025;28;;;;;2023.5;-264.0234375
-1;14900;KELP;2023;4;2022;26;;;2025;26;;;;;2024.0;-265.4609375
-1;14900;RAINFOREST_RESIN;10000;4;9995;26;;;10005;26;;;;;10002.5;-246.0
-1;15000;KELP;2024;8;2022;25;;;2025;25;;;;;2024.5;-269.546875
-1;15000;RAINFOREST_RESIN;9998;1;9995;25;;;10005;25;;;;;10001.5;-246.0
-1;15100;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;15100;KELP;2022;27;;;;;2025;22;;;;;2023.5;-278.765625
-1;15200;RAINFOREST_RESIN;9998;6;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;15200;KELP;2022;26;;;;;2025;27;;;;;2023.5;-279.2890625
-1;15300;KELP;2022;26;;;;;2024;4;2025;26;;;2023.0;-281.046875
-1;15300;RAINFOREST_RESIN;9995;26;;;;;10002;1;10005;26;;;9998.5;-246.0
-1;15400;KELP;2022;35;;;;;2025;30;;;;;2023.5;-284.0390625
-1;15400;RAINFOREST_RESIN;9996;2;9995;28;;;9998;1;10004;2;10005;28;9997.0;-246.0
-1;15500;RAINFOREST_RESIN;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;-246.0
-1;15500;KELP;2022;31;;;;;2024;8;2025;31;;;2023.0;-277.9140625
-1;15600;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;15600;KELP;2022;31;;;;;2025;26;;;;;2023.5;-272.8359375
-1;15700;KELP;2022;25;;;;;2025;25;;;;;2023.5;-264.8828125
-1;15700;RAINFOREST_RESIN;10002;5;9996;1;9995;24;10004;1;10005;24;;;10003.0;-246.0
-1;15800;KELP;2025;1;2022;22;;;2026;22;;;;;2025.5;-247.5390625
-1;15800;RAINFOREST_RESIN;9998;10;9996;2;9995;20;10004;2;10005;20;;;10001.0;-246.0
-1;15900;RAINFOREST_RESIN;9996;2;9995;29;;;10000;6;10004;2;10005;29;9998.0;-246.0
-1;15900;KELP;2023;31;;;;;2024;6;2025;2;2026;31;2023.5;-232.109375
-1;16000;RAINFOREST_RESIN;9996;2;9995;27;;;10002;6;10004;2;10005;27;9999.0;-246.0
-1;16000;KELP;2023;29;;;;;2025;2;2026;29;;;2024.0;-234.5859375
-1;16100;KELP;2022;21;;;;;2023;2;2026;21;;;2022.5;-256.59375
-1;16100;RAINFOREST_RESIN;9995;21;;;;;10000;2;10002;10;10005;21;9997.5;-246.0
-1;16200;KELP;2022;24;;;;;2023;1;2026;24;;;2022.5;-250.8046875
-1;16200;RAINFOREST_RESIN;9995;24;;;;;9998;1;10005;24;;;9996.5;-246.0
-1;16300;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;16300;KELP;2023;2;2022;23;;;2026;23;;;;;2024.5;-252.3828125
-1;16400;RAINFOREST_RESIN;9996;2;9995;30;;;10002;3;10004;2;10005;30;9999.0;-246.0
-1;16400;KELP;2023;2;2022;30;;;2026;32;;;;;2024.5;-242.234375
-1;16500;KELP;2023;2;2022;21;;;2026;23;;;;;2024.5;-241.09375
-1;16500;RAINFOREST_RESIN;9996;2;9995;21;;;10002;7;10004;2;10005;21;9999.0;-246.0
-1;16600;KELP;2022;30;;;;;2023;1;2026;30;;;2022.5;-246.1640625
-1;16600;RAINFOREST_RESIN;9998;4;9996;2;9995;28;10004;2;10005;28;;;10001.0;-246.0
-1;16700;RAINFOREST_RESIN;10002;1;9995;26;;;10005;26;;;;;10003.5;-246.0
-1;16700;KELP;2025;1;2022;26;;;2026;26;;;;;2025.5;-241.9765625
-1;16800;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;16800;KELP;2022;26;;;;;2026;26;;;;;2024.0;-247.4921875
-1;16900;KELP;2023;1;2022;25;;;2026;26;;;;;2024.5;-241.515625
-1;16900;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;17000;KELP;2023;29;;;;;2026;29;;;;;2024.5;-235.4296875
-1;17000;RAINFOREST_RESIN;9998;9;9995;29;;;10005;29;;;;;10001.5;-246.0
-1;17100;KELP;2023;23;;;;;2026;23;;;;;2024.5;-230.0703125
-1;17100;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;17200;RAINFOREST_RESIN;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;17200;KELP;2023;24;;;;;2026;24;;;;;2024.5;-223.609375
-1;17300;KELP;2023;25;;;;;2025;6;2026;25;;;2024.0;-219.46875
-1;17300;RAINFOREST_RESIN;9996;2;9995;23;;;10002;9;10004;2;10005;23;9999.0;-246.0
-1;17400;RAINFOREST_RESIN;10000;6;9998;7;9995;28;10005;28;;;;;10002.5;-246.0
-1;17400;KELP;2024;6;2023;28;;;2026;28;;;;;2025.0;-208.828125
-1;17500;KELP;2023;26;;;;;2027;26;;;;;2025.0;-207.0546875
-1;17500;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;17600;RAINFOREST_RESIN;9998;6;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;17600;KELP;2023;30;;;;;2026;30;;;;;2024.5;-212.2421875
-1;17700;KELP;2025;1;2023;29;;;2026;29;;;;;2025.5;-215.90625
-1;17700;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;17800;RAINFOREST_RESIN;9996;2;9995;24;;;10002;5;10004;2;10005;24;9999.0;-246.0
-1;17800;KELP;2023;26;;;;;2026;2;2027;24;;;2024.5;-208.6328125
-1;17900;KELP;2023;23;;;;;2027;23;;;;;2025.0;-206.578125
-1;17900;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;18000;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;18000;KELP;2023;27;;;;;2026;27;;;;;2024.5;-210.65625
-1;18100;KELP;2023;20;;;;;2027;20;;;;;2025.0;-196.734375
-1;18100;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;18200;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;18200;KELP;2024;21;;;;;2027;26;;;;;2025.5;-181.7265625
-1;18300;KELP;2023;25;;;;;2027;25;;;;;2025.0;-192.4453125
-1;18300;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;18400;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;18400;KELP;2024;25;;;;;2026;5;2027;25;;;2025.0;-172.8359375
-1;18500;KELP;2024;29;;;;;2025;1;2027;29;;;2024.5;-169.6953125
-1;18500;RAINFOREST_RESIN;9995;29;;;;;10000;2;10005;29;;;9997.5;-246.0
-1;18600;RAINFOREST_RESIN;10002;1;9995;20;;;10005;20;;;;;10003.5;-246.0
-1;18600;KELP;2024;20;;;;;2026;5;2027;20;;;2025.0;-164.359375
-1;18700;KELP;2024;22;;;;;2027;22;;;;;2025.5;-162.8828125
-1;18700;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;18800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;18800;KELP;2024;28;;;;;2027;28;;;;;2025.5;-174.4765625
-1;18900;KELP;2024;22;;;;;2027;22;;;;;2025.5;-169.3671875
-1;18900;RAINFOREST_RESIN;9998;2;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;19000;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;19000;KELP;2024;18;;;;;2027;28;;;;;2025.5;-168.34375
-1;19100;KELP;2024;28;;;;;2027;28;;;;;2025.5;-166.984375
-1;19100;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;19200;RAINFOREST_RESIN;9996;1;9995;20;;;9998;1;10004;1;10005;20;9997.0;-246.0
-1;19200;KELP;2024;21;;;;;2027;21;;;;;2025.5;-163.8125
-1;19300;KELP;2024;23;;;;;2027;23;;;;;2025.5;-163.078125
-1;19300;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;19400;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;19400;KELP;2023;26;;;;;2027;26;;;;;2025.0;-189.25
-1;19500;KELP;2024;23;;;;;2027;23;;;;;2025.5;-174.4765625
-1;19500;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;19600;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;19600;KELP;2024;2;2023;27;;;2027;29;;;;;2025.5;-188.9765625
-1;19700;KELP;2024;31;;;;;2026;7;2027;32;;;2025.0;-184.34375
-1;19700;RAINFOREST_RESIN;10002;1;9996;2;9995;30;10004;2;10005;30;;;10003.0;-246.0
-1;19800;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;19800;KELP;2024;31;;;;;2027;31;;;;;2025.5;-178.2734375
-1;19900;KELP;2024;32;;;;;2027;32;;;;;2025.5;-171.765625
-1;19900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;20000;KELP;2024;2;2023;27;;;2027;27;;;;;2025.5;-199.75
-1;20000;RAINFOREST_RESIN;9995;27;;;;;10002;4;10005;27;;;9998.5;-246.0
-1;20100;RAINFOREST_RESIN;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;-246.0
-1;20100;KELP;2023;31;;;;;2025;4;2027;31;;;2024.0;-197.046875
-1;20200;RAINFOREST_RESIN;9995;29;;;;;9998;1;10005;29;;;9996.5;-246.0
-1;20200;KELP;2023;29;;;;;2027;29;;;;;2025.0;-203.484375
-1;20300;KELP;2024;26;;;;;2027;27;;;;;2025.5;-167.9609375
-1;20300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;20400;KELP;2024;30;;;;;2025;4;2027;29;;;2024.5;-182.046875
-1;20400;RAINFOREST_RESIN;9996;1;9995;28;;;10000;4;10004;1;10005;28;9998.0;-246.0
-1;20500;RAINFOREST_RESIN;10000;3;9996;2;9995;30;10004;2;10005;30;;;10002.0;-246.0
-1;20500;KELP;2025;4;2024;7;2023;30;2027;32;;;;;2026.0;-190.90625
-1;20600;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;20600;KELP;2023;28;;;;;2027;28;;;;;2025.0;-192.34375
-1;20700;KELP;2025;6;2023;22;;;2027;22;;;;;2026.0;-190.5
-1;20700;RAINFOREST_RESIN;10002;1;10000;6;9998;4;10005;22;;;;;10003.5;-246.0
-1;20800;KELP;2024;2;2023;22;;;2027;24;;;;;2025.5;-189.890625
-1;20800;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;20900;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;20900;KELP;2026;1;2023;23;;;2027;23;;;;;2026.5;-187.6484375
-1;21000;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;21000;KELP;2024;28;;;;;2027;28;;;;;2025.5;-185.25
-1;21100;KELP;2024;2;2023;22;;;2027;24;;;;;2025.5;-189.71875
-1;21100;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;21200;KELP;2024;22;;;;;2027;22;;;;;2025.5;-182.546875
-1;21200;RAINFOREST_RESIN;9995;22;;;;;9998;1;10005;22;;;9996.5;-246.0
-1;21300;RAINFOREST_RESIN;9996;1;9995;29;;;10002;7;10004;1;10005;29;9999.0;-246.0
-1;21300;KELP;2024;1;2023;29;;;2027;30;;;;;2025.5;-188.34375
-1;21400;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;21400;KELP;2024;28;;;;;2027;28;;;;;2025.5;-183.1484375
-1;21500;KELP;2026;4;2024;21;;;2027;21;;;;;2026.5;-163.1953125
-1;21500;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;21600;KELP;2024;27;;;;;2027;2;2028;25;;;2025.5;-156.9609375
-1;21600;RAINFOREST_RESIN;10002;12;9996;2;9995;25;10004;2;10005;25;;;10003.0;-246.0
-1;21700;RAINFOREST_RESIN;9998;8;9996;2;9995;29;10004;2;10005;29;;;10001.0;-246.0
-1;21700;KELP;2024;31;;;;;2027;31;;;;;2025.5;-161.4375
-1;21800;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;21800;KELP;2024;24;;;;;2028;24;;;;;2026.0;-152.6796875
-1;21900;KELP;2024;22;;;;;2028;22;;;;;2026.0;-150.5859375
-1;21900;RAINFOREST_RESIN;10002;3;9996;1;9995;21;10004;1;10005;21;;;10003.0;-246.0
-1;22000;KELP;2024;21;;;;;2028;21;;;;;2026.0;-157.1953125
-1;22000;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;22100;RAINFOREST_RESIN;9996;2;9995;22;;;10002;7;10004;2;10005;22;9999.0;-246.0
-1;22100;KELP;2024;23;;;;;2027;24;;;;;2025.5;-173.125
-1;22200;RAINFOREST_RESIN;9998;6;9996;1;9995;20;10004;1;10005;20;;;10001.0;-246.0
-1;22200;KELP;2024;21;;;;;2027;21;;;;;2025.5;-182.9453125
-1;22300;KELP;2023;29;;;;;2026;1;2027;28;;;2024.5;-208.234375
-1;22300;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;22400;KELP;2023;29;;;;;2026;29;;;;;2024.5;-210.40625
-1;22400;RAINFOREST_RESIN;9996;2;9995;27;;;9998;1;10004;2;10005;27;9997.0;-246.0
-1;22500;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;22500;KELP;2023;31;;;;;2026;31;;;;;2024.5;-221.65625
-1;22600;RAINFOREST_RESIN;10000;6;9998;6;9996;2;10004;2;10005;20;;;10002.0;-246.0
-1;22600;KELP;2024;6;2023;26;;;2026;22;;;;;2025.0;-225.296875
-1;22700;KELP;2023;25;;;;;2026;26;;;;;2024.5;-227.046875
-1;22700;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;22800;KELP;2023;27;;;;;2026;28;;;;;2024.5;-236.8125
-1;22800;RAINFOREST_RESIN;9996;1;9995;27;;;9998;2;10004;1;10005;27;9997.0;-246.0
-1;22900;RAINFOREST_RESIN;9996;2;9995;30;;;10002;8;10004;2;10005;30;9999.0;-246.0
-1;22900;KELP;2023;2;2022;30;;;2026;32;;;;;2024.5;-239.3828125
-1;23000;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;23000;KELP;2022;22;;;;;2026;22;;;;;2024.0;-246.1640625
-1;23100;KELP;2023;23;;;;;2026;23;;;;;2024.5;-232.859375
-1;23100;RAINFOREST_RESIN;9998;8;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;23200;KELP;2023;2;2022;29;;;2024;3;2026;31;;;2023.5;-238.5859375
-1;23200;RAINFOREST_RESIN;9998;5;9996;2;9995;29;10004;2;10005;29;;;10001.0;-246.0
-1;23300;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;23300;KELP;2023;30;;;;;2026;30;;;;;2024.5;-229.9765625
-1;23400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;23400;KELP;2023;30;;;;;2026;30;;;;;2024.5;-229.4296875
-1;23500;KELP;2023;29;;;;;2025;4;2026;30;;;2024.0;-229.875
-1;23500;RAINFOREST_RESIN;9998;8;9996;2;9995;28;10004;2;10005;28;;;10001.0;-246.0
-1;23600;KELP;2022;27;;;;;2026;27;;;;;2024.0;-238.4765625
-1;23600;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;23700;RAINFOREST_RESIN;10002;1;9996;2;9995;21;10004;2;10005;21;;;10003.0;-246.0
-1;23700;KELP;2023;2;2022;21;;;2025;7;2026;23;;;2024.0;-237.8828125
-1;23800;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;23800;KELP;2024;1;2022;30;;;2026;30;;;;;2025.0;-254.09375
-1;23900;KELP;2025;1;2023;1;2022;30;2026;30;;;;;2025.5;-242.703125
-1;23900;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;24000;KELP;2022;29;;;;;2026;29;;;;;2024.0;-242.9921875
-1;24000;RAINFOREST_RESIN;9998;9;9995;29;;;10005;29;;;;;10001.5;-246.0
-1;24100;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;24100;KELP;2023;1;2022;25;;;2025;3;2026;26;;;2024.0;-237.53125
-1;24200;RAINFOREST_RESIN;9996;2;9995;28;;;10002;6;10004;2;10005;28;9999.0;-246.0
-1;24200;KELP;2023;30;;;;;2026;30;;;;;2024.5;-230.0390625
-1;24300;KELP;2023;26;;;;;2026;26;;;;;2024.5;-228.859375
-1;24300;RAINFOREST_RESIN;9996;2;9995;24;;;10002;1;10004;2;10005;24;9999.0;-246.0
-1;24400;KELP;2025;1;2023;22;;;2026;22;;;;;2025.5;-235.09375
-1;24400;RAINFOREST_RESIN;10002;1;9998;4;9996;1;10004;1;10005;21;;;10003.0;-246.0
-1;24500;RAINFOREST_RESIN;10002;1;9996;1;9995;25;10004;1;10005;25;;;10003.0;-246.0
-1;24500;KELP;2022;26;;;;;2026;26;;;;;2024.0;-246.953125
-1;24600;RAINFOREST_RESIN;9995;24;;;;;9998;2;10005;24;;;9996.5;-246.0
-1;24600;KELP;2022;24;;;;;2024;2;2026;24;;;2023.0;-238.8984375
-1;24700;KELP;2023;25;;;;;2026;25;;;;;2024.5;-232.1640625
-1;24700;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;24800;KELP;2022;23;;;;;2026;23;;;;;2024.0;-245.4375
-1;24800;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;24900;RAINFOREST_RESIN;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;-246.0
-1;24900;KELP;2024;4;2022;23;;;2026;23;;;;;2025.0;-242.484375
-1;25000;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;25000;KELP;2023;23;;;;;2026;23;;;;;2024.5;-233.3671875
-1;25100;KELP;2022;25;;;;;2024;4;2026;25;;;2023.0;-240.5078125
-1;25100;RAINFOREST_RESIN;10002;1;9995;25;;;10005;25;;;;;10003.5;-246.0
-1;25200;KELP;2023;1;2022;24;;;2025;3;2026;25;;;2024.0;-238.4765625
-1;25200;RAINFOREST_RESIN;9996;1;9995;24;;;9998;5;10004;1;10005;24;9997.0;-246.0
-1;25300;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;25300;KELP;2023;4;2022;22;;;2026;24;;;;;2024.5;-238.5390625
-1;25400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;25400;KELP;2025;8;2023;30;;;2026;30;;;;;2025.5;-235.34375
-1;25500;KELP;2022;21;;;;;2025;21;;;;;2023.5;-263.6328125
-1;25500;RAINFOREST_RESIN;9996;1;9995;20;;;9998;6;10002;9;10004;1;9997.0;-246.0
-1;25600;KELP;2023;31;;;;;2026;23;;;;;2024.5;-234.484375
-1;25600;RAINFOREST_RESIN;9996;1;9995;22;;;10002;7;10004;1;10005;22;9999.0;-246.0
-1;25700;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;25700;KELP;2023;32;;;;;2025;6;2026;32;;;2024.0;-227.546875
-1;25800;RAINFOREST_RESIN;10002;4;9995;24;;;10005;24;;;;;10003.5;-246.0
-1;25800;KELP;2023;23;;;;;2026;24;;;;;2024.5;-219.078125
-1;25900;KELP;2023;25;;;;;2026;25;;;;;2024.5;-230.3828125
-1;25900;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;26000;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;26000;KELP;2023;22;;;;;2026;29;;;;;2024.5;-237.0078125
-1;26100;KELP;2023;20;;;;;2026;20;;;;;2024.5;-229.359375
-1;26100;RAINFOREST_RESIN;9998;7;9995;20;;;10005;20;;;;;10001.5;-246.0
-1;26200;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;26200;KELP;2023;23;;;;;2026;23;;;;;2024.5;-227.2890625
-1;26300;KELP;2023;30;;;;;2026;30;;;;;2024.5;-229.328125
-1;26300;RAINFOREST_RESIN;9996;1;9995;29;;;9998;1;10004;1;10005;29;9997.0;-246.0
-1;26400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;26400;KELP;2023;27;;;;;2026;22;;;;;2024.5;-233.25
-1;26500;KELP;2023;24;;;;;2026;24;;;;;2024.5;-234.1640625
-1;26500;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;26600;RAINFOREST_RESIN;9996;2;9995;28;;;9998;1;10004;2;10005;28;9997.0;-246.0
-1;26600;KELP;2023;36;;;;;2026;30;;;;;2024.5;-230.0078125
-1;26700;KELP;2023;24;;;;;2025;6;2026;24;;;2024.0;-230.546875
-1;26700;RAINFOREST_RESIN;9998;2;9996;1;9995;23;10004;1;10005;23;;;10001.0;-246.0
-1;26800;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;26800;KELP;2025;1;2023;30;;;2026;30;;;;;2025.5;-232.09375
-1;26900;KELP;2023;29;;;;;2026;30;;;;;2024.5;-233.0390625
-1;26900;RAINFOREST_RESIN;10002;1;9995;30;;;10005;30;;;;;10003.5;-246.0
-1;27000;RAINFOREST_RESIN;9995;28;;;;;10002;1;10005;28;;;9998.5;-246.0
-1;27000;KELP;2023;30;;;;;2026;28;;;;;2024.5;-232.484375
-1;27100;KELP;2023;27;;;;;2026;24;;;;;2024.5;-228.015625
-1;27100;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;27200;RAINFOREST_RESIN;9998;2;9995;21;;;10005;21;;;;;10001.5;-246.0
-1;27200;KELP;2023;21;;;;;2025;2;2026;21;;;2024.0;-230.0703125
-1;27300;KELP;2025;1;2023;31;;;2026;31;;;;;2025.5;-228.578125
-1;27300;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;27400;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;27400;KELP;2023;21;;;;;2026;21;;;;;2024.5;-216.234375
-1;27500;KELP;2023;23;;;;;2025;6;2026;23;;;2024.0;-214.140625
-1;27500;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;27600;RAINFOREST_RESIN;9998;5;9995;24;;;10005;24;;;;;10001.5;-246.0
-1;27600;KELP;2023;30;;;;;2026;24;;;;;2024.5;-220.0
-1;27700;KELP;2023;19;;;;;2026;24;;;;;2024.5;-217.8359375
-1;27700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;27800;RAINFOREST_RESIN;9998;9;9996;2;9995;26;10004;2;10005;26;;;10001.0;-246.0
-1;27800;KELP;2023;28;;;;;2025;3;2026;28;;;2024.0;-211.90625
-1;27900;KELP;2025;1;2023;29;;;2026;29;;;;;2025.5;-215.3671875
-1;27900;RAINFOREST_RESIN;9996;2;9995;27;;;10002;4;10004;2;10005;27;9999.0;-246.0
-1;28000;RAINFOREST_RESIN;9998;2;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;28000;KELP;2023;28;;;;;2026;28;;;;;2024.5;-210.8515625
-1;28100;KELP;2023;26;;;;;2026;26;;;;;2024.5;-215.046875
-1;28100;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;28200;RAINFOREST_RESIN;9996;1;9995;25;;;9998;2;10004;1;10005;25;9997.0;-246.0
-1;28200;KELP;2023;26;;;;;2025;5;2026;1;2027;25;2024.0;-204.359375
-1;28300;KELP;2023;24;;;;;2024;2;2027;24;;;2023.5;-201.328125
-1;28300;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;28400;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;28400;KELP;2023;24;;;;;2027;25;;;;;2025.0;-203.4140625
-1;28500;KELP;2023;23;;;;;2027;23;;;;;2025.0;-197.875
-1;28500;RAINFOREST_RESIN;9998;10;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;28600;RAINFOREST_RESIN;10002;1;9996;2;9995;21;10004;2;10005;21;;;10003.0;-246.0
-1;28600;KELP;2023;23;;;;;2025;8;2027;23;;;2024.0;-197.4296875
-1;28700;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;28700;KELP;2023;30;;;;;2027;30;;;;;2025.0;-194.2578125
-1;28800;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;28800;KELP;2024;27;;;;;2027;27;;;;;2025.5;-185.265625
-1;28900;KELP;2024;26;;;;;2027;22;;;;;2025.5;-167.90625
-1;28900;RAINFOREST_RESIN;9998;7;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;29000;KELP;2024;23;;;;;2027;24;;;;;2025.5;-179.7890625
-1;29000;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;29100;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;29100;KELP;2024;31;;;;;2027;28;;;;;2025.5;-174.4765625
-1;29200;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;29200;KELP;2026;1;2024;31;;;2027;31;;;;;2026.5;-178.109375
-1;29300;KELP;2024;32;;;;;2026;2;2027;32;;;2025.0;-176.703125
-1;29300;RAINFOREST_RESIN;9996;2;9995;30;;;10002;3;10004;2;10005;30;9999.0;-246.0
-1;29400;KELP;2024;25;;;;;2027;26;;;;;2025.5;-175.5546875
-1;29400;RAINFOREST_RESIN;10002;1;9996;1;9995;25;10004;1;10005;25;;;10003.0;-246.0
-1;29500;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;29500;KELP;2024;31;;;;;2027;29;;;;;2025.5;-174.6484375
-1;29600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;29600;KELP;2024;2;2023;28;;;2025;3;2027;30;;;2024.5;-190.421875
-1;29700;KELP;2024;28;;;;;2027;26;;;;;2025.5;-162.015625
-1;29700;RAINFOREST_RESIN;9996;1;9995;25;;;10002;4;10004;1;10005;25;9999.0;-246.0
-1;29800;KELP;2024;31;;;;;2026;1;2027;1;2028;30;2025.0;-157.7578125
-1;29800;RAINFOREST_RESIN;9998;6;9996;1;9995;30;10004;1;10005;30;;;10001.0;-246.0
-1;29900;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;29900;KELP;2025;8;2024;21;;;2028;21;;;;;2026.5;-154.7109375
-1;30000;RAINFOREST_RESIN;9998;3;9996;1;9995;30;10004;1;10005;30;;;10001.0;-246.0
-1;30000;KELP;2024;31;;;;;2028;31;;;;;2026.0;-149.890625
-1;30100;KELP;2024;30;;;;;2027;30;;;;;2025.5;-163.1171875
-1;30100;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;30200;KELP;2024;22;;;;;2027;22;;;;;2025.5;-159.28125
-1;30200;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;30300;RAINFOREST_RESIN;9996;2;9995;29;;;10002;9;10004;2;10005;29;9999.0;-246.0
-1;30300;KELP;2026;1;2024;31;;;2027;31;;;;;2026.5;-165.90625
-1;30400;RAINFOREST_RESIN;10000;5;9996;2;9995;29;10002;8;10004;2;10005;29;10001.0;-246.0
-1;30400;KELP;2025;5;2024;31;;;2027;31;;;;;2026.0;-173.4296875
-1;30500;KELP;2024;22;;;;;2027;22;;;;;2025.5;-186.109375
-1;30500;RAINFOREST_RESIN;9998;5;9996;2;9995;20;10004;2;10005;20;;;10001.0;-246.0
-1;30600;KELP;2024;1;2023;20;;;2027;22;;;;;2025.5;-189.2265625
-1;30600;RAINFOREST_RESIN;9996;2;9995;20;;;10002;4;10004;2;10005;20;9999.0;-246.0
-1;30700;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;30700;KELP;2024;30;;;;;2027;30;;;;;2025.5;-186.09375
-1;30800;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;30800;KELP;2024;4;2023;30;;;2027;31;;;;;2025.5;-188.1171875
-1;30900;KELP;2023;30;;;;;2025;7;2026;30;;;2024.0;-216.90625
-1;30900;RAINFOREST_RESIN;9996;2;9995;28;;;10002;6;10004;2;10005;28;9999.0;-246.0
-1;31000;KELP;2024;4;2023;30;;;2026;23;;;;;2025.0;-213.25
-1;31000;RAINFOREST_RESIN;10000;4;9996;1;9995;22;10004;1;10005;22;;;10002.0;-246.0
-1;31100;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;31100;KELP;2023;29;;;;;2026;2;2027;27;;;2024.5;-208.1328125
-1;31200;RAINFOREST_RESIN;9996;2;9995;29;;;10002;6;10004;2;10005;29;9999.0;-246.0
-1;31200;KELP;2023;31;;;;;2026;31;;;;;2024.5;-209.75
-1;31300;KELP;2023;24;;;;;2026;24;;;;;2024.5;-211.1484375
-1;31300;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;31400;KELP;2023;26;;;;;2026;26;;;;;2024.5;-221.296875
-1;31400;RAINFOREST_RESIN;9995;26;;;;;9998;1;10005;26;;;9996.5;-246.0
-1;31500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;31500;KELP;2023;35;;;;;2026;30;;;;;2024.5;-218.265625
-1;31600;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;31600;KELP;2025;1;2023;27;;;2026;27;;;;;2025.5;-213.5859375
-1;31700;KELP;2023;24;;;;;2025;3;2026;24;;;2024.0;-212.4921875
-1;31700;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;31800;KELP;2024;6;2023;26;;;2026;1;2027;25;;;2025.0;-204.328125
-1;31800;RAINFOREST_RESIN;10000;6;9996;1;9995;25;10004;1;10005;25;;;10002.0;-246.0
-1;31900;RAINFOREST_RESIN;9998;3;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;31900;KELP;2024;4;2023;28;;;2027;28;;;;;2025.5;-203.6640625
-1;32000;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;32000;KELP;2024;2;2023;25;;;2026;1;2027;24;;;2025.0;-206.5859375
-1;32100;KELP;2023;29;;;;;2026;29;;;;;2024.5;-222.734375
-1;32100;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;32200;KELP;2023;28;;;;;2027;28;;;;;2025.0;-200.6796875
-1;32200;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;32300;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;32300;KELP;2023;25;;;;;2026;25;;;;;2024.5;-215.0078125
-1;32400;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;32400;KELP;2023;30;;;;;2026;1;2027;30;;;2024.5;-207.421875
-1;32500;KELP;2023;21;;;;;2025;5;2027;22;;;2024.0;-200.9140625
-1;32500;RAINFOREST_RESIN;9998;1;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;32600;KELP;2023;30;;;;;2027;30;;;;;2025.0;-197.8046875
-1;32600;RAINFOREST_RESIN;10002;1;9995;30;;;10005;30;;;;;10003.5;-246.0
-1;32700;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;32700;KELP;2023;24;;;;;2026;2;2027;22;;;2024.5;-203.875
-1;32800;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;32800;KELP;2023;30;;;;;2026;2;2027;28;;;2024.5;-204.9921875
-1;32900;KELP;2023;29;;;;;2026;2;2027;27;;;2024.5;-208.5234375
-1;32900;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;33000;KELP;2025;1;2023;30;;;2026;30;;;;;2025.5;-214.0390625
-1;33000;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;33100;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;33100;KELP;2023;28;;;;;2025;3;2026;29;;;2024.0;-213.4609375
-1;33200;RAINFOREST_RESIN;9996;1;9995;20;;;10002;7;10004;1;10005;20;9999.0;-246.0
-1;33200;KELP;2023;20;;;;;2024;10;2026;1;2027;20;2023.5;-204.421875
-1;33300;KELP;2024;1;2023;20;;;2027;21;;;;;2025.5;-188.4140625
-1;33300;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;33400;KELP;2023;32;;;;;2027;32;;;;;2025.0;-194.6640625
-1;33400;RAINFOREST_RESIN;9996;2;9995;30;;;10002;3;10004;2;10005;30;9999.0;-246.0
-1;33500;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;33500;KELP;2023;21;;;;;2026;21;;;;;2024.5;-217.265625
-1;33600;RAINFOREST_RESIN;10002;6;9995;27;;;10005;27;;;;;10003.5;-246.0
-1;33600;KELP;2023;27;;;;;2026;27;;;;;2024.5;-220.5859375
-1;33700;KELP;2023;32;;;;;2026;28;;;;;2024.5;-225.6953125
-1;33700;RAINFOREST_RESIN;9996;1;9995;27;;;10002;1;10004;1;10005;27;9999.0;-246.0
-1;33800;KELP;2024;3;2023;31;;;2026;26;;;;;2025.0;-233.4296875
-1;33800;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;33900;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;33900;KELP;2023;24;;;;;2026;24;;;;;2024.5;-225.6953125
-1;34000;RAINFOREST_RESIN;10002;1;9995;30;;;10005;30;;;;;10003.5;-246.0
-1;34000;KELP;2023;29;;;;;2025;8;2026;30;;;2024.0;-223.234375
-1;34100;KELP;2023;25;;;;;2026;23;;;;;2024.5;-230.140625
-1;34100;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;34200;KELP;2022;23;;;;;2024;1;2026;23;;;2023.0;-247.4296875
-1;34200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;34300;RAINFOREST_RESIN;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;-246.0
-1;34300;KELP;2022;23;;;;;2026;23;;;;;2024.0;-253.046875
-1;34400;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;34400;KELP;2023;3;2022;25;;;2025;2;2026;23;;;2024.0;-254.15625
-1;34500;KELP;2022;30;;;;;2023;5;2024;1;2026;30;2022.5;-253.7578125
-1;34500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;34600;KELP;2022;29;;;;;2023;1;2026;29;;;2022.5;-244.078125
-1;34600;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;34700;RAINFOREST_RESIN;9998;6;9995;24;;;10005;24;;;;;10001.5;-246.0
-1;34700;KELP;2023;24;;;;;2026;24;;;;;2024.5;-236.8515625
-1;34800;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;34800;KELP;2023;2;2022;23;;;2026;25;;;;;2024.5;-241.78125
-1;34900;KELP;2023;21;;;;;2026;21;;;;;2024.5;-235.6796875
-1;34900;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;35000;RAINFOREST_RESIN;10002;1;9995;20;;;10005;20;;;;;10003.5;-246.0
-1;35000;KELP;2025;1;2023;20;;;2026;20;;;;;2025.5;-208.7578125
-1;35100;KELP;2023;31;;;;;2026;31;;;;;2024.5;-223.515625
-1;35100;RAINFOREST_RESIN;10002;3;9996;2;9995;29;10004;2;10005;29;;;10003.0;-246.0
-1;35200;RAINFOREST_RESIN;9996;2;9995;28;;;10002;10;10004;2;10005;28;9999.0;-246.0
-1;35200;KELP;2023;33;;;;;2026;30;;;;;2024.5;-215.015625
-1;35300;KELP;2023;20;;;;;2026;28;;;;;2024.5;-231.75
-1;35300;RAINFOREST_RESIN;9998;6;9996;1;9995;27;10004;1;10005;27;;;10001.0;-246.0
-1;35400;RAINFOREST_RESIN;10002;3;9995;25;;;10005;25;;;;;10003.5;-246.0
-1;35400;KELP;2025;1;2023;27;;;2026;25;;;;;2025.5;-233.8125
-1;35500;KELP;2023;28;;;;;2026;28;;;;;2024.5;-231.8203125
-1;35500;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;35600;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;35600;KELP;2023;26;;;;;2026;26;;;;;2024.5;-235.4296875
-1;35700;KELP;2023;29;;;;;2026;29;;;;;2024.5;-230.328125
-1;35700;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;35800;RAINFOREST_RESIN;9998;7;9996;1;9995;30;10004;1;10005;30;;;10001.0;-246.0
-1;35800;KELP;2023;29;;;;;2026;31;;;;;2024.5;-231.3671875
-1;35900;KELP;2023;2;2022;21;;;2026;23;;;;;2024.5;-241.1328125
-1;35900;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;36000;RAINFOREST_RESIN;9995;30;;;;;10002;5;10005;30;;;9998.5;-246.0
-1;36000;KELP;2022;30;;;;;2024;3;2026;30;;;2023.0;-240.921875
-1;36100;KELP;2022;26;;;;;2025;2;2026;24;;;2023.5;-254.828125
-1;36100;RAINFOREST_RESIN;10002;8;9996;2;9995;24;10004;2;10005;24;;;10003.0;-246.0
-1;36200;RAINFOREST_RESIN;9996;1;9995;29;;;9998;1;10004;1;10005;29;9997.0;-246.0
-1;36200;KELP;2022;30;;;;;2025;1;2026;29;;;2023.5;-254.390625
-1;36300;KELP;2022;22;;;;;2024;6;2025;22;;;2023.0;-259.1171875
-1;36300;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;36400;RAINFOREST_RESIN;9998;1;9996;1;9995;20;10004;1;10005;20;;;10001.0;-246.0
-1;36400;KELP;2024;1;2023;3;2022;21;2025;1;2026;20;;;2024.5;-257.09375
-1;36500;KELP;2022;25;;;;;2023;2;2025;25;;;2022.5;-265.7421875
-1;36500;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;36600;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;36600;KELP;2022;29;;;;;2025;29;;;;;2023.5;-260.2890625
-1;36700;KELP;2021;21;;;;;2025;21;;;;;2023.0;-304.421875
-1;36700;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;36800;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;36800;KELP;2021;30;;;;;2025;30;;;;;2023.0;-300.609375
-1;36900;KELP;2021;27;;;;;2024;27;;;;;2022.5;-332.09375
-1;36900;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;37000;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;37000;KELP;2020;25;;;;;2024;25;;;;;2022.0;-351.1171875
-1;37100;KELP;2021;27;;;;;2024;23;;;;;2022.5;-319.28125
-1;37100;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;37200;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;37200;KELP;2021;25;;;;;2024;21;;;;;2022.5;-322.3515625
-1;37300;KELP;2022;4;2021;28;;;2024;1;2025;27;;;2023.0;-307.4140625
-1;37300;RAINFOREST_RESIN;9996;1;9995;27;;;9998;10;10002;4;10004;1;9997.0;-246.0
-1;37400;RAINFOREST_RESIN;10002;1;9998;2;9995;30;10005;30;;;;;10003.5;-246.0
-1;37400;KELP;2021;30;;;;;2024;30;;;;;2022.5;-312.3828125
-1;37500;KELP;2020;27;;;;;2024;27;;;;;2022.0;-347.9765625
-1;37500;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;37600;KELP;2020;22;;;;;2024;22;;;;;2022.0;-355.125
-1;37600;RAINFOREST_RESIN;9995;22;;;;;10002;7;10005;22;;;9998.5;-246.0
-1;37700;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;37700;KELP;2020;24;;;;;2024;24;;;;;2022.0;-353.0703125
-1;37800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;37800;KELP;2020;24;;;;;2024;25;;;;;2022.0;-358.0
-1;37900;KELP;2019;25;;;;;2023;25;;;;;2021.0;-398.2265625
-1;37900;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;38000;KELP;2019;32;;;;;2021;4;2023;32;;;2020.0;-398.6640625
-1;38000;RAINFOREST_RESIN;10002;1;9996;2;9995;30;10004;2;10005;30;;;10003.0;-246.0
-1;38100;RAINFOREST_RESIN;9996;2;9995;26;;;10002;2;10004;2;10005;26;9999.0;-246.0
-1;38100;KELP;2019;28;;;;;2022;2;2023;26;;;2020.5;-405.9140625
-1;38200;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;38200;KELP;2019;28;;;;;2023;28;;;;;2021.0;-393.0625
-1;38300;KELP;2019;26;;;;;2022;26;;;;;2020.5;-411.046875
-1;38300;RAINFOREST_RESIN;9998;5;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;38400;KELP;2019;24;;;;;2020;6;2022;24;;;2019.5;-413.1953125
-1;38400;RAINFOREST_RESIN;9996;1;9995;23;;;10000;6;10004;1;10005;23;9998.0;-246.0
-1;38500;RAINFOREST_RESIN;10002;1;9995;21;;;10005;21;;;;;10003.5;-246.0
-1;38500;KELP;2019;21;;;;;2022;21;;;;;2020.5;-420.1015625
-1;38600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;38600;KELP;2019;30;;;;;2022;30;;;;;2020.5;-417.4609375
-1;38700;KELP;2019;20;;;;;2022;20;;;;;2020.5;-415.2734375
-1;38700;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;38800;KELP;2019;21;;;;;2020;2;2021;1;2022;21;2019.5;-415.15625
-1;38800;RAINFOREST_RESIN;9996;1;9995;20;;;10002;1;10004;1;10005;20;9999.0;-246.0
-1;38900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;38900;KELP;2019;32;;;;;2021;7;2022;2;2023;30;2020.0;-408.0859375
-1;39000;RAINFOREST_RESIN;9995;23;;;;;10002;9;10005;23;;;9998.5;-246.0
-1;39000;KELP;2019;23;;;;;2023;23;;;;;2021.0;-398.2109375
-1;39100;KELP;2020;25;;;;;2023;25;;;;;2021.5;-375.3359375
-1;39100;RAINFOREST_RESIN;9998;8;9996;1;9995;24;10004;1;10005;24;;;10001.0;-246.0
-1;39200;KELP;2020;30;;;;;2022;2;2023;30;;;2021.0;-370.0859375
-1;39200;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;39300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;39300;KELP;2020;27;;;;;2023;27;;;;;2021.5;-362.5859375
-1;39400;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;39400;KELP;2020;31;;;;;2022;5;2023;31;;;2021.0;-379.9453125
-1;39500;KELP;2019;27;;;;;2021;3;2022;27;;;2020.0;-420.0859375
-1;39500;RAINFOREST_RESIN;9995;27;;;;;9998;1;10002;2;10005;27;9996.5;-246.0
-1;39600;KELP;2021;4;2019;23;;;2023;23;;;;;2022.0;-403.453125
-1;39600;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;39700;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;39700;KELP;2019;28;;;;;2022;2;2023;22;;;2020.5;-407.7890625
-1;39800;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;39800;KELP;2019;28;;;;;2022;1;2023;27;;;2020.5;-408.109375
-1;39900;KELP;2019;31;;;;;2022;31;;;;;2020.5;-421.75
-1;39900;RAINFOREST_RESIN;9996;1;9995;30;;;10002;4;10004;1;10005;30;9999.0;-246.0
-1;40000;KELP;2018;22;;;;;2022;22;;;;;2020.0;-438.6328125
-1;40000;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;40100;RAINFOREST_RESIN;9996;2;9995;29;;;10002;8;10004;2;10005;29;9999.0;-246.0
-1;40100;KELP;2019;31;;;;;2022;31;;;;;2020.5;-422.484375
-1;40200;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;40200;KELP;2019;1;2018;28;;;2022;29;;;;;2020.5;-439.5
-1;40300;KELP;2019;22;;;;;2022;22;;;;;2020.5;-432.578125
-1;40300;RAINFOREST_RESIN;9995;22;;;;;9998;1;10005;22;;;9996.5;-246.0
-1;40400;KELP;2018;24;;;;;2022;24;;;;;2020.0;-444.96875
-1;40400;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;40500;RAINFOREST_RESIN;10002;1;9996;2;9995;27;10004;2;10005;27;;;10003.0;-246.0
-1;40500;KELP;2019;1;2018;27;;;2022;29;;;;;2020.5;-441.34375
-1;40600;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;40600;KELP;2019;4;2018;26;;;2022;26;;;;;2020.5;-448.125
-1;40700;KELP;2018;22;;;;;2021;22;;;;;2019.5;-476.28125
-1;40700;RAINFOREST_RESIN;9998;7;9996;2;9995;20;10004;2;10005;20;;;10001.0;-246.0
-1;40800;KELP;2018;27;;;;;2021;27;;;;;2019.5;-464.6640625
-1;40800;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;40900;RAINFOREST_RESIN;9998;10;9996;2;9995;26;10004;2;10005;26;;;10001.0;-246.0
-1;40900;KELP;2017;28;;;;;2021;28;;;;;2019.0;-494.25
-1;41000;RAINFOREST_RESIN;9995;21;;;;;10002;10;10005;21;;;9998.5;-246.0
-1;41000;KELP;2018;20;;;;;2020;3;2021;21;;;2019.0;-468.1796875
-1;41100;KELP;2018;24;;;;;2021;27;;;;;2019.5;-470.5703125
-1;41100;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;41200;KELP;2018;29;;;;;2021;29;;;;;2019.5;-471.296875
-1;41200;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;41300;RAINFOREST_RESIN;9998;2;9996;1;9995;24;10004;1;10005;24;;;10001.0;-246.0
-1;41300;KELP;2017;25;;;;;2019;4;2021;25;;;2018.0;-497.734375
-1;41400;RAINFOREST_RESIN;9998;5;9996;2;9995;23;10000;4;10004;2;10005;23;9999.0;-246.0
-1;41400;KELP;2017;25;;;;;2018;4;2019;5;2020;25;2017.5;-532.6328125
-1;41500;KELP;2017;22;;;;;2019;1;2021;22;;;2018.0;-501.71875
-1;41500;RAINFOREST_RESIN;9998;8;9996;2;9995;20;10004;2;10005;20;;;10001.0;-246.0
-1;41600;KELP;2017;23;;;;;2019;7;2020;1;2021;22;2018.0;-505.25
-1;41600;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;41700;RAINFOREST_RESIN;10000;5;9995;21;;;10005;21;;;;;10002.5;-246.0
-1;41700;KELP;2019;4;2017;21;;;2021;21;;;;;2020.0;-495.9609375
-1;41800;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;41800;KELP;2018;24;;;;;2021;24;;;;;2019.5;-475.078125
-1;41900;KELP;2018;22;;;;;2020;1;2021;22;;;2019.0;-472.5546875
-1;41900;RAINFOREST_RESIN;9996;1;9995;21;;;9998;4;10004;1;10005;21;9997.0;-246.0
-1;42000;KELP;2018;31;;;;;2020;5;2021;32;;;2019.0;-463.390625
-1;42000;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;42100;RAINFOREST_RESIN;9998;8;9996;2;9995;21;10004;2;10005;21;;;10001.0;-246.0
-1;42100;KELP;2018;23;;;;;2021;2;2022;21;;;2019.5;-456.9453125
-1;42200;RAINFOREST_RESIN;10002;1;9995;28;;;10005;28;;;;;10003.5;-246.0
-1;42200;KELP;2018;28;;;;;2022;28;;;;;2020.0;-454.6640625
-1;42300;KELP;2018;20;;;;;2019;7;2020;2;2022;20;2018.5;-452.1640625
-1;42300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;42400;KELP;2019;30;;;;;2022;31;;;;;2020.5;-434.484375
-1;42400;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;42500;RAINFOREST_RESIN;9995;24;;;;;10002;3;10005;24;;;9998.5;-246.0
-1;42500;KELP;2019;24;;;;;2022;24;;;;;2020.5;-435.8671875
-1;42600;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;42600;KELP;2019;26;;;;;2022;26;;;;;2020.5;-430.921875
-1;42700;KELP;2018;26;;;;;2022;26;;;;;2020.0;-447.203125
-1;42700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;42800;KELP;2019;30;;;;;2022;30;;;;;2020.5;-435.0234375
-1;42800;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;42900;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;42900;KELP;2019;25;;;;;2022;25;;;;;2020.5;-423.5
-1;43000;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;43000;KELP;2020;2;2019;23;;;2023;23;;;;;2021.5;-399.15625
-1;43100;KELP;2020;21;;;;;2023;21;;;;;2021.5;-381.265625
-1;43100;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;43200;KELP;2019;21;;;;;2023;21;;;;;2021.0;-393.75
-1;43200;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;43300;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;43300;KELP;2019;25;;;;;2021;2;2023;25;;;2020.0;-394.03125
-1;43400;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;43400;KELP;2021;4;2020;24;;;2023;24;;;;;2022.0;-386.90625
-1;43500;KELP;2020;22;;;;;2022;7;2023;23;;;2021.0;-383.34375
-1;43500;RAINFOREST_RESIN;9998;7;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;43600;KELP;2020;5;2019;21;;;2023;23;;;;;2021.5;-389.65625
-1;43600;RAINFOREST_RESIN;9996;2;9995;21;;;10002;9;10004;2;10005;21;9999.0;-246.0
-1;43700;KELP;2020;24;;;;;2023;24;;;;;2021.5;-385.0234375
-1;43700;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;43800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;43800;KELP;2020;35;;;;;2023;28;;;;;2021.5;-377.4453125
-1;43900;KELP;2020;36;;;;;2023;30;;;;;2021.5;-386.6015625
-1;43900;RAINFOREST_RESIN;10002;4;9998;2;9996;1;10004;1;10005;29;;;10003.0;-246.0
-1;44000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;44000;KELP;2020;22;;;;;2022;3;2023;22;;;2021.0;-376.75
-1;44100;KELP;2019;24;;;;;2023;24;;;;;2021.0;-401.3046875
-1;44100;RAINFOREST_RESIN;9995;24;;;;;9998;1;10002;2;10005;24;9996.5;-246.0
-1;44200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;44200;KELP;2019;21;;;;;2023;21;;;;;2021.0;-403.703125
-1;44300;KELP;2019;27;;;;;2023;27;;;;;2021.0;-400.2578125
-1;44300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;44400;RAINFOREST_RESIN;9998;7;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;44400;KELP;2018;28;;;;;2022;28;;;;;2020.0;-441.234375
-1;44500;KELP;2021;1;2019;2;2018;21;2022;21;;;;;2021.5;-439.109375
-1;44500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;44600;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;44600;KELP;2019;24;;;;;2022;24;;;;;2020.5;-430.0859375
-1;44700;KELP;2019;29;;;;;2022;29;;;;;2020.5;-432.4140625
-1;44700;RAINFOREST_RESIN;9995;29;;;;;10002;10;10005;29;;;9998.5;-246.0
-1;44800;RAINFOREST_RESIN;9995;29;;;;;9998;1;10002;10;10005;29;9996.5;-246.0
-1;44800;KELP;2018;29;;;;;2022;29;;;;;2020.0;-442.4609375
-1;44900;KELP;2019;1;2018;26;;;2022;26;;;;;2020.5;-446.1328125
-1;44900;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;45000;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;-246.0
-1;45000;KELP;2018;26;;;;;2022;26;;;;;2020.0;-445.1484375
-1;45100;KELP;2019;27;;;;;2021;5;2022;27;;;2020.0;-434.2890625
-1;45100;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;45200;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;45200;KELP;2019;29;;;;;2021;6;2022;29;;;2020.0;-436.5390625
-1;45300;KELP;2018;26;;;;;2021;22;;;;;2019.5;-461.6328125
-1;45300;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;45400;RAINFOREST_RESIN;9996;2;9995;21;;;9998;1;10004;2;10005;21;9997.0;-246.0
-1;45400;KELP;2018;22;;;;;2020;2;2021;23;;;2019.0;-476.6875
-1;45500;KELP;2018;25;;;;;2019;3;2021;25;;;2018.5;-472.3515625
-1;45500;RAINFOREST_RESIN;9996;1;9995;24;;;10000;3;10004;1;10005;24;9998.0;-246.0
-1;45600;RAINFOREST_RESIN;9995;26;;;;;10002;5;10005;26;;;9998.5;-246.0
-1;45600;KELP;2018;33;;;;;2021;26;;;;;2019.5;-467.4375
-1;45700;KELP;2018;24;;;;;2021;24;;;;;2019.5;-466.765625
-1;45700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;45800;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;45800;KELP;2018;27;;;;;2021;28;;;;;2019.5;-463.5546875
-1;45900;KELP;2019;4;2018;31;;;2022;31;;;;;2020.5;-449.8203125
-1;45900;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;46000;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;46000;KELP;2019;2;2018;24;;;2022;26;;;;;2020.5;-437.9453125
-1;46100;KELP;2019;25;;;;;2022;25;;;;;2020.5;-433.78125
-1;46100;RAINFOREST_RESIN;9998;6;9996;2;9995;23;10004;2;10005;23;;;10001.0;-246.0
-1;46200;RAINFOREST_RESIN;9998;2;9996;1;9995;27;10004;1;10005;27;;;10001.0;-246.0
-1;46200;KELP;2018;28;;;;;2021;1;2022;27;;;2019.5;-455.0234375
-1;46300;KELP;2018;29;;;;;2021;29;;;;;2019.5;-467.1015625
-1;46300;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;46400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;46400;KELP;2018;22;;;;;2022;22;;;;;2020.0;-456.25
-1;46500;KELP;2019;6;2018;31;;;2021;31;;;;;2020.0;-459.1015625
-1;46500;RAINFOREST_RESIN;10000;6;9996;1;9995;30;10004;1;10005;30;;;10002.0;-246.0
-1;46600;KELP;2019;3;2018;28;;;2021;1;2022;27;;;2020.0;-454.6484375
-1;46600;RAINFOREST_RESIN;9998;10;9996;1;9995;27;10004;1;10005;27;;;10001.0;-246.0
-1;46700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;46700;KELP;2019;26;;;;;2022;26;;;;;2020.5;-435.6875
-1;46800;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;46800;KELP;2019;22;;;;;2022;22;;;;;2020.5;-423.2890625
-1;46900;KELP;2021;1;2019;32;;;2022;32;;;;;2021.5;-434.375
-1;46900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;47000;KELP;2019;21;;;;;2022;21;;;;;2020.5;-430.671875
-1;47000;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;47100;RAINFOREST_RESIN;9996;2;9995;24;;;9998;1;10004;2;10005;24;9997.0;-246.0
-1;47100;KELP;2019;22;;;;;2022;26;;;;;2020.5;-434.328125
-1;47200;RAINFOREST_RESIN;10002;1;9996;2;9995;28;10004;2;10005;28;;;10003.0;-246.0
-1;47200;KELP;2019;30;;;;;2022;30;;;;;2020.5;-432.9453125
-1;47300;KELP;2019;25;;;;;2021;1;2022;25;;;2020.0;-428.953125
-1;47300;RAINFOREST_RESIN;10002;1;9998;3;9995;25;10005;25;;;;;10003.5;-246.0
-1;47400;KELP;2019;25;;;;;2022;24;;;;;2020.5;-419.1953125
-1;47400;RAINFOREST_RESIN;9995;24;;;;;10002;9;10005;24;;;9998.5;-246.0
-1;47500;RAINFOREST_RESIN;9995;30;;;;;10002;1;10005;30;;;9998.5;-246.0
-1;47500;KELP;2019;30;;;;;2021;6;2022;30;;;2020.0;-420.3125
-1;47600;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;47600;KELP;2019;28;;;;;2022;28;;;;;2020.5;-411.6640625
-1;47700;KELP;2019;23;;;;;2022;23;;;;;2020.5;-409.671875
-1;47700;RAINFOREST_RESIN;9996;1;9995;22;;;10002;8;10004;1;10005;22;9999.0;-246.0
-1;47800;KELP;2019;23;;;;;2022;1;2023;22;;;2020.5;-407.09375
-1;47800;RAINFOREST_RESIN;9996;1;9995;22;;;10002;8;10004;1;10005;22;9999.0;-246.0
-1;47900;RAINFOREST_RESIN;10002;1;9995;27;;;10005;27;;;;;10003.5;-246.0
-1;47900;KELP;2019;27;;;;;2023;27;;;;;2021.0;-406.234375
-1;48000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;48000;KELP;2019;27;;;;;2023;27;;;;;2021.0;-407.1796875
-1;48100;KELP;2019;22;;;;;2022;21;;;;;2020.5;-416.1953125
-1;48100;RAINFOREST_RESIN;9995;21;;;;;10002;9;10005;21;;;9998.5;-246.0
-1;48200;KELP;2019;25;;;;;2022;25;;;;;2020.5;-418.9609375
-1;48200;RAINFOREST_RESIN;9998;5;9995;25;;;10005;25;;;;;10001.5;-246.0
-1;48300;RAINFOREST_RESIN;9996;1;9995;28;;;9998;1;10000;5;10004;1;9997.0;-246.0
-1;48300;KELP;2018;29;;;;;2019;5;2022;29;;;2018.5;-452.390625
-1;48400;RAINFOREST_RESIN;9995;27;;;;;10002;7;10005;27;;;9998.5;-246.0
-1;48400;KELP;2019;1;2018;27;;;2022;27;;;;;2020.5;-445.6796875
-1;48500;KELP;2019;1;2018;29;;;2022;29;;;;;2020.5;-448.296875
-1;48500;RAINFOREST_RESIN;9995;29;;;;;9998;1;10005;29;;;9996.5;-246.0
-1;48600;KELP;2019;1;2018;29;;;2022;29;;;;;2020.5;-447.40625
-1;48600;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;48700;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;48700;KELP;2018;23;;;;;2022;23;;;;;2020.0;-450.609375
-1;48800;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;48800;KELP;2019;29;;;;;2022;24;;;;;2020.5;-435.8828125
-1;48900;KELP;2019;34;;;;;2022;27;;;;;2020.5;-430.203125
-1;48900;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;49000;KELP;2019;39;;;;;2022;32;;;;;2020.5;-434.734375
-1;49000;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;49100;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;49100;KELP;2019;40;;;;;2022;32;;;;;2020.5;-420.84375
-1;49200;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;49200;KELP;2019;21;;;;;2022;21;;;;;2020.5;-431.984375
-1;49300;KELP;2019;21;;;;;2022;22;;;;;2020.5;-425.78125
-1;49300;RAINFOREST_RESIN;9998;9;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;49400;KELP;2021;9;2020;5;2019;20;2022;20;;;;;2021.5;-432.578125
-1;49400;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;49500;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;49500;KELP;2019;40;;;;;2022;32;;;;;2020.5;-423.3984375
-1;49600;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;49600;KELP;2021;1;2019;24;;;2022;24;;;;;2021.5;-415.15625
-1;49700;KELP;2019;28;;;;;2022;28;;;;;2020.5;-417.609375
-1;49700;RAINFOREST_RESIN;9998;7;9996;2;9995;26;10004;2;10005;26;;;10001.0;-246.0
-1;49800;KELP;2019;25;;;;;2020;5;2023;25;;;2019.5;-394.5625
-1;49800;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;49900;RAINFOREST_RESIN;9998;3;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;49900;KELP;2019;23;;;;;2023;23;;;;;2021.0;-400.1171875
-1;50000;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;50000;KELP;2019;21;;;;;2022;1;2023;20;;;2020.5;-405.453125
-1;50100;KELP;2019;24;;;;;2021;2;2022;24;;;2020.0;-411.8984375
-1;50100;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;50200;KELP;2019;24;;;;;2023;24;;;;;2021.0;-396.75
-1;50200;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;50300;RAINFOREST_RESIN;9995;30;;;;;10002;10;10005;30;;;9998.5;-246.0
-1;50300;KELP;2019;30;;;;;2023;30;;;;;2021.0;-392.1015625
-1;50400;RAINFOREST_RESIN;9998;4;9996;1;9995;22;10000;2;10004;1;10005;22;9999.0;-246.0
-1;50400;KELP;2019;23;;;;;2021;3;2023;23;;;2020.0;-393.046875
-1;50500;KELP;2019;25;;;;;2023;25;;;;;2021.0;-394.7578125
-1;50500;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;50600;KELP;2019;21;;;;;2020;6;2023;23;;;2019.5;-390.8828125
-1;50600;RAINFOREST_RESIN;10002;1;9996;2;9995;21;10004;2;10005;21;;;10003.0;-246.0
-1;50700;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;50700;KELP;2020;24;;;;;2023;24;;;;;2021.5;-387.21875
-1;50800;RAINFOREST_RESIN;10002;5;9996;2;9995;22;10004;2;10005;22;;;10003.0;-246.0
-1;50800;KELP;2022;1;2020;24;;;2023;24;;;;;2022.5;-380.21875
-1;50900;KELP;2020;28;;;;;2022;4;2023;28;;;2021.0;-377.0625
-1;50900;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;51000;KELP;2020;28;;;;;2023;28;;;;;2021.5;-381.5390625
-1;51000;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;51100;RAINFOREST_RESIN;9998;6;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;51100;KELP;2020;26;;;;;2023;26;;;;;2021.5;-371.9609375
-1;51200;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;51200;KELP;2020;30;;;;;2023;30;;;;;2021.5;-378.109375
-1;51300;KELP;2020;25;;;;;2023;25;;;;;2021.5;-360.65625
-1;51300;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;51400;KELP;2020;30;;;;;2023;30;;;;;2021.5;-370.734375
-1;51400;RAINFOREST_RESIN;9995;30;;;;;10002;3;10005;30;;;9998.5;-246.0
-1;51500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;51500;KELP;2022;1;2020;30;;;2023;30;;;;;2022.5;-371.890625
-1;51600;RAINFOREST_RESIN;10000;5;9996;2;9995;22;10002;1;10004;2;10005;22;10001.0;-246.0
-1;51600;KELP;2021;5;2020;24;;;2023;24;;;;;2022.0;-369.4296875
-1;51700;KELP;2020;16;;;;;2023;20;;;;;2021.5;-377.0625
-1;51700;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;51800;KELP;2020;1;2019;24;;;2023;25;;;;;2021.5;-387.75
-1;51800;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;51900;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;51900;KELP;2021;4;2019;24;;;2023;24;;;;;2022.0;-397.3984375
-1;52000;RAINFOREST_RESIN;9998;3;9995;29;;;10005;29;;;;;10001.5;-246.0
-1;52000;KELP;2019;29;;;;;2021;6;2023;29;;;2020.0;-391.859375
-1;52100;KELP;2019;21;;;;;2023;21;;;;;2021.0;-390.84375
-1;52100;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;52200;KELP;2019;31;;;;;2023;31;;;;;2021.0;-399.421875
-1;52200;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;52300;RAINFOREST_RESIN;10002;1;9996;1;9995;27;10004;1;10005;27;;;10003.0;-246.0
-1;52300;KELP;2022;1;2019;28;;;2023;28;;;;;2022.5;-394.4609375
-1;52400;RAINFOREST_RESIN;9998;3;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;52400;KELP;2020;30;;;;;2023;30;;;;;2021.5;-372.5703125
-1;52500;KELP;2022;1;2020;28;;;2023;28;;;;;2022.5;-375.3125
-1;52500;RAINFOREST_RESIN;9996;1;9995;27;;;9998;1;10004;1;10005;27;9997.0;-246.0
-1;52600;RAINFOREST_RESIN;9998;1;9996;1;9995;22;10000;4;10004;1;10005;22;9999.0;-246.0
-1;52600;KELP;2020;1;2019;22;;;2021;4;2023;23;;;2020.5;-392.34375
-1;52700;KELP;2019;26;;;;;2023;27;;;;;2021.0;-400.03125
-1;52700;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;52800;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;52800;KELP;2019;26;;;;;2023;26;;;;;2021.0;-387.7578125
-1;52900;KELP;2020;30;;;;;2023;30;;;;;2021.5;-386.125
-1;52900;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;53000;RAINFOREST_RESIN;10002;1;9996;1;9995;20;10004;1;10005;20;;;10003.0;-246.0
-1;53000;KELP;2020;21;;;;;2023;21;;;;;2021.5;-378.109375
-1;53100;KELP;2019;24;;;;;2023;24;;;;;2021.0;-395.6328125
-1;53100;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;53200;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;53200;KELP;2022;1;2019;31;;;2023;31;;;;;2022.5;-393.4140625
-1;53300;KELP;2020;29;;;;;2023;29;;;;;2021.5;-385.6875
-1;53300;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;53400;RAINFOREST_RESIN;9998;6;9996;2;9995;23;10004;2;10005;23;;;10001.0;-246.0
-1;53400;KELP;2020;25;;;;;2023;25;;;;;2021.5;-374.546875
-1;53500;KELP;2020;23;;;;;2023;23;;;;;2021.5;-380.40625
-1;53500;RAINFOREST_RESIN;9996;2;9995;21;;;10002;1;10004;2;10005;21;9999.0;-246.0
-1;53600;RAINFOREST_RESIN;9995;24;;;;;9998;9;10005;24;;;9996.5;-246.0
-1;53600;KELP;2020;24;;;;;2023;24;;;;;2021.5;-386.3515625
-1;53700;KELP;2019;30;;;;;2023;30;;;;;2021.0;-392.171875
-1;53700;RAINFOREST_RESIN;9998;1;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;53800;RAINFOREST_RESIN;10002;3;9995;30;;;10005;30;;;;;10003.5;-246.0
-1;53800;KELP;2019;30;;;;;2023;30;;;;;2021.0;-393.2109375
-1;53900;KELP;2019;27;;;;;2023;27;;;;;2021.0;-396.2265625
-1;53900;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;54000;RAINFOREST_RESIN;9998;6;9996;1;9995;30;10004;1;10005;30;;;10001.0;-246.0
-1;54000;KELP;2020;31;;;;;2022;1;2023;31;;;2021.0;-378.3671875
-1;54100;KELP;2020;24;;;;;2022;2;2023;24;;;2021.0;-380.3515625
-1;54100;RAINFOREST_RESIN;9998;2;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;54200;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;54200;KELP;2020;28;;;;;2023;28;;;;;2021.5;-381.75
-1;54300;KELP;2022;1;2019;25;;;2023;25;;;;;2022.5;-398.40625
-1;54300;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;54400;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;54400;KELP;2019;29;;;;;2022;29;;;;;2020.5;-409.9921875
-1;54500;KELP;2019;21;;;;;2022;21;;;;;2020.5;-414.8046875
-1;54500;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;54600;RAINFOREST_RESIN;10002;3;9995;27;;;10005;27;;;;;10003.5;-246.0
-1;54600;KELP;2019;27;;;;;2023;27;;;;;2021.0;-408.3046875
-1;54700;KELP;2019;29;;;;;2020;4;2022;29;;;2019.5;-410.203125
-1;54700;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;54800;RAINFOREST_RESIN;9998;8;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;54800;KELP;2019;27;;;;;2021;1;2022;27;;;2020.0;-411.8984375
-1;54900;KELP;2019;29;;;;;2022;29;;;;;2020.5;-414.5
-1;54900;RAINFOREST_RESIN;9996;1;9995;28;;;10002;3;10004;1;10005;28;9999.0;-246.0
-1;55000;RAINFOREST_RESIN;9996;2;9995;28;;;10002;8;10004;2;10005;28;9999.0;-246.0
-1;55000;KELP;2019;36;;;;;2022;30;;;;;2020.5;-425.6640625
-1;55100;KELP;2019;37;;;;;2022;29;;;;;2020.5;-433.3125
-1;55100;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;55200;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;55200;KELP;2018;21;;;;;2019;3;2020;8;2022;23;2018.5;-439.9765625
-1;55300;RAINFOREST_RESIN;9996;2;9995;27;;;9998;1;10002;2;10004;2;9997.0;-246.0
-1;55300;KELP;2018;29;;;;;2022;29;;;;;2020.0;-444.5625
-1;55400;RAINFOREST_RESIN;9998;3;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;55400;KELP;2019;2;2018;22;;;2022;22;;;;;2020.5;-443.0390625
-1;55500;KELP;2021;1;2019;4;2018;25;2022;25;;;;;2021.5;-439.3125
-1;55500;RAINFOREST_RESIN;9995;25;;;;;10002;9;10005;25;;;9998.5;-246.0
-1;55600;KELP;2019;3;2018;26;;;2022;26;;;;;2020.5;-441.7890625
-1;55600;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;55700;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;55700;KELP;2019;25;;;;;2022;23;;;;;2020.5;-437.2890625
-1;55800;RAINFOREST_RESIN;9998;6;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;55800;KELP;2018;27;;;;;2022;27;;;;;2020.0;-442.8671875
-1;55900;KELP;2018;22;;;;;2022;22;;;;;2020.0;-452.2109375
-1;55900;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;56000;KELP;2018;24;;;;;2019;3;2021;2;2022;22;2018.5;-456.703125
-1;56000;RAINFOREST_RESIN;9996;2;9995;22;;;10002;10;10004;2;10005;22;9999.0;-246.0
-1;56100;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;56100;KELP;2019;22;;;;;2022;22;;;;;2020.5;-431.4765625
-1;56200;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;56200;KELP;2020;2;2018;30;;;2022;30;;;;;2021.0;-442.90625
-1;56300;KELP;2019;6;2018;27;;;2022;27;;;;;2020.5;-444.21875
-1;56300;RAINFOREST_RESIN;10002;1;9996;2;9995;25;10004;2;10005;25;;;10003.0;-246.0
-1;56400;KELP;2018;31;;;;;2022;31;;;;;2020.0;-446.28125
-1;56400;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;56500;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;56500;KELP;2018;29;;;;;2022;29;;;;;2020.0;-447.734375
-1;56600;RAINFOREST_RESIN;9996;2;9995;29;;;10002;4;10004;2;10005;29;9999.0;-246.0
-1;56600;KELP;2019;2;2018;29;;;2022;31;;;;;2020.5;-440.2421875
-1;56700;KELP;2020;6;2018;26;;;2022;26;;;;;2021.0;-450.2734375
-1;56700;RAINFOREST_RESIN;9998;3;9996;2;9995;24;10000;2;10004;2;10005;24;9999.0;-246.0
-1;56800;KELP;2018;24;;;;;2021;2;2022;22;;;2019.5;-455.5078125
-1;56800;RAINFOREST_RESIN;10002;1;9998;10;9996;2;10004;2;10005;22;;;10003.0;-246.0
-1;56900;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;56900;KELP;2018;24;;;;;2021;22;;;;;2019.5;-467.4375
-1;57000;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;57000;KELP;2018;28;;;;;2020;8;2021;28;;;2019.0;-484.0546875
-1;57100;KELP;2017;27;;;;;2020;27;;;;;2018.5;-510.546875
-1;57100;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;57200;KELP;2019;1;2017;27;;;2020;27;;;;;2019.5;-518.3671875
-1;57200;RAINFOREST_RESIN;10002;2;9996;1;9995;26;10004;1;10005;26;;;10003.0;-246.0
-1;57300;RAINFOREST_RESIN;9996;1;9995;26;;;10002;9;10004;1;10005;26;9999.0;-246.0
-1;57300;KELP;2017;27;;;;;2020;27;;;;;2018.5;-513.265625
-1;57400;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;57400;KELP;2017;24;;;;;2019;2;2020;24;;;2018.0;-517.9609375
-1;57500;KELP;2019;5;2017;30;;;2020;25;;;;;2019.5;-517.1484375
-1;57500;RAINFOREST_RESIN;9998;5;9996;2;9995;23;10004;2;10005;23;;;10001.0;-246.0
-1;57600;KELP;2017;24;;;;;2020;24;;;;;2018.5;-513.34375
-1;57600;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;57700;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;57700;KELP;2017;29;;;;;2020;29;;;;;2018.5;-514.140625
-1;57800;RAINFOREST_RESIN;9998;1;9996;2;9995;29;10004;2;10005;29;;;10001.0;-246.0
-1;57800;KELP;2017;31;;;;;2020;2;2021;29;;;2018.5;-503.8359375
-1;57900;KELP;2017;27;;;;;2018;6;2019;5;2020;2;2017.5;-507.4140625
-1;57900;RAINFOREST_RESIN;9996;2;9995;25;;;9998;1;10000;6;10004;2;9997.0;-246.0
-1;58000;KELP;2017;29;;;;;2020;1;2021;24;;;2018.5;-508.109375
-1;58000;RAINFOREST_RESIN;9996;1;9995;24;;;9998;4;10004;1;10005;24;9997.0;-246.0
-1;58100;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;58100;KELP;2017;23;;;;;2020;23;;;;;2018.5;-523.484375
-1;58200;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;58200;KELP;2017;31;;;;;2020;31;;;;;2018.5;-520.359375
-1;58300;KELP;2017;29;;;;;2020;29;;;;;2018.5;-522.78125
-1;58300;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;58400;KELP;2016;23;;;;;2018;1;2019;23;;;2017.0;-577.5625
-1;58400;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;58500;RAINFOREST_RESIN;9995;21;;;;;10002;1;10005;21;;;9998.5;-246.0
-1;58500;KELP;2016;21;;;;;2019;21;;;;;2017.5;-586.2109375
-1;58600;RAINFOREST_RESIN;10002;1;9995;25;;;10005;25;;;;;10003.5;-246.0
-1;58600;KELP;2015;25;;;;;2017;7;2019;25;;;2016.0;-599.0390625
-1;58700;KELP;2015;34;;;;;2018;32;;;;;2016.5;-612.46875
-1;58700;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;58800;KELP;2015;29;;;;;2019;29;;;;;2017.0;-600.5390625
-1;58800;RAINFOREST_RESIN;9995;29;;;;;10002;1;10005;29;;;9998.5;-246.0
-1;58900;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;58900;KELP;2015;25;;;;;2019;25;;;;;2017.0;-593.2734375
-1;59000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;59000;KELP;2016;22;;;;;2019;22;;;;;2017.5;-579.15625
-1;59100;KELP;2016;34;;;;;2019;27;;;;;2017.5;-567.59375
-1;59100;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;59200;KELP;2016;31;;;;;2020;31;;;;;2018.0;-544.390625
-1;59200;RAINFOREST_RESIN;9998;4;9996;2;9995;29;10004;2;10005;29;;;10001.0;-246.0
-1;59300;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;59300;KELP;2016;26;;;;;2018;2;2019;27;;;2017.0;-565.90625
-1;59400;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;59400;KELP;2015;22;;;;;2019;22;;;;;2017.0;-593.8046875
-1;59500;KELP;2015;23;;;;;2019;23;;;;;2017.0;-589.1640625
-1;59500;RAINFOREST_RESIN;10002;5;9995;23;;;10005;23;;;;;10003.5;-246.0
-1;59600;KELP;2016;29;;;;;2019;29;;;;;2017.5;-583.3359375
-1;59600;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;59700;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;59700;KELP;2015;21;;;;;2018;21;;;;;2016.5;-625.1796875
-1;59800;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;59800;KELP;2015;25;;;;;2018;25;;;;;2016.5;-619.3984375
-1;59900;KELP;2015;24;;;;;2018;24;;;;;2016.5;-625.5703125
-1;59900;RAINFOREST_RESIN;9996;1;9995;23;;;10002;6;10004;1;10005;23;9999.0;-246.0
-1;60000;KELP;2015;22;;;;;2018;22;;;;;2016.5;-620.5078125
-1;60000;RAINFOREST_RESIN;9998;3;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;60100;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;60100;KELP;2015;27;;;;;2018;27;;;;;2016.5;-624.46875
-1;60200;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;60200;KELP;2016;3;2015;25;;;2018;25;;;;;2017.0;-635.8984375
-1;60300;KELP;2015;28;;;;;2018;28;;;;;2016.5;-637.3359375
-1;60300;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;60400;KELP;2015;1;2014;20;;;2018;21;;;;;2016.5;-642.0078125
-1;60400;RAINFOREST_RESIN;9996;1;9995;20;;;9998;1;10004;1;10005;20;9997.0;-246.0
-1;60500;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;60500;KELP;2015;24;;;;;2018;24;;;;;2016.5;-615.7890625
-1;60600;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;60600;KELP;2015;26;;;;;2018;24;;;;;2016.5;-617.21875
-1;60700;KELP;2015;22;;;;;2017;5;2018;22;;;2016.0;-617.609375
-1;60700;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;60800;KELP;2015;31;;;;;2018;32;;;;;2016.5;-616.9296875
-1;60800;RAINFOREST_RESIN;10002;10;9996;2;9995;30;10004;2;10005;30;;;10003.0;-246.0
-1;60900;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;60900;KELP;2015;28;;;;;2017;4;2018;31;;;2016.0;-628.734375
-1;61000;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;61000;KELP;2015;28;;;;;2018;28;;;;;2016.5;-622.2109375
-1;61100;KELP;2015;29;;;;;2017;3;2018;29;;;2016.0;-636.6953125
-1;61100;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;61200;KELP;2015;22;;;;;2016;2;2018;22;;;2015.5;-624.3984375
-1;61200;RAINFOREST_RESIN;9998;9;9996;1;9995;21;10000;2;10004;1;10005;21;9999.0;-246.0
-1;61300;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;61300;KELP;2015;23;;;;;2018;23;;;;;2016.5;-611.125
-1;61400;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;61400;KELP;2015;31;;;;;2018;1;2019;30;;;2016.5;-606.171875
-1;61500;KELP;2015;29;;;;;2018;29;;;;;2016.5;-625.5546875
-1;61500;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;61600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;61600;KELP;2015;30;;;;;2017;5;2018;30;;;2016.0;-636.1796875
-1;61700;KELP;2014;26;;;;;2016;7;2017;27;;;2015.0;-671.6640625
-1;61700;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;61800;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;61800;KELP;2015;20;;;;;2018;20;;;;;2016.5;-634.0625
-1;61900;KELP;2014;26;;;;;2017;26;;;;;2015.5;-667.640625
-1;61900;RAINFOREST_RESIN;9995;26;;;;;9998;1;10005;26;;;9996.5;-246.0
-1;62000;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;62000;KELP;2016;1;2014;20;;;2017;20;;;;;2016.5;-664.8359375
-1;62100;KELP;2014;25;;;;;2017;25;;;;;2015.5;-661.7265625
-1;62100;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;62200;RAINFOREST_RESIN;9995;25;;;;;10002;3;10005;25;;;9998.5;-246.0
-1;62200;KELP;2014;25;;;;;2017;25;;;;;2015.5;-668.5
-1;62300;KELP;2014;22;;;;;2017;22;;;;;2015.5;-663.328125
-1;62300;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;62400;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;62400;KELP;2014;25;;;;;2016;8;2018;25;;;2015.0;-642.8515625
-1;62500;KELP;2015;3;2014;23;;;2018;24;;;;;2016.5;-641.515625
-1;62500;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;62600;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;62600;KELP;2015;29;;;;;2018;29;;;;;2016.5;-618.78125
-1;62700;KELP;2015;26;;;;;2018;26;;;;;2016.5;-620.7734375
-1;62700;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;62800;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;62800;KELP;2015;25;;;;;2017;1;2019;26;;;2016.0;-602.546875
-1;62900;KELP;2016;29;;;;;2018;1;2019;29;;;2017.0;-576.0
-1;62900;RAINFOREST_RESIN;9996;2;9995;27;;;9998;4;10004;2;10005;27;9997.0;-246.0
-1;63000;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;63000;KELP;2016;29;;;;;2018;4;2019;29;;;2017.0;-573.2578125
-1;63100;KELP;2016;25;;;;;2020;26;;;;;2018.0;-550.4140625
-1;63100;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;63200;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;63200;KELP;2016;28;;;;;2020;28;;;;;2018.0;-548.6484375
-1;63300;KELP;2016;32;;;;;2019;2;2020;30;;;2017.5;-554.765625
-1;63300;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;63400;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;63400;KELP;2018;3;2016;26;;;2020;26;;;;;2019.0;-551.7265625
-1;63500;KELP;2016;22;;;;;2019;20;;;;;2017.5;-559.3515625
-1;63500;RAINFOREST_RESIN;9998;8;9995;20;;;10005;20;;;;;10001.5;-246.0
-1;63600;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;63600;KELP;2018;1;2016;21;;;2019;21;;;;;2018.5;-563.890625
-1;63700;KELP;2017;8;2016;30;;;2019;2;2020;28;;;2018.0;-554.8203125
-1;63700;RAINFOREST_RESIN;9996;2;9995;28;;;10002;6;10004;2;10005;28;9999.0;-246.0
-1;63800;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;63800;KELP;2016;21;;;;;2018;7;2020;22;;;2017.0;-549.546875
-1;63900;KELP;2016;21;;;;;2018;6;2020;21;;;2017.0;-557.125
-1;63900;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;64000;RAINFOREST_RESIN;9998;6;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;64000;KELP;2016;30;;;;;2019;30;;;;;2017.5;-561.984375
-1;64100;KELP;2016;27;;;;;2019;27;;;;;2017.5;-561.9609375
-1;64100;RAINFOREST_RESIN;9995;27;;;;;10002;6;10005;27;;;9998.5;-246.0
-1;64200;KELP;2015;25;;;;;2018;25;;;;;2016.5;-612.5
-1;64200;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;64300;RAINFOREST_RESIN;9998;7;9996;1;9995;22;10004;1;10005;22;;;10001.0;-246.0
-1;64300;KELP;2015;23;;;;;2018;23;;;;;2016.5;-625.1875
-1;64400;RAINFOREST_RESIN;9998;8;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;64400;KELP;2015;31;;;;;2018;29;;;;;2016.5;-621.953125
-1;64500;KELP;2015;29;;;;;2017;6;2018;29;;;2016.0;-617.234375
-1;64500;RAINFOREST_RESIN;9998;5;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;64600;KELP;2015;26;;;;;2018;26;;;;;2016.5;-622.375
-1;64600;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;64700;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;64700;KELP;2015;28;;;;;2018;28;;;;;2016.5;-637.2421875
-1;64800;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;64800;KELP;2015;2;2014;30;;;2018;32;;;;;2016.5;-638.328125
-1;64900;KELP;2015;31;;;;;2017;3;2018;31;;;2016.0;-637.25
-1;64900;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;65000;KELP;2015;25;;;;;2018;25;;;;;2016.5;-621.0078125
-1;65000;RAINFOREST_RESIN;9995;25;;;;;9998;1;10005;25;;;9996.5;-246.0
-1;65100;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;65100;KELP;2015;25;;;;;2018;25;;;;;2016.5;-626.4921875
-1;65200;RAINFOREST_RESIN;9998;8;9995;29;;;10005;29;;;;;10001.5;-246.0
-1;65200;KELP;2017;1;2015;29;;;2019;29;;;;;2018.0;-600.0234375
-1;65300;KELP;2015;21;;;;;2017;2;2018;21;;;2016.0;-617.234375
-1;65300;RAINFOREST_RESIN;9995;21;;;;;10002;3;10005;21;;;9998.5;-246.0
-1;65400;KELP;2015;28;;;;;2016;3;2018;28;;;2015.5;-612.203125
-1;65400;RAINFOREST_RESIN;9996;2;9995;26;;;10000;3;10004;2;10005;26;9998.0;-246.0
-1;65500;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;65500;KELP;2015;36;;;;;2018;29;;;;;2016.5;-622.515625
-1;65600;RAINFOREST_RESIN;9998;5;9995;20;;;10005;20;;;;;10001.5;-246.0
-1;65600;KELP;2015;20;;;;;2019;20;;;;;2017.0;-606.4453125
-1;65700;KELP;2014;29;;;;;2018;29;;;;;2016.0;-640.203125
-1;65700;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;65800;KELP;2015;20;;;;;2017;7;2018;20;;;2016.0;-635.546875
-1;65800;RAINFOREST_RESIN;9998;9;9995;20;;;10005;20;;;;;10001.5;-246.0
-1;65900;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;65900;KELP;2015;29;;;;;2018;24;;;;;2016.5;-625.71875
-1;66000;RAINFOREST_RESIN;9998;4;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;66000;KELP;2015;24;;;;;2018;24;;;;;2016.5;-624.65625
-1;66100;KELP;2015;27;;;;;2018;27;;;;;2016.5;-619.109375
-1;66100;RAINFOREST_RESIN;9996;1;9995;26;;;9998;1;10004;1;10005;26;9997.0;-246.0
-1;66200;KELP;2016;5;2015;20;;;2019;20;;;;;2017.5;-598.6640625
-1;66200;RAINFOREST_RESIN;10002;1;10000;5;9995;20;10005;20;;;;;10003.5;-246.0
-1;66300;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;66300;KELP;2018;1;2016;2;2015;25;2019;25;;;;;2018.5;-594.109375
-1;66400;RAINFOREST_RESIN;9995;21;;;;;9998;3;10005;21;;;9996.5;-246.0
-1;66400;KELP;2015;21;;;;;2019;21;;;;;2017.0;-589.625
-1;66500;KELP;2015;22;;;;;2019;22;;;;;2017.0;-592.671875
-1;66500;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;66600;KELP;2015;22;;;;;2017;3;2019;22;;;2016.0;-604.28125
-1;66600;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;66700;RAINFOREST_RESIN;9998;9;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;66700;KELP;2014;27;;;;;2018;27;;;;;2016.0;-648.6640625
-1;66800;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;66800;KELP;2014;30;;;;;2018;30;;;;;2016.0;-643.734375
-1;66900;KELP;2017;1;2015;4;2014;23;2018;23;;;;;2017.5;-641.2109375
-1;66900;RAINFOREST_RESIN;9998;4;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;67000;KELP;2015;25;;;;;2018;25;;;;;2016.5;-632.546875
-1;67000;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;67100;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;67100;KELP;2015;23;;;;;2018;23;;;;;2016.5;-636.125
-1;67200;RAINFOREST_RESIN;9996;2;9995;20;;;10002;3;10004;2;10005;20;9999.0;-246.0
-1;67200;KELP;2015;21;;;;;2018;22;;;;;2016.5;-626.296875
-1;67300;KELP;2015;31;;;;;2018;30;;;;;2016.5;-623.6875
-1;67300;RAINFOREST_RESIN;9995;30;;;;;9998;3;10005;30;;;9996.5;-246.0
-1;67400;KELP;2015;26;;;;;2018;26;;;;;2016.5;-609.0
-1;67400;RAINFOREST_RESIN;9998;4;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;67500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;67500;KELP;2015;20;;;;;2018;21;;;;;2016.5;-613.0234375
-1;67600;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;67600;KELP;2015;27;;;;;2018;27;;;;;2016.5;-615.6171875
-1;67700;KELP;2015;33;;;;;2018;30;;;;;2016.5;-611.578125
-1;67700;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;67800;KELP;2015;38;;;;;2018;30;;;;;2016.5;-629.0703125
-1;67800;RAINFOREST_RESIN;9998;3;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;67900;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;67900;KELP;2015;25;;;;;2018;25;;;;;2016.5;-613.4140625
-1;68000;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;68000;KELP;2015;23;;;;;2018;23;;;;;2016.5;-611.375
-1;68100;KELP;2015;31;;;;;2017;4;2018;31;;;2016.0;-635.8203125
-1;68100;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;68200;KELP;2017;1;2015;31;;;2018;31;;;;;2017.5;-624.2109375
-1;68200;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;68300;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;68300;KELP;2017;1;2015;29;;;2018;29;;;;;2017.5;-629.9765625
-1;68400;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;68400;KELP;2015;28;;;;;2018;28;;;;;2016.5;-622.375
-1;68500;KELP;2015;23;;;;;2018;23;;;;;2016.5;-618.1015625
-1;68500;RAINFOREST_RESIN;9995;23;;;;;10002;5;10005;23;;;9998.5;-246.0
-1;68600;KELP;2015;24;;;;;2018;25;;;;;2016.5;-619.890625
-1;68600;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;68700;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;68700;KELP;2015;28;;;;;2018;28;;;;;2016.5;-611.4296875
-1;68800;RAINFOREST_RESIN;9995;22;;;;;9998;1;10005;22;;;9996.5;-246.0
-1;68800;KELP;2015;22;;;;;2018;22;;;;;2016.5;-617.59375
-1;68900;KELP;2017;1;2015;28;;;2018;28;;;;;2017.5;-637.4453125
-1;68900;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;69000;KELP;2015;30;;;;;2018;30;;;;;2016.5;-615.4609375
-1;69000;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;69100;RAINFOREST_RESIN;9998;9;9996;1;9995;30;10004;1;10005;30;;;10001.0;-246.0
-1;69100;KELP;2015;30;;;;;2018;31;;;;;2016.5;-625.140625
-1;69200;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;69200;KELP;2017;3;2015;30;;;2018;30;;;;;2017.5;-627.109375
-1;69300;KELP;2017;1;2015;21;;;2018;21;;;;;2017.5;-629.703125
-1;69300;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;-246.0
-1;69400;KELP;2015;26;;;;;2018;26;;;;;2016.5;-627.6875
-1;69400;RAINFOREST_RESIN;10002;1;9998;2;9996;1;10004;1;10005;25;;;10003.0;-246.0
-1;69500;RAINFOREST_RESIN;9998;1;9996;2;9995;24;10004;2;10005;24;;;10001.0;-246.0
-1;69500;KELP;2015;32;;;;;2018;26;;;;;2016.5;-625.71875
-1;69600;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;69600;KELP;2015;22;;;;;2018;23;;;;;2016.5;-626.234375
-1;69700;KELP;2015;21;;;;;2018;21;;;;;2016.5;-626.1875
-1;69700;RAINFOREST_RESIN;10002;1;9996;1;9995;20;10004;1;10005;20;;;10003.0;-246.0
-1;69800;KELP;2015;24;;;;;2018;24;;;;;2016.5;-613.1953125
-1;69800;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;69900;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;69900;KELP;2015;29;;;;;2018;29;;;;;2016.5;-614.8046875
-1;70000;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;70000;KELP;2015;29;;;;;2018;29;;;;;2016.5;-621.5078125
-1;70100;KELP;2015;23;;;;;2018;2;2019;22;;;2016.5;-605.140625
-1;70100;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;70200;KELP;2015;22;;;;;2018;22;;;;;2016.5;-615.15625
-1;70200;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;70300;RAINFOREST_RESIN;9996;1;9995;25;;;9998;2;10004;1;10005;25;9997.0;-246.0
-1;70300;KELP;2015;26;;;;;2018;26;;;;;2016.5;-628.59375
-1;70400;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;70400;KELP;2015;26;;;;;2017;6;2018;26;;;2016.0;-636.5625
-1;70500;KELP;2015;23;;;;;2016;3;2017;3;2018;23;2015.5;-626.3359375
-1;70500;RAINFOREST_RESIN;9995;23;;;;;10000;3;10005;23;;;9997.5;-246.0
-1;70600;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;70600;KELP;2015;34;;;;;2018;28;;;;;2016.5;-609.8515625
-1;70700;KELP;2015;26;;;;;2018;26;;;;;2016.5;-629.78125
-1;70700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;70800;RAINFOREST_RESIN;10002;1;9995;27;;;10005;27;;;;;10003.5;-246.0
-1;70800;KELP;2015;26;;;;;2018;27;;;;;2016.5;-622.8203125
-1;70900;KELP;2015;32;;;;;2018;32;;;;;2016.5;-621.7578125
-1;70900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;71000;RAINFOREST_RESIN;9996;1;9995;29;;;10002;5;10004;1;10005;29;9999.0;-246.0
-1;71000;KELP;2015;30;;;;;2018;30;;;;;2016.5;-623.8203125
-1;71100;KELP;2015;22;;;;;2018;22;;;;;2016.5;-622.34375
-1;71100;RAINFOREST_RESIN;9998;9;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;71200;RAINFOREST_RESIN;10002;1;9996;1;9995;28;10004;1;10005;28;;;10003.0;-246.0
-1;71200;KELP;2015;28;;;;;2018;29;;;;;2016.5;-623.9609375
-1;71300;KELP;2015;28;;;;;2017;4;2018;28;;;2016.0;-632.3046875
-1;71300;RAINFOREST_RESIN;9996;2;9995;26;;;10002;4;10004;2;10005;26;9999.0;-246.0
-1;71400;RAINFOREST_RESIN;9996;2;9995;24;;;10002;3;10004;2;10005;24;9999.0;-246.0
-1;71400;KELP;2015;26;;;;;2018;26;;;;;2016.5;-634.9453125
-1;71500;KELP;2015;25;;;;;2018;28;;;;;2016.5;-618.6328125
-1;71500;RAINFOREST_RESIN;10002;1;9996;2;9995;26;10004;2;10005;26;;;10003.0;-246.0
-1;71600;RAINFOREST_RESIN;9996;1;9995;27;;;9998;3;10004;1;10005;27;9997.0;-246.0
-1;71600;KELP;2014;28;;;;;2018;28;;;;;2016.0;-647.8046875
-1;71700;KELP;2014;31;;;;;2016;4;2018;31;;;2015.0;-646.78125
-1;71700;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;71800;RAINFOREST_RESIN;10002;1;9996;2;9995;25;10004;2;10005;25;;;10003.0;-246.0
-1;71800;KELP;2014;27;;;;;2018;27;;;;;2016.0;-646.3046875
-1;71900;KELP;2014;26;;;;;2018;26;;;;;2016.0;-653.0390625
-1;71900;RAINFOREST_RESIN;10002;1;9996;1;9995;25;10004;1;10005;25;;;10003.0;-246.0
-1;72000;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;72000;KELP;2015;21;;;;;2017;6;2018;21;;;2016.0;-624.046875
-1;72100;KELP;2014;21;;;;;2016;5;2018;21;;;2015.0;-644.8515625
-1;72100;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;72200;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;72200;KELP;2016;3;2014;31;;;2018;31;;;;;2017.0;-652.7421875
-1;72300;KELP;2014;23;;;;;2018;23;;;;;2016.0;-643.9140625
-1;72300;RAINFOREST_RESIN;9996;1;9995;22;;;10002;8;10004;1;10005;22;9999.0;-246.0
-1;72400;RAINFOREST_RESIN;10002;1;9996;2;9995;20;10004;2;10005;20;;;10003.0;-246.0
-1;72400;KELP;2014;22;;;;;2016;6;2018;22;;;2015.0;-650.34375
-1;72500;KELP;2014;34;;;;;2017;27;;;;;2015.5;-666.890625
-1;72500;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;72600;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;72600;KELP;2014;35;;;;;2015;4;2017;29;;;2014.5;-661.109375
-1;72700;KELP;2014;23;;;;;2017;23;;;;;2015.5;-665.7421875
-1;72700;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;72800;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;72800;KELP;2014;20;;;;;2017;20;;;;;2015.5;-664.25
-1;72900;KELP;2014;24;;;;;2017;24;;;;;2015.5;-666.078125
-1;72900;RAINFOREST_RESIN;9998;1;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;73000;RAINFOREST_RESIN;9996;1;9995;21;;;10002;7;10004;1;10005;21;9999.0;-246.0
-1;73000;KELP;2014;21;;;;;2016;2;2017;22;;;2015.0;-665.7734375
-1;73100;KELP;2014;31;;;;;2017;31;;;;;2015.5;-674.1171875
-1;73100;RAINFOREST_RESIN;9996;2;9995;29;;;10002;3;10004;2;10005;29;9999.0;-246.0
-1;73200;KELP;2014;21;;;;;2017;21;;;;;2015.5;-679.84375
-1;73200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;73300;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;73300;KELP;2014;30;;;;;2017;30;;;;;2015.5;-685.4296875
-1;73400;RAINFOREST_RESIN;9995;30;;;;;9998;1;10005;30;;;9996.5;-246.0
-1;73400;KELP;2014;30;;;;;2016;4;2017;30;;;2015.0;-680.8984375
-1;73500;KELP;2014;25;;;;;2017;25;;;;;2015.5;-677.3671875
-1;73500;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;73600;KELP;2014;25;;;;;2017;25;;;;;2015.5;-676.3359375
-1;73600;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;73700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;73700;KELP;2014;24;;;;;2017;24;;;;;2015.5;-661.0625
-1;73800;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;73800;KELP;2014;24;;;;;2016;5;2018;24;;;2015.0;-644.890625
-1;73900;KELP;2015;27;;;;;2018;30;;;;;2016.5;-614.390625
-1;73900;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;74000;KELP;2015;26;;;;;2017;3;2018;26;;;2016.0;-632.5
-1;74000;RAINFOREST_RESIN;10002;1;9998;10;9996;2;10004;2;10005;24;;;10003.0;-246.0
-1;74100;RAINFOREST_RESIN;10000;6;9996;2;9995;30;10004;2;10005;30;;;10002.0;-246.0
-1;74100;KELP;2016;6;2015;32;;;2018;32;;;;;2017.0;-632.109375
-1;74200;RAINFOREST_RESIN;9996;2;9995;20;;;10002;6;10004;2;10005;20;9999.0;-246.0
-1;74200;KELP;2015;22;;;;;2018;22;;;;;2016.5;-628.84375
-1;74300;KELP;2015;5;2014;32;;;2018;32;;;;;2016.5;-651.0859375
-1;74300;RAINFOREST_RESIN;9996;2;9995;30;;;10002;6;10004;2;10005;30;9999.0;-246.0
-1;74400;KELP;2015;30;;;;;2018;30;;;;;2016.5;-629.1796875
-1;74400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;74500;RAINFOREST_RESIN;10000;3;9995;29;;;10005;29;;;;;10002.5;-246.0
-1;74500;KELP;2016;3;2014;29;;;2018;29;;;;;2017.0;-638.78125
-1;74600;RAINFOREST_RESIN;10002;1;9998;7;9995;29;10005;29;;;;;10003.5;-246.0
-1;74600;KELP;2014;29;;;;;2018;29;;;;;2016.0;-641.390625
-1;74700;KELP;2014;32;;;;;2018;32;;;;;2016.0;-647.6484375
-1;74700;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;74800;KELP;2014;26;;;;;2018;26;;;;;2016.0;-644.6640625
-1;74800;RAINFOREST_RESIN;9998;9;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;74900;RAINFOREST_RESIN;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;-246.0
-1;74900;KELP;2015;31;;;;;2018;31;;;;;2016.5;-636.6640625
-1;75000;RAINFOREST_RESIN;9995;27;;;;;9998;1;10005;27;;;9996.5;-246.0
-1;75000;KELP;2016;1;2014;27;;;2017;27;;;;;2016.5;-664.640625
-1;75100;KELP;2014;30;;;;;2017;30;;;;;2015.5;-659.25
-1;75100;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;75200;KELP;2016;3;2014;26;;;2017;2;2018;24;;;2016.5;-655.0859375
-1;75200;RAINFOREST_RESIN;9998;2;9996;2;9995;24;10004;2;10005;24;;;10001.0;-246.0
-1;75300;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;75300;KELP;2014;29;;;;;2017;29;;;;;2015.5;-661.34375
-1;75400;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;75400;KELP;2014;31;;;;;2017;31;;;;;2015.5;-668.75
-1;75500;KELP;2014;34;;;;;2017;30;;;;;2015.5;-667.796875
-1;75500;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;75600;KELP;2014;28;;;;;2017;28;;;;;2015.5;-659.3125
-1;75600;RAINFOREST_RESIN;10002;1;9996;2;9995;26;10004;2;10005;26;;;10003.0;-246.0
-1;75700;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;75700;KELP;2014;27;;;;;2016;3;2017;27;;;2015.0;-664.578125
-1;75800;RAINFOREST_RESIN;9998;5;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;75800;KELP;2014;30;;;;;2017;30;;;;;2015.5;-658.96875
-1;75900;KELP;2014;21;;;;;2018;21;;;;;2016.0;-652.7421875
-1;75900;RAINFOREST_RESIN;9995;21;;;;;10002;8;10005;21;;;9998.5;-246.0
-1;76000;KELP;2015;32;;;;;2018;32;;;;;2016.5;-626.5
-1;76000;RAINFOREST_RESIN;9998;2;9996;2;9995;30;10004;2;10005;30;;;10001.0;-246.0
-1;76100;RAINFOREST_RESIN;9996;1;9995;20;;;9998;1;10004;1;10005;20;9997.0;-246.0
-1;76100;KELP;2015;21;;;;;2018;21;;;;;2016.5;-635.625
-1;76200;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;76200;KELP;2014;22;;;;;2018;22;;;;;2016.0;-645.3046875
-1;76300;KELP;2015;6;2014;27;;;2018;27;;;;;2016.5;-651.203125
-1;76300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;76400;KELP;2014;28;;;;;2018;28;;;;;2016.0;-651.3046875
-1;76400;RAINFOREST_RESIN;9998;4;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;76500;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;76500;KELP;2014;7;2013;27;;;2017;28;;;;;2015.5;-690.546875
-1;76600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;76600;KELP;2014;30;;;;;2017;30;;;;;2015.5;-678.171875
-1;76700;KELP;2014;26;;;;;2016;4;2017;26;;;2015.0;-676.0546875
-1;76700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;76800;KELP;2014;25;;;;;2017;25;;;;;2015.5;-684.6796875
-1;76800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;76900;RAINFOREST_RESIN;9998;5;9995;24;;;10005;24;;;;;10001.5;-246.0
-1;76900;KELP;2013;24;;;;;2014;6;2017;24;;;2013.5;-707.5625
-1;77000;RAINFOREST_RESIN;9996;1;9995;26;;;10002;4;10004;1;10005;26;9999.0;-246.0
-1;77000;KELP;2013;27;;;;;2016;27;;;;;2014.5;-716.359375
-1;77100;KELP;2015;2;2014;3;2013;30;2016;30;;;;;2015.5;-719.578125
-1;77100;RAINFOREST_RESIN;10000;3;9998;9;9996;1;10004;1;10005;29;;;10002.0;-246.0
-1;77200;KELP;2012;28;;;;;2014;7;2016;28;;;2013.0;-749.625
-1;77200;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;77300;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;77300;KELP;2012;24;;;;;2015;24;;;;;2013.5;-761.1640625
-1;77400;RAINFOREST_RESIN;9995;30;;;;;10002;2;10005;30;;;9998.5;-246.0
-1;77400;KELP;2012;30;;;;;2016;30;;;;;2014.0;-754.265625
-1;77500;KELP;2012;30;;;;;2015;30;;;;;2013.5;-772.1875
-1;77500;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;77600;KELP;2012;30;;;;;2015;27;;;;;2013.5;-761.2421875
-1;77600;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;77700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;77700;KELP;2013;26;;;;;2016;26;;;;;2014.5;-727.421875
-1;77800;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;77800;KELP;2013;26;;;;;2015;2;2016;26;;;2014.0;-732.3046875
-1;77900;KELP;2013;39;;;;;2016;32;;;;;2014.5;-728.0078125
-1;77900;RAINFOREST_RESIN;10002;3;9996;2;9995;30;10004;2;10005;30;;;10003.0;-246.0
-1;78000;KELP;2013;30;;;;;2016;23;;;;;2014.5;-729.390625
-1;78000;RAINFOREST_RESIN;9995;23;;;;;9998;11;10005;23;;;9996.5;-246.0
-1;78100;RAINFOREST_RESIN;10002;1;9996;2;9995;22;10004;2;10005;22;;;10003.0;-246.0
-1;78100;KELP;2013;23;;;;;2014;3;2016;24;;;2013.5;-716.5390625
-1;78200;RAINFOREST_RESIN;9998;7;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;78200;KELP;2013;27;;;;;2015;2;2016;27;;;2014.0;-730.1875
-1;78300;KELP;2012;30;;;;;2016;30;;;;;2014.0;-745.375
-1;78300;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;78400;KELP;2012;26;;;;;2014;5;2016;26;;;2013.0;-758.3828125
-1;78400;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;78500;RAINFOREST_RESIN;9998;4;9996;1;9995;22;10004;1;10005;22;;;10001.0;-246.0
-1;78500;KELP;2013;23;;;;;2016;23;;;;;2014.5;-735.625
-1;78600;RAINFOREST_RESIN;9995;22;;;;;10002;4;10005;22;;;9998.5;-246.0
-1;78600;KELP;2013;22;;;;;2016;22;;;;;2014.5;-727.9140625
-1;78700;KELP;2013;30;;;;;2016;32;;;;;2014.5;-725.140625
-1;78700;RAINFOREST_RESIN;9996;2;9995;30;;;9998;1;10004;2;10005;30;9997.0;-246.0
-1;78800;KELP;2013;27;;;;;2016;23;;;;;2014.5;-725.1015625
-1;78800;RAINFOREST_RESIN;10002;1;9995;23;;;10005;23;;;;;10003.5;-246.0
-1;78900;RAINFOREST_RESIN;10002;1;9995;26;;;10005;26;;;;;10003.5;-246.0
-1;78900;KELP;2015;1;2013;26;;;2016;26;;;;;2015.5;-722.4296875
-1;79000;RAINFOREST_RESIN;9998;2;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;79000;KELP;2013;25;;;;;2015;3;2016;28;;;2014.0;-722.5234375
-1;79100;KELP;2013;23;;;;;2016;24;;;;;2014.5;-732.8125
-1;79100;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;79200;KELP;2013;21;;;;;2014;5;2015;2;2016;21;2013.5;-711.9921875
-1;79200;RAINFOREST_RESIN;9996;1;9995;20;;;9998;3;10004;1;10005;20;9997.0;-246.0
-1;79300;KELP;2014;4;2013;30;;;2017;30;;;;;2015.5;-703.171875
-1;79300;RAINFOREST_RESIN;9998;3;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;79400;RAINFOREST_RESIN;9998;6;9996;2;9995;26;10004;2;10005;26;;;10001.0;-246.0
-1;79400;KELP;2013;27;;;;;2016;2;2017;26;;;2014.5;-704.1328125
-1;79500;KELP;2013;26;;;;;2017;26;;;;;2015.0;-702.6171875
-1;79500;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;79600;RAINFOREST_RESIN;9995;25;;;;;10002;8;10005;25;;;9998.5;-246.0
-1;79600;KELP;2013;25;;;;;2016;25;;;;;2014.5;-715.7109375
-1;79700;KELP;2012;24;;;;;2016;24;;;;;2014.0;-740.578125
-1;79700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;79800;RAINFOREST_RESIN;10002;1;9995;21;;;10005;21;;;;;10003.5;-246.0
-1;79800;KELP;2013;21;;;;;2015;8;2016;21;;;2014.0;-733.9296875
-1;79900;KELP;2013;29;;;;;2016;30;;;;;2014.5;-719.1328125
-1;79900;RAINFOREST_RESIN;9998;1;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;80000;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;80000;KELP;2013;32;;;;;2016;32;;;;;2014.5;-728.40625
-1;80100;KELP;2014;4;2012;29;;;2016;29;;;;;2015.0;-743.3828125
-1;80100;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;80200;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;80200;KELP;2012;28;;;;;2016;28;;;;;2014.0;-739.3046875
-1;80300;KELP;2013;27;;;;;2016;27;;;;;2014.5;-730.21875
-1;80300;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;80400;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;80400;KELP;2012;26;;;;;2016;26;;;;;2014.0;-744.7890625
-1;80500;KELP;2012;28;;;;;2014;6;2016;28;;;2013.0;-742.734375
-1;80500;RAINFOREST_RESIN;9996;2;9995;26;;;10000;6;10004;2;10005;26;9998.0;-246.0
-1;80600;RAINFOREST_RESIN;9996;2;9995;24;;;10002;9;10004;2;10005;24;9999.0;-246.0
-1;80600;KELP;2014;4;2013;2;2012;24;2016;26;;;;;2015.0;-738.6875
-1;80700;KELP;2012;31;;;;;2016;31;;;;;2014.0;-744.2578125
-1;80700;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;80800;RAINFOREST_RESIN;9996;1;9995;29;;;10002;3;10004;1;10005;29;9999.0;-246.0
-1;80800;KELP;2015;1;2013;35;;;2016;30;;;;;2015.5;-734.6328125
-1;80900;KELP;2013;4;2012;21;;;2016;21;;;;;2014.5;-740.6171875
-1;80900;RAINFOREST_RESIN;9995;21;;;;;10002;5;10005;21;;;9998.5;-246.0
-1;81000;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;81000;KELP;2012;29;;;;;2016;29;;;;;2014.0;-740.109375
-1;81100;KELP;2015;1;2013;1;2012;25;2016;26;;;;;2015.5;-738.078125
-1;81100;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;81200;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;81200;KELP;2015;1;2013;22;;;2016;22;;;;;2015.5;-726.8984375
-1;81300;KELP;2013;31;;;;;2016;31;;;;;2014.5;-721.2578125
-1;81300;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;81400;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;81400;KELP;2013;26;;;;;2015;7;2016;1;2017;25;2014.0;-706.6640625
-1;81500;KELP;2014;6;2013;25;;;2017;25;;;;;2015.5;-702.609375
-1;81500;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;81600;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;81600;KELP;2013;26;;;;;2016;26;;;;;2014.5;-721.671875
-1;81700;KELP;2013;30;;;;;2016;24;;;;;2014.5;-726.171875
-1;81700;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;81800;RAINFOREST_RESIN;10002;1;9996;2;9995;23;10004;2;10005;23;;;10003.0;-246.0
-1;81800;KELP;2014;25;;;;;2017;25;;;;;2015.5;-671.859375
-1;81900;KELP;2014;30;;;;;2017;30;;;;;2015.5;-664.8671875
-1;81900;RAINFOREST_RESIN;9996;1;9995;29;;;9998;1;10004;1;10005;29;9997.0;-246.0
-1;82000;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;82000;KELP;2014;22;;;;;2018;22;;;;;2016.0;-638.0859375
-1;82100;KELP;2015;27;;;;;2018;27;;;;;2016.5;-636.046875
-1;82100;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;82200;KELP;2015;25;;;;;2018;25;;;;;2016.5;-621.890625
-1;82200;RAINFOREST_RESIN;10002;1;9998;5;9996;2;10004;2;10005;23;;;10003.0;-246.0
-1;82300;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;82300;KELP;2015;28;;;;;2018;28;;;;;2016.5;-609.765625
-1;82400;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;82400;KELP;2015;21;;;;;2018;21;;;;;2016.5;-620.46875
-1;82500;KELP;2015;22;;;;;2018;23;;;;;2016.5;-615.5078125
-1;82500;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;82600;KELP;2015;27;;;;;2016;3;2017;7;2018;2;2015.5;-608.3125
-1;82600;RAINFOREST_RESIN;9996;2;9995;25;;;10002;8;10004;2;10005;25;9999.0;-246.0
-1;82700;RAINFOREST_RESIN;9998;1;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;82700;KELP;2015;22;;;;;2018;1;2019;21;;;2016.5;-604.8515625
-1;82800;RAINFOREST_RESIN;9996;2;9995;20;;;10002;1;10004;2;10005;20;9999.0;-246.0
-1;82800;KELP;2015;22;;;;;2018;22;;;;;2016.5;-610.0078125
-1;82900;KELP;2015;21;;;;;2019;21;;;;;2017.0;-598.7578125
-1;82900;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;-246.0
-1;83000;KELP;2015;25;;;;;2018;1;2019;24;;;2016.5;-608.109375
-1;83000;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;83100;RAINFOREST_RESIN;9996;2;9995;27;;;9998;1;10004;2;10005;27;9997.0;-246.0
-1;83100;KELP;2016;4;2015;29;;;2018;2;2019;27;;;2017.0;-605.7265625
-1;83200;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;83200;KELP;2015;27;;;;;2019;27;;;;;2017.0;-596.3671875
-1;83300;KELP;2016;26;;;;;2019;26;;;;;2017.5;-560.703125
-1;83300;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;83400;KELP;2016;28;;;;;2020;28;;;;;2018.0;-553.171875
-1;83400;RAINFOREST_RESIN;9996;2;9995;26;;;10002;8;10004;2;10005;26;9999.0;-246.0
-1;83500;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;83500;KELP;2017;27;;;;;2020;27;;;;;2018.5;-532.3046875
-1;83600;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;83600;KELP;2017;23;;;;;2020;23;;;;;2018.5;-527.5078125
-1;83700;KELP;2016;25;;;;;2017;1;2020;25;;;2016.5;-544.890625
-1;83700;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;83800;KELP;2016;30;;;;;2019;30;;;;;2017.5;-558.5859375
-1;83800;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;83900;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;83900;KELP;2016;27;;;;;2019;27;;;;;2017.5;-559.3515625
-1;84000;RAINFOREST_RESIN;9996;1;9995;24;;;9998;1;10004;1;10005;24;9997.0;-246.0
-1;84000;KELP;2018;1;2016;29;;;2019;25;;;;;2018.5;-566.7890625
-1;84100;KELP;2015;21;;;;;2019;21;;;;;2017.0;-594.609375
-1;84100;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;84200;KELP;2016;34;;;;;2019;29;;;;;2017.5;-577.2734375
-1;84200;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;84300;RAINFOREST_RESIN;9998;7;9996;2;9995;30;10004;2;10005;30;;;10001.0;-246.0
-1;84300;KELP;2016;32;;;;;2019;32;;;;;2017.5;-581.5859375
-1;84400;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;84400;KELP;2016;20;;;;;2019;20;;;;;2017.5;-587.4140625
-1;84500;KELP;2016;4;2015;24;;;2019;24;;;;;2017.5;-598.59375
-1;84500;RAINFOREST_RESIN;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;84600;KELP;2017;1;2015;25;;;2018;25;;;;;2017.5;-616.1015625
-1;84600;RAINFOREST_RESIN;9996;2;9995;23;;;9998;1;10004;2;10005;23;9997.0;-246.0
-1;84700;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;84700;KELP;2015;30;;;;;2018;30;;;;;2016.5;-619.890625
-1;84800;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;84800;KELP;2015;33;;;;;2018;30;;;;;2016.5;-612.859375
-1;84900;KELP;2015;29;;;;;2017;1;2019;29;;;2016.0;-603.65625
-1;84900;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;85000;KELP;2015;24;;;;;2018;24;;;;;2016.5;-622.046875
-1;85000;RAINFOREST_RESIN;9995;24;;;;;9998;1;10002;10;10005;24;9996.5;-246.0
-1;85100;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;85100;KELP;2015;26;;;;;2018;26;;;;;2016.5;-612.9140625
-1;85200;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;85200;KELP;2015;24;;;;;2018;2;2019;22;;;2016.5;-608.359375
-1;85300;KELP;2016;2;2015;23;;;2019;23;;;;;2017.5;-601.7734375
-1;85300;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;85400;KELP;2016;4;2015;22;;;2019;22;;;;;2017.5;-599.2109375
-1;85400;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;85500;RAINFOREST_RESIN;9996;2;9995;28;;;10002;9;10004;2;10005;28;9999.0;-246.0
-1;85500;KELP;2016;2;2015;28;;;2019;30;;;;;2017.5;-590.5390625
-1;85600;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;85600;KELP;2017;4;2015;29;;;2018;22;;;;;2017.5;-610.0078125
-1;85700;KELP;2015;28;;;;;2018;28;;;;;2016.5;-615.8984375
-1;85700;RAINFOREST_RESIN;10002;3;9996;1;9995;27;10004;1;10005;27;;;10003.0;-246.0
-1;85800;KELP;2015;30;;;;;2016;6;2018;31;;;2015.5;-623.6953125
-1;85800;RAINFOREST_RESIN;9998;7;9996;1;9995;30;10000;6;10004;1;10005;30;9999.0;-246.0
-1;85900;RAINFOREST_RESIN;9996;1;9995;30;;;9998;1;10004;1;10005;30;9997.0;-246.0
-1;85900;KELP;2014;31;;;;;2018;31;;;;;2016.0;-647.515625
-1;86000;RAINFOREST_RESIN;10000;5;9998;1;9996;2;10004;2;10005;24;;;10002.0;-246.0
-1;86000;KELP;2016;5;2015;26;;;2018;26;;;;;2017.0;-632.359375
-1;86100;KELP;2015;27;;;;;2018;27;;;;;2016.5;-622.7890625
-1;86100;RAINFOREST_RESIN;10002;1;9998;1;9996;1;10004;1;10005;26;;;10003.0;-246.0
-1;86200;KELP;2015;21;;;;;2018;24;;;;;2016.5;-618.0703125
-1;86200;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;86300;RAINFOREST_RESIN;9998;5;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;86300;KELP;2015;28;;;;;2018;28;;;;;2016.5;-616.46875
-1;86400;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;86400;KELP;2015;34;;;;;2018;1;2019;30;;;2016.5;-607.7265625
-1;86500;KELP;2015;27;;;;;2018;27;;;;;2016.5;-615.3515625
-1;86500;RAINFOREST_RESIN;9998;3;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;86600;KELP;2015;25;;;;;2017;1;2018;25;;;2016.0;-614.8515625
-1;86600;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;86700;RAINFOREST_RESIN;10000;1;9995;21;;;10005;21;;;;;10002.5;-246.0
-1;86700;KELP;2016;1;2015;21;;;2017;3;2018;21;;;2016.5;-613.6953125
-1;86800;RAINFOREST_RESIN;10002;5;9996;1;9995;24;10004;1;10005;24;;;10003.0;-246.0
-1;86800;KELP;2015;25;;;;;2019;25;;;;;2017.0;-601.390625
-1;86900;KELP;2017;2;2015;21;;;2018;21;;;;;2017.5;-617.15625
-1;86900;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;87000;KELP;2015;22;;;;;2019;22;;;;;2017.0;-592.0390625
-1;87000;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;87100;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;87100;KELP;2015;4;2014;21;;;2018;21;;;;;2016.5;-648.921875
-1;87200;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;87200;KELP;2015;28;;;;;2018;28;;;;;2016.5;-636.703125
-1;87300;KELP;2015;32;;;;;2018;32;;;;;2016.5;-635.171875
-1;87300;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;87400;KELP;2015;27;;;;;2018;28;;;;;2016.5;-636.6171875
-1;87400;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;87500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;87500;KELP;2014;30;;;;;2018;30;;;;;2016.0;-658.2265625
-1;87600;RAINFOREST_RESIN;9998;4;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;87600;KELP;2014;23;;;;;2017;23;;;;;2015.5;-674.234375
-1;87700;KELP;2013;20;;;;;2016;21;;;;;2014.5;-709.3515625
-1;87700;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;87800;KELP;2013;27;;;;;2017;27;;;;;2015.0;-694.640625
-1;87800;RAINFOREST_RESIN;9998;4;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;87900;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;87900;KELP;2013;24;;;;;2017;24;;;;;2015.0;-700.5
-1;88000;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;88000;KELP;2013;27;;;;;2017;27;;;;;2015.0;-700.796875
-1;88100;KELP;2014;27;;;;;2017;27;;;;;2015.5;-672.65625
-1;88100;RAINFOREST_RESIN;9996;2;9995;25;;;9998;1;10004;2;10005;25;9997.0;-246.0
-1;88200;RAINFOREST_RESIN;10002;5;9996;2;9995;22;10004;2;10005;22;;;10003.0;-246.0
-1;88200;KELP;2014;32;;;;;2017;24;;;;;2015.5;-661.9375
-1;88300;KELP;2014;24;;;;;2017;25;;;;;2015.5;-666.2734375
-1;88300;RAINFOREST_RESIN;9998;8;9996;1;9995;24;10004;1;10005;24;;;10001.0;-246.0
-1;88400;RAINFOREST_RESIN;9995;30;;;;;10002;6;10005;30;;;9998.5;-246.0
-1;88400;KELP;2014;30;;;;;2016;8;2017;30;;;2015.0;-667.25
-1;88500;KELP;2013;28;;;;;2017;28;;;;;2015.0;-694.2578125
-1;88500;RAINFOREST_RESIN;10002;9;9995;28;;;10005;28;;;;;10003.5;-246.0
-1;88600;RAINFOREST_RESIN;9995;23;;;;;10000;5;10002;3;10005;23;9997.5;-246.0
-1;88600;KELP;2013;23;;;;;2014;2;2015;5;2017;23;2013.5;-691.0625
-1;88700;KELP;2013;25;;;;;2015;4;2017;25;;;2014.0;-693.6640625
-1;88700;RAINFOREST_RESIN;9998;3;9995;25;;;10005;25;;;;;10001.5;-246.0
-1;88800;RAINFOREST_RESIN;9998;9;9996;2;9995;28;10004;2;10005;28;;;10001.0;-246.0
-1;88800;KELP;2013;30;;;;;2014;2;2017;30;;;2013.5;-698.3515625
-1;88900;KELP;2013;24;;;;;2017;25;;;;;2015.0;-691.2109375
-1;88900;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;89000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;89000;KELP;2014;22;;;;;2016;3;2017;22;;;2015.0;-678.0390625
-1;89100;KELP;2014;33;;;;;2017;27;;;;;2015.5;-667.71875
-1;89100;RAINFOREST_RESIN;9998;6;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;89200;RAINFOREST_RESIN;9996;1;9995;27;;;10002;2;10004;1;10005;27;9999.0;-246.0
-1;89200;KELP;2014;28;;;;;2016;5;2017;28;;;2015.0;-679.015625
-1;89300;KELP;2014;28;;;;;2017;28;;;;;2015.5;-685.7578125
-1;89300;RAINFOREST_RESIN;9998;2;9996;2;9995;26;10004;2;10005;26;;;10001.0;-246.0
-1;89400;RAINFOREST_RESIN;9998;8;9995;20;;;10005;20;;;;;10001.5;-246.0
-1;89400;KELP;2013;20;;;;;2017;20;;;;;2015.0;-689.859375
-1;89500;KELP;2014;31;;;;;2017;31;;;;;2015.5;-681.7578125
-1;89500;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;89600;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;89600;KELP;2014;25;;;;;2016;6;2017;1;2018;24;2015.0;-657.84375
-1;89700;KELP;2015;1;2014;30;;;2017;2;2018;28;;;2016.0;-655.7578125
-1;89700;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;89800;RAINFOREST_RESIN;9998;4;9995;24;;;10005;24;;;;;10001.5;-246.0
-1;89800;KELP;2014;23;;;;;2017;24;;;;;2015.5;-674.5546875
-1;89900;KELP;2014;23;;;;;2017;23;;;;;2015.5;-671.40625
-1;89900;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;90000;RAINFOREST_RESIN;9998;1;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;90000;KELP;2014;29;;;;;2017;29;;;;;2015.5;-664.3046875
-1;90100;KELP;2014;36;;;;;2017;28;;;;;2015.5;-659.0390625
-1;90100;RAINFOREST_RESIN;9996;1;9995;27;;;10002;1;10004;1;10005;27;9999.0;-246.0
-1;90200;RAINFOREST_RESIN;9995;23;;;;;10002;7;10005;23;;;9998.5;-246.0
-1;90200;KELP;2014;27;;;;;2017;23;;;;;2015.5;-665.078125
-1;90300;KELP;2014;23;;;;;2017;23;;;;;2015.5;-663.5546875
-1;90300;RAINFOREST_RESIN;9998;3;9996;2;9995;21;10004;2;10005;21;;;10001.0;-246.0
-1;90400;RAINFOREST_RESIN;9996;2;9995;26;;;10002;4;10004;2;10005;26;9999.0;-246.0
-1;90400;KELP;2014;34;;;;;2017;28;;;;;2015.5;-681.8203125
-1;90500;KELP;2014;26;;;;;2017;26;;;;;2015.5;-671.0390625
-1;90500;RAINFOREST_RESIN;9998;8;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;90600;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;90600;KELP;2014;23;;;;;2017;23;;;;;2015.5;-660.3359375
-1;90700;KELP;2014;26;;;;;2017;2;2018;24;;;2015.5;-657.9140625
-1;90700;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;-246.0
-1;90800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;90800;KELP;2014;25;;;;;2017;25;;;;;2015.5;-664.4453125
-1;90900;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;90900;KELP;2017;1;2014;25;;;2018;25;;;;;2017.5;-641.921875
-1;91000;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;91000;KELP;2017;1;2014;30;;;2018;30;;;;;2017.5;-641.875
-1;91100;KELP;2015;23;;;;;2018;23;;;;;2016.5;-635.171875
-1;91100;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;91200;KELP;2015;22;;;;;2018;22;;;;;2016.5;-627.640625
-1;91200;RAINFOREST_RESIN;9995;22;;;;;10002;2;10005;22;;;9998.5;-246.0
-1;91300;RAINFOREST_RESIN;9995;20;;;;;10002;6;10005;20;;;9998.5;-246.0
-1;91300;KELP;2015;23;;;;;2018;20;;;;;2016.5;-621.4375
-1;91400;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;91400;KELP;2015;21;;;;;2018;21;;;;;2016.5;-625.0859375
-1;91500;KELP;2015;23;;;;;2018;23;;;;;2016.5;-613.03125
-1;91500;RAINFOREST_RESIN;9998;7;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;91600;KELP;2016;2;2015;27;;;2018;27;;;;;2017.0;-615.2109375
-1;91600;RAINFOREST_RESIN;10000;2;9998;2;9995;27;10005;27;;;;;10002.5;-246.0
-1;91700;RAINFOREST_RESIN;9996;2;9995;28;;;9998;1;10004;2;10005;28;9997.0;-246.0
-1;91700;KELP;2017;5;2015;30;;;2018;2;2019;28;;;2017.5;-606.9453125
-1;91800;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;91800;KELP;2017;1;2015;26;;;2019;26;;;;;2018.0;-606.9453125
-1;91900;KELP;2016;3;2015;30;;;2019;30;;;;;2017.5;-601.4296875
-1;91900;RAINFOREST_RESIN;10000;3;9996;2;9995;28;10002;9;10004;2;10005;28;10001.0;-246.0
-1;92000;KELP;2015;28;;;;;2017;1;2019;28;;;2016.0;-605.8359375
-1;92000;RAINFOREST_RESIN;9998;7;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;92100;RAINFOREST_RESIN;9995;28;;;;;9998;1;10005;28;;;9996.5;-246.0
-1;92100;KELP;2015;28;;;;;2018;28;;;;;2016.5;-623.625
-1;92200;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;92200;KELP;2015;23;;;;;2018;23;;;;;2016.5;-615.578125
-1;92300;KELP;2015;26;;;;;2018;26;;;;;2016.5;-608.8046875
-1;92300;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10004;1;10005;25;9997.0;-246.0
-1;92400;KELP;2015;25;;;;;2018;25;;;;;2016.5;-615.078125
-1;92400;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;92500;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;92500;KELP;2015;23;;;;;2018;23;;;;;2016.5;-621.390625
-1;92600;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;92600;KELP;2017;1;2015;25;;;2018;25;;;;;2017.5;-615.1015625
-1;92700;KELP;2016;4;2015;29;;;2019;29;;;;;2017.5;-598.2265625
-1;92700;RAINFOREST_RESIN;10002;1;9996;2;9995;27;10004;2;10005;27;;;10003.0;-246.0
-1;92800;KELP;2016;2;2015;20;;;2019;22;;;;;2017.5;-591.40625
-1;92800;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;92900;RAINFOREST_RESIN;9998;7;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;92900;KELP;2016;1;2015;26;;;2019;27;;;;;2017.5;-587.7734375
-1;93000;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;93000;KELP;2016;27;;;;;2019;20;;;;;2017.5;-584.1953125
-1;93100;KELP;2018;3;2016;22;;;2019;1;2020;21;;;2018.5;-555.9296875
-1;93100;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;93200;KELP;2017;21;;;;;2019;2;2020;21;;;2018.0;-534.25
-1;93200;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;-246.0
-1;93300;RAINFOREST_RESIN;9995;29;;;;;10002;9;10005;29;;;9998.5;-246.0
-1;93300;KELP;2019;1;2017;29;;;2020;29;;;;;2019.5;-535.609375
-1;93400;RAINFOREST_RESIN;9996;2;9995;27;;;9998;3;10004;2;10005;27;9997.0;-246.0
-1;93400;KELP;2018;29;;;;;2021;29;;;;;2019.5;-459.9765625
-1;93500;KELP;2019;2;2018;26;;;2020;6;2021;1;2022;25;2019.5;-453.7578125
-1;93500;RAINFOREST_RESIN;10000;2;9996;1;9995;25;10004;1;10005;25;;;10002.0;-246.0
-1;93600;KELP;2020;33;;;;;2023;29;;;;;2021.5;-372.375
-1;93600;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;93700;RAINFOREST_RESIN;10002;1;9996;2;9995;23;10004;2;10005;23;;;10003.0;-246.0
-1;93700;KELP;2019;25;;;;;2022;2;2023;23;;;2020.5;-404.0390625
-1;93800;RAINFOREST_RESIN;9995;30;;;;;9998;1;10002;5;10005;30;9996.5;-246.0
-1;93800;KELP;2020;35;;;;;2023;30;;;;;2021.5;-376.4453125
-1;93900;KELP;2020;3;2019;28;;;2023;28;;;;;2021.5;-388.0390625
-1;93900;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;94000;KELP;2019;31;;;;;2022;31;;;;;2020.5;-425.3046875
-1;94000;RAINFOREST_RESIN;10002;4;9998;8;9996;1;10004;1;10005;30;;;10003.0;-246.0
-1;94100;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;94100;KELP;2019;33;;;;;2022;30;;;;;2020.5;-428.1015625
-1;94200;RAINFOREST_RESIN;9995;22;;;;;10002;7;10005;22;;;9998.5;-246.0
-1;94200;KELP;2019;22;;;;;2023;22;;;;;2021.0;-401.4921875
-1;94300;KELP;2020;1;2019;26;;;2023;26;;;;;2021.5;-392.9921875
-1;94300;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;-246.0
-1;94400;KELP;2020;29;;;;;2023;29;;;;;2021.5;-384.9296875
-1;94400;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;94500;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;94500;KELP;2019;25;;;;;2023;25;;;;;2021.0;-395.46875
-1;94600;RAINFOREST_RESIN;9998;2;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;94600;KELP;2020;22;;;;;2023;22;;;;;2021.5;-386.265625
-1;94700;KELP;2020;21;;;;;2022;6;2023;21;;;2021.0;-367.7578125
-1;94700;RAINFOREST_RESIN;10002;1;9996;1;9995;20;10004;1;10005;20;;;10003.0;-246.0
-1;94800;KELP;2020;28;;;;;2022;1;2023;28;;;2021.0;-366.265625
-1;94800;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;94900;RAINFOREST_RESIN;9995;27;;;;;9998;1;10005;27;;;9996.5;-246.0
-1;94900;KELP;2020;27;;;;;2023;27;;;;;2021.5;-372.8671875
-1;95000;RAINFOREST_RESIN;9998;9;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;95000;KELP;2021;1;2019;22;;;2023;22;;;;;2022.0;-400.328125
-1;95100;KELP;2019;25;;;;;2022;25;;;;;2020.5;-428.3359375
-1;95100;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;95200;KELP;2019;30;;;;;2022;30;;;;;2020.5;-411.6953125
-1;95200;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;95300;RAINFOREST_RESIN;9995;24;;;;;10002;9;10005;24;;;9998.5;-246.0
-1;95300;KELP;2019;24;;;;;2022;24;;;;;2020.5;-417.0390625
-1;95400;RAINFOREST_RESIN;9995;21;;;;;10002;1;10005;21;;;9998.5;-246.0
-1;95400;KELP;2019;21;;;;;2022;21;;;;;2020.5;-417.1015625
-1;95500;KELP;2019;27;;;;;2022;27;;;;;2020.5;-433.5859375
-1;95500;RAINFOREST_RESIN;9996;2;9995;25;;;10002;4;10004;2;10005;25;9999.0;-246.0
-1;95600;KELP;2018;29;;;;;2022;30;;;;;2020.0;-452.1875
-1;95600;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;95700;RAINFOREST_RESIN;10002;1;9996;2;9995;21;10004;2;10005;21;;;10003.0;-246.0
-1;95700;KELP;2018;23;;;;;2020;6;2021;23;;;2019.0;-480.0859375
-1;95800;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;95800;KELP;2018;5;2017;21;;;2021;21;;;;;2019.5;-502.3125
-1;95900;KELP;2017;23;;;;;2019;8;2020;23;;;2018.0;-516.7265625
-1;95900;RAINFOREST_RESIN;9998;9;9996;1;9995;22;10004;1;10005;22;;;10001.0;-246.0
-1;96000;KELP;2016;24;;;;;2019;1;2020;23;;;2017.5;-554.90625
-1;96000;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;96100;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;96100;KELP;2016;23;;;;;2019;23;;;;;2017.5;-573.2265625
-1;96200;RAINFOREST_RESIN;9996;2;9995;24;;;9998;5;10004;2;10005;24;9997.0;-246.0
-1;96200;KELP;2017;1;2016;24;;;2020;26;;;;;2018.5;-541.203125
-1;96300;KELP;2016;26;;;;;2019;2;2020;25;;;2017.5;-554.28125
-1;96300;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;96400;KELP;2016;30;;;;;2020;30;;;;;2018.0;-538.6328125
-1;96400;RAINFOREST_RESIN;9998;6;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;96500;RAINFOREST_RESIN;9998;1;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;96500;KELP;2017;29;;;;;2020;29;;;;;2018.5;-524.75
-1;96600;RAINFOREST_RESIN;9995;24;;;;;10002;3;10005;24;;;9998.5;-246.0
-1;96600;KELP;2017;24;;;;;2021;24;;;;;2019.0;-498.546875
-1;96700;KELP;2018;32;;;;;2021;32;;;;;2019.5;-461.046875
-1;96700;RAINFOREST_RESIN;9996;2;9995;30;;;10002;9;10004;2;10005;30;9999.0;-246.0
-1;96800;KELP;2019;8;2018;26;;;2022;27;;;;;2020.5;-438.078125
-1;96800;RAINFOREST_RESIN;10002;3;9998;2;9996;1;10004;1;10005;26;;;10003.0;-246.0
-1;96900;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;96900;KELP;2018;26;;;;;2022;26;;;;;2020.0;-453.4375
-1;97000;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;97000;KELP;2018;28;;;;;2021;28;;;;;2019.5;-469.359375
-1;97100;KELP;2018;28;;;;;2020;5;2021;28;;;2019.0;-460.8359375
-1;97100;RAINFOREST_RESIN;9995;28;;;;;10002;4;10005;28;;;9998.5;-246.0
-1;97200;RAINFOREST_RESIN;9996;1;9995;22;;;10000;3;10004;1;10005;22;9998.0;-246.0
-1;97200;KELP;2018;23;;;;;2019;3;2021;1;2022;22;2018.5;-455.8828125
-1;97300;KELP;2018;24;;;;;2021;25;;;;;2019.5;-458.8671875
-1;97300;RAINFOREST_RESIN;9998;3;9996;1;9995;24;10004;1;10005;24;;;10001.0;-246.0
-1;97400;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;97400;KELP;2018;27;;;;;2022;27;;;;;2020.0;-444.890625
-1;97500;KELP;2019;5;2018;22;;;2022;24;;;;;2020.5;-437.640625
-1;97500;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;97600;RAINFOREST_RESIN;9996;1;9995;30;;;10002;7;10004;1;10005;30;9999.0;-246.0
-1;97600;KELP;2019;31;;;;;2021;7;2022;1;2023;30;2020.0;-407.4140625
-1;97700;KELP;2018;22;;;;;2020;2;2022;22;;;2019.0;-446.828125
-1;97700;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;97800;RAINFOREST_RESIN;9995;27;;;;;10002;6;10005;27;;;9998.5;-246.0
-1;97800;KELP;2018;27;;;;;2020;1;2022;27;;;2019.0;-448.4296875
-1;97900;KELP;2018;25;;;;;2021;1;2022;25;;;2019.5;-457.875
-1;97900;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;98000;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;98000;KELP;2017;24;;;;;2021;24;;;;;2019.0;-496.4921875
-1;98100;KELP;2018;29;;;;;2021;29;;;;;2019.5;-485.8984375
-1;98100;RAINFOREST_RESIN;9996;1;9995;28;;;9998;1;10002;2;10004;1;9997.0;-246.0
-1;98200;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;98200;KELP;2018;26;;;;;2021;26;;;;;2019.5;-486.125
-1;98300;KELP;2020;2;2018;31;;;2021;29;;;;;2020.5;-474.859375
-1;98300;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;98400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;98400;KELP;2018;30;;;;;2020;7;2021;30;;;2019.0;-473.40625
-1;98500;KELP;2018;31;;;;;2021;31;;;;;2019.5;-468.1875
-1;98500;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;98600;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;98600;KELP;2018;28;;;;;2022;28;;;;;2020.0;-445.046875
-1;98700;KELP;2019;29;;;;;2022;29;;;;;2020.5;-428.046875
-1;98700;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;98800;RAINFOREST_RESIN;10002;1;9996;1;9995;23;10004;1;10005;23;;;10003.0;-246.0
-1;98800;KELP;2020;1;2018;24;;;2021;24;;;;;2020.5;-459.2890625
-1;98900;KELP;2018;26;;;;;2021;26;;;;;2019.5;-475.328125
-1;98900;RAINFOREST_RESIN;9998;10;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;99000;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;99000;KELP;2018;25;;;;;2020;4;2021;26;;;2019.0;-472.9609375
-1;99100;KELP;2018;31;;;;;2021;25;;;;;2019.5;-469.9453125
-1;99100;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;99200;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;99200;KELP;2018;27;;;;;2021;22;;;;;2019.5;-465.15625
-1;99300;KELP;2020;1;2018;27;;;2021;27;;;;;2020.5;-463.359375
-1;99300;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;99400;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;99400;KELP;2018;26;;;;;2022;26;;;;;2020.0;-451.28125
-1;99500;KELP;2018;24;;;;;2022;24;;;;;2020.0;-440.8671875
-1;99500;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;99600;RAINFOREST_RESIN;10002;1;9995;28;;;10005;28;;;;;10003.5;-246.0
-1;99600;KELP;2019;4;2018;28;;;2022;28;;;;;2020.5;-445.390625
-1;99700;KELP;2018;30;;;;;2022;30;;;;;2020.0;-444.75
-1;99700;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;99800;KELP;2018;28;;;;;2022;28;;;;;2020.0;-447.71875
-1;99800;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;99900;RAINFOREST_RESIN;10002;1;9995;29;;;10005;29;;;;;10003.5;-246.0
-1;99900;KELP;2018;28;;;;;2021;29;;;;;2019.5;-470.03125
-1;100000;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;100000;KELP;2018;24;;;;;2020;5;2021;24;;;2019.0;-479.0703125
-1;100100;KELP;2018;29;;;;;2021;29;;;;;2019.5;-472.9453125
-1;100100;RAINFOREST_RESIN;10002;1;9995;29;;;10005;29;;;;;10003.5;-246.0
-1;100200;KELP;2018;23;;;;;2020;1;2021;23;;;2019.0;-463.25
-1;100200;RAINFOREST_RESIN;9998;5;9996;1;9995;22;10004;1;10005;22;;;10001.0;-246.0
-1;100300;RAINFOREST_RESIN;9998;4;9996;1;9995;30;10004;1;10005;30;;;10001.0;-246.0
-1;100300;KELP;2018;31;;;;;2021;31;;;;;2019.5;-466.796875
-1;100400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;100400;KELP;2018;30;;;;;2021;30;;;;;2019.5;-479.34375
-1;100500;KELP;2018;22;;;;;2021;22;;;;;2019.5;-484.125
-1;100500;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;100600;KELP;2018;29;;;;;2020;1;2021;29;;;2019.0;-475.71875
-1;100600;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;100700;RAINFOREST_RESIN;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;-246.0
-1;100700;KELP;2018;31;;;;;2021;31;;;;;2019.5;-467.5703125
-1;100800;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;100800;KELP;2018;35;;;;;2021;28;;;;;2019.5;-472.1328125
-1;100900;KELP;2018;19;;;;;2021;27;;;;;2019.5;-470.4375
-1;100900;RAINFOREST_RESIN;9998;10;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;101000;KELP;2018;31;;;;;2021;30;;;;;2019.5;-474.75
-1;101000;RAINFOREST_RESIN;9998;6;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;101100;RAINFOREST_RESIN;9998;4;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;101100;KELP;2019;5;2018;21;;;2022;22;;;;;2020.5;-439.4453125
-1;101200;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;101200;KELP;2019;25;;;;;2022;26;;;;;2020.5;-427.9609375
-1;101300;KELP;2019;27;;;;;2022;27;;;;;2020.5;-416.046875
-1;101300;RAINFOREST_RESIN;9996;1;9995;26;;;9998;2;10004;1;10005;26;9997.0;-246.0
-1;101400;KELP;2019;22;;;;;2021;5;2022;22;;;2020.0;-430.4375
-1;101400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;101500;RAINFOREST_RESIN;10000;3;9996;2;9995;20;10004;2;10005;20;;;10002.0;-246.0
-1;101500;KELP;2020;5;2018;22;;;2022;22;;;;;2021.0;-442.953125
-1;101600;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;101600;KELP;2019;21;;;;;2022;27;;;;;2020.5;-434.453125
-1;101700;KELP;2018;27;;;;;2022;27;;;;;2020.0;-457.859375
-1;101700;RAINFOREST_RESIN;9998;1;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;101800;KELP;2018;26;;;;;2021;2;2022;24;;;2019.5;-457.8359375
-1;101800;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;101900;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;101900;KELP;2018;23;;;;;2020;6;2022;23;;;2019.0;-444.96875
-1;102000;RAINFOREST_RESIN;10002;1;9996;1;9995;29;10004;1;10005;29;;;10003.0;-246.0
-1;102000;KELP;2018;30;;;;;2022;30;;;;;2020.0;-442.6015625
-1;102100;KELP;2019;24;;;;;2022;24;;;;;2020.5;-434.90625
-1;102100;RAINFOREST_RESIN;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;102200;KELP;2019;30;;;;;2021;7;2022;30;;;2020.0;-429.2109375
-1;102200;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;102300;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;102300;KELP;2020;4;2019;1;2018;24;2022;25;;;;;2021.0;-439.234375
-1;102400;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;102400;KELP;2019;23;;;;;2022;23;;;;;2020.5;-436.5390625
-1;102500;KELP;2019;29;;;;;2022;29;;;;;2020.5;-432.2578125
-1;102500;RAINFOREST_RESIN;9996;2;9995;27;;;10002;9;10004;2;10005;27;9999.0;-246.0
-1;102600;KELP;2018;25;;;;;2021;25;;;;;2019.5;-463.8359375
-1;102600;RAINFOREST_RESIN;9998;9;9996;2;9995;23;10004;2;10005;23;;;10001.0;-246.0
-1;102700;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;102700;KELP;2018;21;;;;;2022;21;;;;;2020.0;-455.5625
-1;102800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;102800;KELP;2018;28;;;;;2022;28;;;;;2020.0;-450.7109375
-1;102900;KELP;2020;4;2019;4;2018;28;2021;1;2022;27;;;2020.5;-456.234375
-1;102900;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;103000;KELP;2018;31;;;;;2020;4;2021;1;2022;30;2019.0;-455.921875
-1;103000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;103100;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;103100;KELP;2020;1;2018;27;;;2022;27;;;;;2021.0;-452.875
-1;103200;RAINFOREST_RESIN;9998;5;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;103200;KELP;2019;6;2018;27;;;2022;27;;;;;2020.5;-453.9296875
-1;103300;KELP;2019;34;;;;;2022;26;;;;;2020.5;-436.625
-1;103300;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;103400;KELP;2018;32;;;;;2019;1;2020;5;2022;32;2018.5;-444.3828125
-1;103400;RAINFOREST_RESIN;9998;9;9996;2;9995;30;10000;4;10004;2;10005;30;9999.0;-246.0
-1;103500;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;103500;KELP;2019;8;2018;28;;;2020;9;2022;28;;;2019.5;-443.4921875
-1;103600;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;103600;KELP;2018;27;;;;;2022;27;;;;;2020.0;-443.375
-1;103700;KELP;2019;1;2018;24;;;2022;25;;;;;2020.5;-438.4296875
-1;103700;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;103800;KELP;2018;26;;;;;2020;7;2022;26;;;2019.0;-439.921875
-1;103800;RAINFOREST_RESIN;9998;5;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;103900;RAINFOREST_RESIN;9996;2;9995;22;;;10002;7;10004;2;10005;22;9999.0;-246.0
-1;103900;KELP;2019;2;2018;22;;;2022;24;;;;;2020.5;-440.9609375
-1;104000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;104000;KELP;2020;1;2018;27;;;2022;27;;;;;2021.0;-448.6484375
-1;104100;KELP;2019;28;;;;;2022;28;;;;;2020.5;-422.4921875
-1;104100;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;104200;KELP;2019;23;;;;;2021;7;2022;24;;;2020.0;-434.5234375
-1;104200;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;104300;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;104300;KELP;2019;21;;;;;2022;22;;;;;2020.5;-416.984375
-1;104400;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;104400;KELP;2019;29;;;;;2022;29;;;;;2020.5;-424.125
-1;104500;KELP;2019;26;;;;;2022;26;;;;;2020.5;-429.9375
-1;104500;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;104600;KELP;2019;28;;;;;2022;27;;;;;2020.5;-422.375
-1;104600;RAINFOREST_RESIN;9996;2;9995;25;;;10002;4;10004;2;10005;25;9999.0;-246.0
-1;104700;RAINFOREST_RESIN;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;-246.0
-1;104700;KELP;2019;32;;;;;2022;31;;;;;2020.5;-425.28125
-1;104800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;104800;KELP;2019;34;;;;;2022;28;;;;;2020.5;-427.6015625
-1;104900;KELP;2019;26;;;;;2021;4;2022;26;;;2020.0;-424.6328125
-1;104900;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;105000;KELP;2018;21;;;;;2022;21;;;;;2020.0;-442.8984375
-1;105000;RAINFOREST_RESIN;9995;21;;;;;10002;2;10005;21;;;9998.5;-246.0
-1;105100;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;105100;KELP;2019;8;2018;32;;;2022;32;;;;;2020.5;-443.8125
-1;105200;RAINFOREST_RESIN;9998;5;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;105200;KELP;2020;7;2018;26;;;2022;26;;;;;2021.0;-452.359375
-1;105300;KELP;2020;1;2018;27;;;2021;27;;;;;2020.5;-463.71875
-1;105300;RAINFOREST_RESIN;9996;2;9995;25;;;10002;9;10004;2;10005;25;9999.0;-246.0
-1;105400;KELP;2018;30;;;;;2021;24;;;;;2019.5;-466.7265625
-1;105400;RAINFOREST_RESIN;10002;1;9995;24;;;10005;24;;;;;10003.5;-246.0
-1;105500;RAINFOREST_RESIN;9998;1;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;105500;KELP;2018;28;;;;;2020;2;2021;28;;;2019.0;-470.9140625
-1;105600;RAINFOREST_RESIN;9998;8;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;105600;KELP;2020;1;2018;30;;;2021;30;;;;;2020.5;-468.8125
-1;105700;KELP;2020;1;2018;1;2017;28;2021;29;;;;;2020.5;-490.2734375
-1;105700;RAINFOREST_RESIN;9998;8;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;105800;KELP;2020;7;2018;28;;;2021;28;;;;;2020.5;-477.1640625
-1;105800;RAINFOREST_RESIN;10002;3;9996;2;9995;26;10004;2;10005;26;;;10003.0;-246.0
-1;105900;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;105900;KELP;2018;24;;;;;2021;24;;;;;2019.5;-465.765625
-1;106000;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;106000;KELP;2018;18;;;;;2021;22;;;;;2019.5;-468.7421875
-1;106100;KELP;2018;24;;;;;2020;7;2021;24;;;2019.0;-470.84375
-1;106100;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;106200;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;106200;KELP;2018;23;;;;;2021;23;;;;;2019.5;-476.28125
-1;106300;KELP;2018;32;;;;;2019;4;2021;28;;;2018.5;-467.71875
-1;106300;RAINFOREST_RESIN;9996;2;9995;26;;;9998;2;10000;4;10004;2;9997.0;-246.0
-1;106400;RAINFOREST_RESIN;9998;10;9996;1;9995;22;10000;6;10004;1;10005;22;9999.0;-246.0
-1;106400;KELP;2018;23;;;;;2019;6;2020;8;2022;23;2018.5;-453.46875
-1;106500;KELP;2018;20;;;;;2020;4;2022;20;;;2019.0;-445.75
-1;106500;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;106600;RAINFOREST_RESIN;9995;30;;;;;9998;4;10005;30;;;9996.5;-246.0
-1;106600;KELP;2018;30;;;;;2020;6;2022;30;;;2019.0;-446.3515625
-1;106700;KELP;2018;30;;;;;2022;30;;;;;2020.0;-446.546875
-1;106700;RAINFOREST_RESIN;9996;2;9995;28;;;9998;1;10004;2;10005;28;9997.0;-246.0
-1;106800;RAINFOREST_RESIN;10002;1;9998;9;9996;1;10004;1;10005;30;;;10003.0;-246.0
-1;106800;KELP;2019;3;2018;30;;;2022;31;;;;;2020.5;-442.359375
-1;106900;KELP;2018;29;;;;;2022;29;;;;;2020.0;-456.703125
-1;106900;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;107000;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;107000;KELP;2018;26;;;;;2019;2;2022;26;;;2018.5;-452.203125
-1;107100;KELP;2018;22;;;;;2022;22;;;;;2020.0;-455.125
-1;107100;RAINFOREST_RESIN;9995;22;;;;;9998;1;10005;22;;;9996.5;-246.0
-1;107200;RAINFOREST_RESIN;9998;1;9996;1;9995;24;10004;1;10005;24;;;10001.0;-246.0
-1;107200;KELP;2018;25;;;;;2020;2;2022;25;;;2019.0;-449.53125
-1;107300;KELP;2018;25;;;;;2021;25;;;;;2019.5;-465.28125
-1;107300;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;107400;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;107400;KELP;2019;6;2018;25;;;2022;25;;;;;2020.5;-455.7578125
-1;107500;KELP;2018;25;;;;;2022;25;;;;;2020.0;-458.390625
-1;107500;RAINFOREST_RESIN;9995;25;;;;;10002;5;10005;25;;;9998.5;-246.0
-1;107600;RAINFOREST_RESIN;9998;3;9996;1;9995;30;10004;1;10005;30;;;10001.0;-246.0
-1;107600;KELP;2018;31;;;;;2020;4;2021;31;;;2019.0;-460.0703125
-1;107700;KELP;2018;24;;;;;2021;24;;;;;2019.5;-486.2109375
-1;107700;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;107800;RAINFOREST_RESIN;9996;2;9995;20;;;10002;8;10004;2;10005;20;9999.0;-246.0
-1;107800;KELP;2018;22;;;;;2021;22;;;;;2019.5;-484.125
-1;107900;KELP;2018;1;2017;28;;;2021;29;;;;;2019.5;-488.4140625
-1;107900;RAINFOREST_RESIN;9996;1;9995;28;;;10002;4;10004;1;10005;28;9999.0;-246.0
-1;108000;RAINFOREST_RESIN;9996;1;9995;26;;;9998;11;10004;1;10005;26;9997.0;-246.0
-1;108000;KELP;2018;1;2017;26;;;2021;27;;;;;2019.5;-487.7734375
-1;108100;KELP;2018;25;;;;;2021;25;;;;;2019.5;-486.3359375
-1;108100;RAINFOREST_RESIN;9995;25;;;;;9998;1;10005;25;;;9996.5;-246.0
-1;108200;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;108200;KELP;2017;31;;;;;2019;1;2021;31;;;2018.0;-496.2265625
-1;108300;KELP;2017;21;;;;;2021;21;;;;;2019.0;-503.6640625
-1;108300;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;108400;RAINFOREST_RESIN;9996;1;9995;25;;;10002;8;10004;1;10005;25;9999.0;-246.0
-1;108400;KELP;2019;1;2017;26;;;2020;26;;;;;2019.5;-529.5078125
-1;108500;KELP;2017;24;;;;;2020;25;;;;;2018.5;-528.6640625
-1;108500;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;108600;RAINFOREST_RESIN;9996;1;9995;26;;;9998;4;10004;1;10005;26;9997.0;-246.0
-1;108600;KELP;2017;27;;;;;2020;27;;;;;2018.5;-512.40625
-1;108700;KELP;2017;23;;;;;2020;23;;;;;2018.5;-512.875
-1;108700;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;108800;KELP;2017;20;;;;;2020;20;;;;;2018.5;-518.5859375
-1;108800;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;108900;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;108900;KELP;2017;31;;;;;2021;31;;;;;2019.0;-502.09375
-1;109000;RAINFOREST_RESIN;9995;20;;;;;10002;2;10005;20;;;9998.5;-246.0
-1;109000;KELP;2018;4;2017;20;;;2021;20;;;;;2019.5;-505.0078125
-1;109100;KELP;2017;27;;;;;2019;5;2021;28;;;2018.0;-500.9140625
-1;109100;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;109200;KELP;2017;27;;;;;2021;27;;;;;2019.0;-501.140625
-1;109200;RAINFOREST_RESIN;9998;2;9996;2;9995;25;10004;2;10005;25;;;10001.0;-246.0
-1;109300;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;109300;KELP;2017;22;;;;;2020;21;;;;;2018.5;-509.078125
-1;109400;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;109400;KELP;2017;21;;;;;2021;21;;;;;2019.0;-498.984375
-1;109500;KELP;2018;33;;;;;2021;30;;;;;2019.5;-475.109375
-1;109500;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;109600;KELP;2018;29;;;;;2021;29;;;;;2019.5;-461.84375
-1;109600;RAINFOREST_RESIN;9996;2;9995;27;;;9998;1;10004;2;10005;27;9997.0;-246.0
-1;109700;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;109700;KELP;2018;26;;;;;2021;27;;;;;2019.5;-465.578125
-1;109800;RAINFOREST_RESIN;10002;1;9996;2;9995;22;10004;2;10005;22;;;10003.0;-246.0
-1;109800;KELP;2018;24;;;;;2021;24;;;;;2019.5;-462.90625
-1;109900;KELP;2018;27;;;;;2021;27;;;;;2019.5;-459.1640625
-1;109900;RAINFOREST_RESIN;10002;1;9995;27;;;10005;27;;;;;10003.5;-246.0
-1;110000;KELP;2018;22;;;;;2021;22;;;;;2019.5;-459.9453125
-1;110000;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;110100;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;110100;KELP;2018;23;;;;;2021;24;;;;;2019.5;-463.1171875
-1;110200;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;110200;KELP;2018;20;;;;;2020;3;2021;20;;;2019.0;-473.3671875
-1;110300;KELP;2018;22;;;;;2021;22;;;;;2019.5;-466.6171875
-1;110300;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;110400;KELP;2018;23;;;;;2021;30;;;;;2019.5;-462.296875
-1;110400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;110500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;110500;KELP;2018;21;;;;;2022;21;;;;;2020.0;-455.4296875
-1;110600;RAINFOREST_RESIN;10002;8;9995;28;;;10005;28;;;;;10003.5;-246.0
-1;110600;KELP;2020;1;2018;28;;;2022;28;;;;;2021.0;-457.921875
-1;110700;KELP;2020;3;2018;26;;;2021;2;2022;24;;;2020.5;-458.2734375
-1;110700;RAINFOREST_RESIN;9998;3;9996;2;9995;24;10004;2;10005;24;;;10001.0;-246.0
-1;110800;KELP;2018;30;;;;;2022;30;;;;;2020.0;-448.09375
-1;110800;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;110900;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;110900;KELP;2018;24;;;;;2022;24;;;;;2020.0;-440.0859375
-1;111000;RAINFOREST_RESIN;9996;2;9995;22;;;9998;1;10004;2;10005;22;9997.0;-246.0
-1;111000;KELP;2021;1;2019;24;;;2022;24;;;;;2021.5;-428.2109375
-1;111100;KELP;2019;27;;;;;2022;27;;;;;2020.5;-428.6796875
-1;111100;RAINFOREST_RESIN;9996;2;9995;25;;;9998;4;10004;2;10005;25;9997.0;-246.0
-1;111200;KELP;2019;22;;;;;2021;1;2022;22;;;2020.0;-432.7734375
-1;111200;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;111300;RAINFOREST_RESIN;9996;1;9995;29;;;9998;3;10004;1;10005;29;9997.0;-246.0
-1;111300;KELP;2019;31;;;;;2022;30;;;;;2020.5;-425.5078125
-1;111400;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;111400;KELP;2019;24;;;;;2022;24;;;;;2020.5;-428.5625
-1;111500;KELP;2021;1;2019;28;;;2022;22;;;;;2021.5;-429.4765625
-1;111500;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;111600;KELP;2019;39;;;;;2022;32;;;;;2020.5;-432.015625
-1;111600;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;111700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;111700;KELP;2019;24;;;;;2022;22;;;;;2020.5;-425.9609375
-1;111800;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;111800;KELP;2019;28;;;;;2022;22;;;;;2020.5;-424.2578125
-1;111900;KELP;2019;22;;;;;2022;22;;;;;2020.5;-433.953125
-1;111900;RAINFOREST_RESIN;9996;2;9995;20;;;10002;5;10004;2;10005;20;9999.0;-246.0
-1;112000;KELP;2018;26;;;;;2020;4;2021;26;;;2019.0;-464.484375
-1;112000;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;112100;RAINFOREST_RESIN;9996;2;9995;20;;;9998;5;10002;7;10004;2;9997.0;-246.0
-1;112100;KELP;2018;22;;;;;2022;22;;;;;2020.0;-449.8359375
-1;112200;RAINFOREST_RESIN;9998;1;9996;2;9995;26;10004;2;10005;26;;;10001.0;-246.0
-1;112200;KELP;2020;1;2018;28;;;2022;28;;;;;2021.0;-452.9375
-1;112300;KELP;2018;31;;;;;2021;26;;;;;2019.5;-461.15625
-1;112300;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;112400;KELP;2018;29;;;;;2021;29;;;;;2019.5;-461.84375
-1;112400;RAINFOREST_RESIN;9998;9;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;112500;RAINFOREST_RESIN;9996;2;9995;21;;;10002;3;10004;2;10005;21;9999.0;-246.0
-1;112500;KELP;2018;23;;;;;2021;23;;;;;2019.5;-460.3359375
-1;112600;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;112600;KELP;2018;30;;;;;2021;30;;;;;2019.5;-461.5078125
-1;112700;KELP;2018;29;;;;;2021;29;;;;;2019.5;-472.5703125
-1;112700;RAINFOREST_RESIN;9996;1;9995;28;;;10002;7;10004;1;10005;28;9999.0;-246.0
-1;112800;KELP;2018;29;;;;;2021;22;;;;;2019.5;-472.671875
-1;112800;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;112900;RAINFOREST_RESIN;9998;1;9996;2;9995;20;10004;2;10005;20;;;10001.0;-246.0
-1;112900;KELP;2018;22;;;;;2021;22;;;;;2019.5;-473.6328125
-1;113000;RAINFOREST_RESIN;10002;4;9996;1;9995;26;10004;1;10005;26;;;10003.0;-246.0
-1;113000;KELP;2018;27;;;;;2020;4;2021;27;;;2019.0;-476.1640625
-1;113100;KELP;2018;21;;;;;2021;21;;;;;2019.5;-462.578125
-1;113100;RAINFOREST_RESIN;9998;3;9996;1;9995;20;10004;1;10005;20;;;10001.0;-246.0
-1;113200;KELP;2018;38;;;;;2021;31;;;;;2019.5;-482.578125
-1;113200;RAINFOREST_RESIN;9996;2;9995;29;;;10002;10;10004;2;10005;29;9999.0;-246.0
-1;113300;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;113300;KELP;2018;17;;;;;2021;22;;;;;2019.5;-479.2109375
-1;113400;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;113400;KELP;2018;21;;;;;2021;21;;;;;2019.5;-480.5625
-1;113500;KELP;2018;21;;;;;2021;21;;;;;2019.5;-478.015625
-1;113500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;113600;KELP;2018;25;;;;;2021;25;;;;;2019.5;-484.265625
-1;113600;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;113700;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;113700;KELP;2018;6;2017;21;;;2021;21;;;;;2019.5;-493.9921875
-1;113800;RAINFOREST_RESIN;10002;1;9996;2;9995;22;10004;2;10005;22;;;10003.0;-246.0
-1;113800;KELP;2017;24;;;;;2021;24;;;;;2019.0;-494.9140625
-1;113900;KELP;2017;29;;;;;2021;29;;;;;2019.0;-493.859375
-1;113900;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;114000;KELP;2017;30;;;;;2020;2;2021;28;;;2018.5;-507.6640625
-1;114000;RAINFOREST_RESIN;9996;2;9995;28;;;9998;11;10004;2;10005;28;9997.0;-246.0
-1;114100;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;114100;KELP;2020;1;2018;3;2017;32;2021;32;;;;;2020.5;-495.96875
-1;114200;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;114200;KELP;2017;25;;;;;2021;25;;;;;2019.0;-492.484375
-1;114300;KELP;2018;30;;;;;2021;29;;;;;2019.5;-473.125
-1;114300;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;114400;KELP;2018;28;;;;;2021;28;;;;;2019.5;-463.1640625
-1;114400;RAINFOREST_RESIN;9995;28;;;;;10002;2;10005;28;;;9998.5;-246.0
-1;114500;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;114500;KELP;2018;31;;;;;2021;30;;;;;2019.5;-471.3046875
-1;114600;RAINFOREST_RESIN;10002;1;9996;1;9995;25;10004;1;10005;25;;;10003.0;-246.0
-1;114600;KELP;2018;26;;;;;2021;26;;;;;2019.5;-470.78125
-1;114700;KELP;2018;34;;;;;2021;28;;;;;2019.5;-465.09375
-1;114700;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;114800;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;114800;KELP;2018;26;;;;;2021;26;;;;;2019.5;-461.1015625
-1;114900;KELP;2018;21;;;;;2021;21;;;;;2019.5;-462.96875
-1;114900;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;115000;RAINFOREST_RESIN;9998;8;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;115000;KELP;2018;32;;;;;2021;26;;;;;2019.5;-459.6875
-1;115100;KELP;2020;1;2019;8;2018;25;2022;25;;;;;2021.0;-453.015625
-1;115100;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;115200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;115200;KELP;2018;21;;;;;2022;21;;;;;2020.0;-455.8671875
-1;115300;KELP;2019;5;2018;28;;;2022;28;;;;;2020.5;-457.390625
-1;115300;RAINFOREST_RESIN;9995;28;;;;;9998;1;10002;10;10005;28;9996.5;-246.0
-1;115400;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;115400;KELP;2018;24;;;;;2022;24;;;;;2020.0;-453.2734375
-1;115500;KELP;2018;26;;;;;2022;26;;;;;2020.0;-450.71875
-1;115500;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;115600;RAINFOREST_RESIN;9998;8;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;115600;KELP;2018;33;;;;;2021;29;;;;;2019.5;-459.4765625
-1;115700;KELP;2020;1;2018;25;;;2021;25;;;;;2020.5;-461.0390625
-1;115700;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;115800;RAINFOREST_RESIN;9998;9;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;115800;KELP;2018;26;;;;;2021;24;;;;;2019.5;-458.8984375
-1;115900;KELP;2018;30;;;;;2021;30;;;;;2019.5;-459.9140625
-1;115900;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;116000;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;116000;KELP;2018;24;;;;;2021;25;;;;;2019.5;-462.578125
-1;116100;KELP;2018;24;;;;;2021;24;;;;;2019.5;-477.7421875
-1;116100;RAINFOREST_RESIN;9996;2;9995;22;;;10002;5;10004;2;10005;22;9999.0;-246.0
-1;116200;RAINFOREST_RESIN;9995;27;;;;;10002;7;10005;27;;;9998.5;-246.0
-1;116200;KELP;2018;27;;;;;2020;3;2021;27;;;2019.0;-463.28125
-1;116300;KELP;2017;29;;;;;2021;29;;;;;2019.0;-494.8359375
-1;116300;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;116400;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;116400;KELP;2017;24;;;;;2020;24;;;;;2018.5;-525.1796875
-1;116500;KELP;2018;5;2017;29;;;2021;29;;;;;2019.5;-501.78125
-1;116500;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;116600;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;116600;KELP;2017;23;;;;;2021;23;;;;;2019.0;-502.7890625
-1;116700;KELP;2017;26;;;;;2021;26;;;;;2019.0;-498.203125
-1;116700;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;-246.0
-1;116800;RAINFOREST_RESIN;10002;3;9995;30;;;10005;30;;;;;10003.5;-246.0
-1;116800;KELP;2018;6;2017;30;;;2021;30;;;;;2019.5;-504.390625
-1;116900;KELP;2017;27;;;;;2019;2;2020;1;2021;26;2018.0;-504.875
-1;116900;RAINFOREST_RESIN;9996;1;9995;26;;;10002;9;10004;1;10005;26;9999.0;-246.0
-1;117000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;117000;KELP;2017;31;;;;;2020;1;2021;30;;;2018.5;-503.7421875
-1;117100;KELP;2017;26;;;;;2021;26;;;;;2019.0;-500.5234375
-1;117100;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;117200;RAINFOREST_RESIN;9996;2;9995;20;;;10002;9;10004;2;10005;20;9999.0;-246.0
-1;117200;KELP;2017;22;;;;;2021;22;;;;;2019.0;-497.359375
-1;117300;KELP;2017;22;;;;;2019;2;2021;22;;;2018.0;-500.5703125
-1;117300;RAINFOREST_RESIN;9998;5;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;117400;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;117400;KELP;2017;27;;;;;2021;27;;;;;2019.0;-491.1640625
-1;117500;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;117500;KELP;2018;24;;;;;2020;1;2021;26;;;2019.0;-485.984375
-1;117600;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;117600;KELP;2018;31;;;;;2021;31;;;;;2019.5;-484.1328125
-1;117700;KELP;2018;1;2017;29;;;2021;30;;;;;2019.5;-492.265625
-1;117700;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;117800;KELP;2018;3;2017;31;;;2021;31;;;;;2019.5;-502.984375
-1;117800;RAINFOREST_RESIN;9996;2;9995;29;;;10002;7;10004;2;10005;29;9999.0;-246.0
-1;117900;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;117900;KELP;2017;30;;;;;2018;4;2020;24;;;2017.5;-509.0859375
-1;118000;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;118000;KELP;2017;28;;;;;2019;5;2020;1;2021;27;2018.0;-506.1875
-1;118100;KELP;2017;25;;;;;2021;25;;;;;2019.0;-494.6953125
-1;118100;RAINFOREST_RESIN;9996;2;9995;23;;;10002;6;10004;2;10005;23;9999.0;-246.0
-1;118200;KELP;2017;20;;;;;2021;21;;;;;2019.0;-501.75
-1;118200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;118300;RAINFOREST_RESIN;9996;1;9995;26;;;10002;9;10004;1;10005;26;9999.0;-246.0
-1;118300;KELP;2017;26;;;;;2021;27;;;;;2019.0;-491.4296875
-1;118400;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;118400;KELP;2018;30;;;;;2021;30;;;;;2019.5;-484.6875
-1;118500;KELP;2017;26;;;;;2018;1;2021;26;;;2017.5;-494.4140625
-1;118500;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;118600;KELP;2018;7;2017;31;;;2020;2;2021;29;;;2019.0;-506.15625
-1;118600;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;118700;RAINFOREST_RESIN;9996;1;9995;26;;;10002;8;10004;1;10005;26;9999.0;-246.0
-1;118700;KELP;2017;17;;;;;2020;27;;;;;2018.5;-528.1015625
-1;118800;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;118800;KELP;2017;31;;;;;2020;31;;;;;2018.5;-518.0078125
-1;118900;KELP;2017;30;;;;;2020;25;;;;;2018.5;-516.984375
-1;118900;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;119000;KELP;2017;21;;;;;2020;21;;;;;2018.5;-508.9765625
-1;119000;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;119100;RAINFOREST_RESIN;9996;2;9995;24;;;10002;8;10004;2;10005;24;9999.0;-246.0
-1;119100;KELP;2019;2;2017;26;;;2020;26;;;;;2019.5;-513.0078125
-1;119200;RAINFOREST_RESIN;9998;2;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;119200;KELP;2017;26;;;;;2020;26;;;;;2018.5;-515.203125
-1;119300;KELP;2017;25;;;;;2020;25;;;;;2018.5;-523.7421875
-1;119300;RAINFOREST_RESIN;9995;25;;;;;9998;1;10002;1;10005;25;9996.5;-246.0
-1;119400;KELP;2017;31;;;;;2020;24;;;;;2018.5;-520.53125
-1;119400;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;119500;RAINFOREST_RESIN;9996;1;9995;25;;;10002;2;10004;1;10005;25;9999.0;-246.0
-1;119500;KELP;2017;26;;;;;2020;26;;;;;2018.5;-518.9609375
-1;119600;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;119600;KELP;2017;28;;;;;2020;29;;;;;2018.5;-528.2109375
-1;119700;KELP;2017;34;;;;;2020;26;;;;;2018.5;-525.1484375
-1;119700;RAINFOREST_RESIN;9998;2;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;119800;KELP;2018;4;2017;26;;;2019;7;2020;26;;;2018.5;-528.234375
-1;119800;RAINFOREST_RESIN;10000;4;9998;8;9995;26;10005;26;;;;;10002.5;-246.0
-1;119900;RAINFOREST_RESIN;10002;1;9996;2;9995;26;10004;2;10005;26;;;10003.0;-246.0
-1;119900;KELP;2017;1;2016;26;;;2019;6;2020;28;;;2018.0;-537.859375
-1;120000;RAINFOREST_RESIN;10002;1;9996;2;9995;23;10004;2;10005;23;;;10003.0;-246.0
-1;120000;KELP;2015;25;;;;;2019;25;;;;;2017.0;-599.9140625
-1;120100;KELP;2015;22;;;;;2019;22;;;;;2017.0;-607.1953125
-1;120100;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;120200;KELP;2014;24;;;;;2018;24;;;;;2016.0;-647.734375
-1;120200;RAINFOREST_RESIN;10002;1;9996;1;9995;23;10004;1;10005;23;;;10003.0;-246.0
-1;120300;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;120300;KELP;2015;6;2014;31;;;2018;31;;;;;2016.5;-645.90625
-1;120400;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;120400;KELP;2015;6;2014;25;;;2018;25;;;;;2016.5;-652.3203125
-1;120500;KELP;2014;23;;;;;2015;3;2018;23;;;2014.5;-652.0234375
-1;120500;RAINFOREST_RESIN;9996;2;9995;21;;;10002;4;10004;2;10005;21;9999.0;-246.0
-1;120600;KELP;2015;4;2014;22;;;2018;22;;;;;2016.5;-650.90625
-1;120600;RAINFOREST_RESIN;9998;1;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;120700;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;120700;KELP;2014;28;;;;;2018;28;;;;;2016.0;-641.5390625
-1;120800;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;120800;KELP;2014;23;;;;;2018;23;;;;;2016.0;-649.8203125
-1;120900;KELP;2014;23;;;;;2016;4;2017;23;;;2015.0;-660.2890625
-1;120900;RAINFOREST_RESIN;9998;4;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;121000;KELP;2013;24;;;;;2017;24;;;;;2015.0;-700.578125
-1;121000;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;121100;RAINFOREST_RESIN;9998;5;9996;2;9995;25;10004;2;10005;25;;;10001.0;-246.0
-1;121100;KELP;2013;26;;;;;2016;27;;;;;2014.5;-711.234375
-1;121200;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;121200;KELP;2013;29;;;;;2016;28;;;;;2014.5;-737.5625
-1;121300;KELP;2013;30;;;;;2016;22;;;;;2014.5;-720.8828125
-1;121300;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;121400;KELP;2013;27;;;;;2015;4;2016;27;;;2014.0;-734.7890625
-1;121400;RAINFOREST_RESIN;10002;5;9995;27;;;10005;27;;;;;10003.5;-246.0
-1;121500;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;121500;KELP;2013;29;;;;;2015;4;2016;29;;;2014.0;-731.625
-1;121600;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;121600;KELP;2013;22;;;;;2015;2;2016;22;;;2014.0;-722.5859375
-1;121700;KELP;2013;32;;;;;2016;27;;;;;2014.5;-733.65625
-1;121700;RAINFOREST_RESIN;9996;2;9995;25;;;10002;1;10004;2;10005;25;9999.0;-246.0
-1;121800;KELP;2012;31;;;;;2015;1;2016;30;;;2013.5;-753.734375
-1;121800;RAINFOREST_RESIN;9996;1;9995;30;;;10002;3;10004;1;10005;30;9999.0;-246.0
-1;121900;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;121900;KELP;2015;1;2012;28;;;2016;28;;;;;2015.5;-744.921875
-1;122000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;122000;KELP;2012;27;;;;;2014;1;2015;27;;;2013.0;-766.9765625
-1;122100;KELP;2012;25;;;;;2015;25;;;;;2013.5;-761.1484375
-1;122100;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;122200;KELP;2012;27;;;;;2016;27;;;;;2014.0;-751.1875
-1;122200;RAINFOREST_RESIN;9998;10;9996;2;9995;25;10004;2;10005;25;;;10001.0;-246.0
-1;122300;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;122300;KELP;2013;3;2012;23;;;2016;23;;;;;2014.5;-754.765625
-1;122400;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;122400;KELP;2012;26;;;;;2016;26;;;;;2014.0;-749.421875
-1;122500;KELP;2011;27;;;;;2014;2;2015;25;;;2012.5;-805.78125
-1;122500;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;122600;KELP;2013;1;2011;29;;;2014;29;;;;;2013.5;-832.2421875
-1;122600;RAINFOREST_RESIN;9998;5;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;122700;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;122700;KELP;2010;25;;;;;2014;25;;;;;2012.0;-843.7265625
-1;122800;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;122800;KELP;2011;29;;;;;2013;6;2014;29;;;2012.0;-833.25
-1;122900;KELP;2013;1;2011;2;2010;30;2014;32;;;;;2013.5;-840.7890625
-1;122900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;123000;KELP;2010;26;;;;;2014;26;;;;;2012.0;-838.78125
-1;123000;RAINFOREST_RESIN;9998;1;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;123100;RAINFOREST_RESIN;9996;1;9995;25;;;10002;7;10004;1;10005;25;9999.0;-246.0
-1;123100;KELP;2011;34;;;;;2014;26;;;;;2012.5;-810.9140625
-1;123200;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;123200;KELP;2012;19;;;;;2014;1;2015;23;;;2013.0;-784.8828125
-1;123300;KELP;2010;29;;;;;2014;29;;;;;2012.0;-842.984375
-1;123300;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;123400;KELP;2011;6;2010;22;;;2013;1;2014;21;;;2012.0;-855.453125
-1;123400;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;123500;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;123500;KELP;2009;31;;;;;2013;31;;;;;2011.0;-894.1640625
-1;123600;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;123600;KELP;2010;21;;;;;2013;21;;;;;2011.5;-879.5703125
-1;123700;KELP;2010;23;;;;;2013;23;;;;;2011.5;-863.8125
-1;123700;RAINFOREST_RESIN;10002;6;9996;2;9995;21;10004;2;10005;21;;;10003.0;-246.0
-1;123800;RAINFOREST_RESIN;9996;1;9995;23;;;9998;1;10002;3;10004;1;9997.0;-246.0
-1;123800;KELP;2013;1;2010;24;;;2014;24;;;;;2013.5;-845.6953125
-1;123900;KELP;2011;26;;;;;2014;26;;;;;2012.5;-833.8125
-1;123900;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;124000;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;124000;KELP;2013;1;2011;20;;;2014;20;;;;;2013.5;-811.921875
-1;124100;KELP;2011;27;;;;;2012;3;2015;27;;;2011.5;-801.21875
-1;124100;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;124200;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;124200;KELP;2012;4;2011;24;;;2015;24;;;;;2013.5;-793.5625
-1;124300;KELP;2012;3;2011;20;;;2015;20;;;;;2013.5;-800.578125
-1;124300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;124400;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;124400;KELP;2011;27;;;;;2015;27;;;;;2013.0;-793.0625
-1;124500;KELP;2011;18;;;;;2013;4;2014;21;;;2012.0;-820.390625
-1;124500;RAINFOREST_RESIN;9996;1;9995;20;;;9998;5;10004;1;10005;20;9997.0;-246.0
-1;124600;RAINFOREST_RESIN;9995;21;;;;;10002;1;10005;21;;;9998.5;-246.0
-1;124600;KELP;2013;1;2011;21;;;2014;21;;;;;2013.5;-819.328125
-1;124700;KELP;2011;22;;;;;2013;5;2014;22;;;2012.0;-821.8203125
-1;124700;RAINFOREST_RESIN;9996;2;9995;20;;;9998;1;10004;2;10005;20;9997.0;-246.0
-1;124800;RAINFOREST_RESIN;9998;9;9996;2;9995;23;10004;2;10005;23;;;10001.0;-246.0
-1;124800;KELP;2011;25;;;;;2014;2;2015;23;;;2012.5;-806.15625
-1;124900;KELP;2011;31;;;;;2014;1;2015;30;;;2012.5;-804.3125
-1;124900;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;125000;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;125000;KELP;2012;1;2011;25;;;2015;26;;;;;2013.5;-790.578125
-1;125100;KELP;2012;27;;;;;2015;27;;;;;2013.5;-782.3515625
-1;125100;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;125200;RAINFOREST_RESIN;10002;4;9996;1;9995;26;10004;1;10005;26;;;10003.0;-246.0
-1;125200;KELP;2012;27;;;;;2015;27;;;;;2013.5;-760.7265625
-1;125300;KELP;2012;28;;;;;2015;28;;;;;2013.5;-767.328125
-1;125300;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;125400;RAINFOREST_RESIN;9998;8;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;125400;KELP;2012;22;;;;;2016;22;;;;;2014.0;-750.484375
-1;125500;KELP;2012;24;;;;;2016;24;;;;;2014.0;-753.3125
-1;125500;RAINFOREST_RESIN;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;125600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;125600;KELP;2013;9;2012;28;;;2016;30;;;;;2014.5;-739.2265625
-1;125700;KELP;2013;2;2012;26;;;2016;28;;;;;2014.5;-738.234375
-1;125700;RAINFOREST_RESIN;9996;2;9995;26;;;9998;2;10004;2;10005;26;9997.0;-246.0
-1;125800;RAINFOREST_RESIN;9996;1;9995;27;;;9998;1;10004;1;10005;27;9997.0;-246.0
-1;125800;KELP;2013;28;;;;;2016;28;;;;;2014.5;-731.4296875
-1;125900;KELP;2013;31;;;;;2014;6;2016;30;;;2013.5;-721.859375
-1;125900;RAINFOREST_RESIN;9996;2;9995;28;;;10000;6;10004;2;10005;28;9998.0;-246.0
-1;126000;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;126000;KELP;2013;22;;;;;2016;1;2017;21;;;2014.5;-705.9921875
-1;126100;KELP;2013;36;;;;;2016;29;;;;;2014.5;-719.75
-1;126100;RAINFOREST_RESIN;10002;1;9998;10;9996;2;10004;2;10005;27;;;10003.0;-246.0
-1;126200;RAINFOREST_RESIN;10002;7;9995;24;;;10005;24;;;;;10003.5;-246.0
-1;126200;KELP;2013;24;;;;;2017;24;;;;;2015.0;-706.3359375
-1;126300;KELP;2013;29;;;;;2016;29;;;;;2014.5;-720.6953125
-1;126300;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;126400;KELP;2013;33;;;;;2016;27;;;;;2014.5;-724.0546875
-1;126400;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;126500;RAINFOREST_RESIN;9998;7;9996;2;9995;25;10004;2;10005;25;;;10001.0;-246.0
-1;126500;KELP;2013;27;;;;;2017;27;;;;;2015.0;-701.0859375
-1;126600;RAINFOREST_RESIN;9996;1;9995;21;;;10002;5;10004;1;10005;21;9999.0;-246.0
-1;126600;KELP;2013;22;;;;;2017;22;;;;;2015.0;-698.125
-1;126700;KELP;2014;23;;;;;2017;23;;;;;2015.5;-681.96875
-1;126700;RAINFOREST_RESIN;10002;2;9998;4;9995;23;10005;23;;;;;10003.5;-246.0
-1;126800;KELP;2014;26;;;;;2016;7;2017;26;;;2015.0;-672.9609375
-1;126800;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;126900;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;126900;KELP;2014;25;;;;;2016;8;2017;1;2018;24;2015.0;-653.6328125
-1;127000;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;127000;KELP;2014;26;;;;;2018;26;;;;;2016.0;-643.375
-1;127100;KELP;2014;27;;;;;2017;27;;;;;2015.5;-667.5546875
-1;127100;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;127200;KELP;2014;26;;;;;2017;26;;;;;2015.5;-661.75
-1;127200;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;127300;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;127300;KELP;2014;28;;;;;2017;28;;;;;2015.5;-671.203125
-1;127400;RAINFOREST_RESIN;9998;5;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;127400;KELP;2014;27;;;;;2016;7;2018;27;;;2015.0;-639.09375
-1;127500;KELP;2014;30;;;;;2016;6;2017;31;;;2015.0;-662.7421875
-1;127500;RAINFOREST_RESIN;9996;2;9995;29;;;9998;3;10004;2;10005;29;9997.0;-246.0
-1;127600;KELP;2014;27;;;;;2017;27;;;;;2015.5;-664.8203125
-1;127600;RAINFOREST_RESIN;9995;27;;;;;10002;6;10005;27;;;9998.5;-246.0
-1;127700;RAINFOREST_RESIN;9998;8;9995;20;;;10005;20;;;;;10001.5;-246.0
-1;127700;KELP;2014;26;;;;;2017;20;;;;;2015.5;-680.7265625
-1;127800;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;127800;KELP;2014;28;;;;;2017;28;;;;;2015.5;-686.125
-1;127900;KELP;2013;29;;;;;2016;2;2017;27;;;2014.5;-704.5078125
-1;127900;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;128000;KELP;2016;1;2014;22;;;2017;22;;;;;2016.5;-685.0234375
-1;128000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;128100;RAINFOREST_RESIN;9998;5;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;128100;KELP;2014;30;;;;;2017;30;;;;;2015.5;-678.015625
-1;128200;RAINFOREST_RESIN;10002;1;9996;1;9995;21;10004;1;10005;21;;;10003.0;-246.0
-1;128200;KELP;2013;22;;;;;2017;22;;;;;2015.0;-693.34375
-1;128300;KELP;2015;1;2013;25;;;2017;25;;;;;2016.0;-707.53125
-1;128300;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;128400;KELP;2013;23;;;;;2014;2;2015;8;2016;23;2013.5;-716.125
-1;128400;RAINFOREST_RESIN;9996;1;9995;22;;;10002;5;10004;1;10005;22;9999.0;-246.0
-1;128500;RAINFOREST_RESIN;9998;3;9996;1;9995;22;10004;1;10005;22;;;10001.0;-246.0
-1;128500;KELP;2013;23;;;;;2016;23;;;;;2014.5;-718.765625
-1;128600;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;128600;KELP;2013;22;;;;;2016;22;;;;;2014.5;-733.4296875
-1;128700;KELP;2013;26;;;;;2016;26;;;;;2014.5;-731.8984375
-1;128700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;128800;KELP;2013;21;;;;;2016;21;;;;;2014.5;-719.1875
-1;128800;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;128900;RAINFOREST_RESIN;10002;2;9995;25;;;10005;25;;;;;10003.5;-246.0
-1;128900;KELP;2015;1;2014;4;2013;25;2016;25;;;;;2015.5;-732.28125
-1;129000;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;129000;KELP;2013;23;;;;;2016;23;;;;;2014.5;-725.640625
-1;129100;KELP;2013;27;;;;;2015;8;2016;27;;;2014.0;-711.5625
-1;129100;RAINFOREST_RESIN;9996;1;9995;26;;;10002;5;10004;1;10005;26;9999.0;-246.0
-1;129200;KELP;2013;26;;;;;2015;7;2016;26;;;2014.0;-724.984375
-1;129200;RAINFOREST_RESIN;9998;10;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;129300;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;129300;KELP;2013;28;;;;;2016;23;;;;;2014.5;-721.3359375
-1;129400;RAINFOREST_RESIN;9996;1;9995;24;;;10002;6;10004;1;10005;24;9999.0;-246.0
-1;129400;KELP;2013;25;;;;;2017;25;;;;;2015.0;-695.046875
-1;129500;KELP;2013;20;;;;;2015;6;2017;20;;;2014.0;-689.3515625
-1;129500;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;129600;KELP;2014;30;;;;;2017;31;;;;;2015.5;-684.4375
-1;129600;RAINFOREST_RESIN;9998;3;9996;2;9995;29;10004;2;10005;29;;;10001.0;-246.0
-1;129700;RAINFOREST_RESIN;9996;2;9995;21;;;10000;3;10004;2;10005;21;9998.0;-246.0
-1;129700;KELP;2014;23;;;;;2015;3;2017;23;;;2014.5;-685.265625
-1;129800;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;129800;KELP;2014;30;;;;;2017;28;;;;;2015.5;-683.78125
-1;129900;KELP;2014;30;;;;;2017;30;;;;;2015.5;-685.953125
-1;129900;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;130000;KELP;2014;29;;;;;2017;29;;;;;2015.5;-675.859375
-1;130000;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;130100;RAINFOREST_RESIN;9996;2;9995;20;;;9998;1;10004;2;10005;20;9997.0;-246.0
-1;130100;KELP;2016;1;2014;2;2013;20;2017;22;;;;;2016.5;-690.25
-1;130200;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;130200;KELP;2013;23;;;;;2014;3;2015;3;2016;2;2013.5;-705.5078125
-1;130300;KELP;2013;26;;;;;2017;26;;;;;2015.0;-696.0390625
-1;130300;RAINFOREST_RESIN;10002;1;9996;1;9995;25;10004;1;10005;25;;;10003.0;-246.0
-1;130400;KELP;2013;28;;;;;2014;1;2017;28;;;2013.5;-695.5234375
-1;130400;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;130500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;130500;KELP;2013;21;;;;;2015;8;2017;21;;;2014.0;-699.1796875
-1;130600;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;130600;KELP;2013;21;;;;;2015;2;2017;21;;;2014.0;-694.46875
-1;130700;KELP;2016;1;2014;6;2013;22;2017;22;;;;;2016.5;-695.71875
-1;130700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;130800;KELP;2013;23;;;;;2017;23;;;;;2015.0;-691.7421875
-1;130800;RAINFOREST_RESIN;9998;2;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;130900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;130900;KELP;2013;30;;;;;2014;5;2017;32;;;2013.5;-687.9140625
-1;131000;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;131000;KELP;2013;26;;;;;2015;6;2017;26;;;2014.0;-689.5625
-1;131100;KELP;2013;22;;;;;2017;22;;;;;2015.0;-694.7265625
-1;131100;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;131200;KELP;2013;30;;;;;2017;30;;;;;2015.0;-700.140625
-1;131200;RAINFOREST_RESIN;9998;6;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;131300;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;131300;KELP;2013;21;;;;;2016;21;;;;;2014.5;-730.7578125
-1;131400;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;-246.0
-1;131400;KELP;2015;7;2013;21;;;2016;21;;;;;2015.5;-730.015625
-1;131500;KELP;2013;26;;;;;2016;26;;;;;2014.5;-733.296875
-1;131500;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;131600;KELP;2015;1;2013;30;;;2016;30;;;;;2015.5;-732.140625
-1;131600;RAINFOREST_RESIN;10002;1;9995;30;;;10005;30;;;;;10003.5;-246.0
-1;131700;RAINFOREST_RESIN;9998;10;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;131700;KELP;2013;30;;;;;2015;8;2016;1;2017;29;2014.0;-703.6796875
-1;131800;RAINFOREST_RESIN;9996;1;9995;27;;;10002;7;10004;1;10005;27;9999.0;-246.0
-1;131800;KELP;2014;23;;;;;2017;28;;;;;2015.5;-687.0078125
-1;131900;KELP;2014;28;;;;;2017;27;;;;;2015.5;-680.875
-1;131900;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;132000;KELP;2014;34;;;;;2017;28;;;;;2015.5;-678.4609375
-1;132000;RAINFOREST_RESIN;9998;2;9996;2;9995;26;10004;2;10005;26;;;10001.0;-246.0
-1;132100;RAINFOREST_RESIN;9998;3;9995;24;;;10005;24;;;;;10001.5;-246.0
-1;132100;KELP;2013;24;;;;;2016;24;;;;;2014.5;-714.6328125
-1;132200;RAINFOREST_RESIN;9996;2;9995;27;;;10002;1;10004;2;10005;27;9999.0;-246.0
-1;132200;KELP;2013;29;;;;;2016;29;;;;;2014.5;-718.2265625
-1;132300;KELP;2013;24;;;;;2016;24;;;;;2014.5;-726.9296875
-1;132300;RAINFOREST_RESIN;10002;4;9995;24;;;10005;24;;;;;10003.5;-246.0
-1;132400;KELP;2013;23;;;;;2016;23;;;;;2014.5;-726.984375
-1;132400;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;132500;RAINFOREST_RESIN;9998;8;9996;2;9995;28;10004;2;10005;28;;;10001.0;-246.0
-1;132500;KELP;2013;30;;;;;2015;5;2016;30;;;2014.0;-736.7421875
-1;132600;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;132600;KELP;2013;29;;;;;2016;29;;;;;2014.5;-727.421875
-1;132700;KELP;2013;23;;;;;2015;2;2016;23;;;2014.0;-736.3203125
-1;132700;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;132800;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;132800;KELP;2013;25;;;;;2016;25;;;;;2014.5;-737.359375
-1;132900;KELP;2013;32;;;;;2016;32;;;;;2014.5;-731.3125
-1;132900;RAINFOREST_RESIN;9996;2;9995;30;;;9998;1;10002;1;10004;2;9997.0;-246.0
-1;133000;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;133000;KELP;2013;23;;;;;2016;23;;;;;2014.5;-730.796875
-1;133100;KELP;2013;1;2012;23;;;2016;24;;;;;2014.5;-742.3984375
-1;133100;RAINFOREST_RESIN;10002;5;9996;1;9995;23;10004;1;10005;23;;;10003.0;-246.0
-1;133200;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;133200;KELP;2013;1;2012;27;;;2016;28;;;;;2014.5;-742.4609375
-1;133300;KELP;2013;32;;;;;2016;32;;;;;2014.5;-730.9296875
-1;133300;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;133400;RAINFOREST_RESIN;9998;2;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;133400;KELP;2013;29;;;;;2016;30;;;;;2014.5;-727.03125
-1;133500;KELP;2013;30;;;;;2015;1;2016;30;;;2014.0;-726.4609375
-1;133500;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;133600;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;133600;KELP;2013;23;;;;;2016;23;;;;;2014.5;-732.578125
-1;133700;KELP;2013;27;;;;;2016;28;;;;;2014.5;-731.0625
-1;133700;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;133800;RAINFOREST_RESIN;9996;2;9995;21;;;10002;8;10004;2;10005;21;9999.0;-246.0
-1;133800;KELP;2013;23;;;;;2016;23;;;;;2014.5;-719.4140625
-1;133900;KELP;2013;24;;;;;2016;24;;;;;2014.5;-718.375
-1;133900;RAINFOREST_RESIN;9998;7;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;134000;RAINFOREST_RESIN;9995;24;;;;;10000;3;10005;24;;;9997.5;-246.0
-1;134000;KELP;2013;32;;;;;2014;2;2016;24;;;2013.5;-715.28125
-1;134100;KELP;2013;24;;;;;2016;24;;;;;2014.5;-722.7890625
-1;134100;RAINFOREST_RESIN;9998;8;9996;1;9995;23;10004;1;10005;23;;;10001.0;-246.0
-1;134200;RAINFOREST_RESIN;10002;1;9995;29;;;10005;29;;;;;10003.5;-246.0
-1;134200;KELP;2013;29;;;;;2016;29;;;;;2014.5;-730.875
-1;134300;KELP;2013;32;;;;;2016;32;;;;;2014.5;-731.03125
-1;134300;RAINFOREST_RESIN;10002;1;9996;2;9995;30;10004;2;10005;30;;;10003.0;-246.0
-1;134400;RAINFOREST_RESIN;9998;8;9996;2;9995;23;10004;2;10005;23;;;10001.0;-246.0
-1;134400;KELP;2013;25;;;;;2016;25;;;;;2014.5;-732.109375
-1;134500;KELP;2013;6;2012;24;;;2016;24;;;;;2014.5;-739.75
-1;134500;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;134600;RAINFOREST_RESIN;10000;5;9996;1;9995;22;10004;1;10005;22;;;10002.0;-246.0
-1;134600;KELP;2014;5;2012;23;;;2016;23;;;;;2015.0;-746.3671875
-1;134700;KELP;2013;1;2012;20;;;2014;7;2016;21;;;2013.5;-742.0859375
-1;134700;RAINFOREST_RESIN;10002;4;9996;1;9995;20;10004;1;10005;20;;;10003.0;-246.0
-1;134800;RAINFOREST_RESIN;9996;2;9995;30;;;10002;4;10004;2;10005;30;9999.0;-246.0
-1;134800;KELP;2013;32;;;;;2016;32;;;;;2014.5;-722.1875
-1;134900;KELP;2013;23;;;;;2015;5;2016;23;;;2014.0;-727.328125
-1;134900;RAINFOREST_RESIN;9996;2;9995;21;;;9998;1;10004;2;10005;21;9997.0;-246.0
-1;135000;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;135000;KELP;2013;31;;;;;2016;23;;;;;2014.5;-722.234375
-1;135100;KELP;2015;8;2013;22;;;2016;22;;;;;2015.5;-719.609375
-1;135100;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;135200;RAINFOREST_RESIN;9998;5;9996;1;9995;20;10004;1;10005;20;;;10001.0;-246.0
-1;135200;KELP;2013;21;;;;;2016;21;;;;;2014.5;-717.4765625
-1;135300;KELP;2013;20;;;;;2016;20;;;;;2014.5;-716.9921875
-1;135300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;135400;KELP;2013;30;;;;;2016;1;2017;29;;;2014.5;-703.578125
-1;135400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;135500;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;135500;KELP;2013;30;;;;;2015;3;2017;30;;;2014.0;-700.6953125
-1;135600;RAINFOREST_RESIN;10002;1;9995;21;;;10005;21;;;;;10003.5;-246.0
-1;135600;KELP;2013;21;;;;;2015;1;2017;21;;;2014.0;-702.2421875
-1;135700;KELP;2013;26;;;;;2017;26;;;;;2015.0;-696.7578125
-1;135700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;135800;KELP;2014;3;2013;24;;;2015;3;2017;24;;;2014.5;-696.203125
-1;135800;RAINFOREST_RESIN;9995;24;;;;;10000;3;10005;24;;;9997.5;-246.0
-1;135900;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;135900;KELP;2014;27;;;;;2017;27;;;;;2015.5;-678.59375
-1;136000;RAINFOREST_RESIN;9996;1;9995;30;;;9998;1;10004;1;10005;30;9997.0;-246.0
-1;136000;KELP;2014;35;;;;;2017;31;;;;;2015.5;-665.0234375
-1;136100;KELP;2014;29;;;;;2017;29;;;;;2015.5;-676.4140625
-1;136100;RAINFOREST_RESIN;9995;29;;;;;10002;5;10005;29;;;9998.5;-246.0
-1;136200;KELP;2013;29;;;;;2015;2;2017;29;;;2014.0;-697.703125
-1;136200;RAINFOREST_RESIN;9998;2;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;136300;RAINFOREST_RESIN;10002;1;9998;4;9996;2;10004;2;10005;30;;;10003.0;-246.0
-1;136300;KELP;2014;1;2013;32;;;2016;2;2017;30;;;2015.0;-707.421875
-1;136400;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;136400;KELP;2013;30;;;;;2016;30;;;;;2014.5;-709.0
-1;136500;KELP;2013;26;;;;;2014;1;2016;26;;;2013.5;-717.734375
-1;136500;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;136600;KELP;2013;25;;;;;2016;25;;;;;2014.5;-714.6328125
-1;136600;RAINFOREST_RESIN;9998;1;9995;25;;;10005;25;;;;;10001.5;-246.0
-1;136700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;136700;KELP;2013;24;;;;;2016;24;;;;;2014.5;-713.1171875
-1;136800;RAINFOREST_RESIN;10002;1;9996;2;9995;26;10004;2;10005;26;;;10003.0;-246.0
-1;136800;KELP;2013;34;;;;;2016;2;2017;26;;;2014.5;-708.140625
-1;136900;KELP;2013;23;;;;;2016;23;;;;;2014.5;-710.203125
-1;136900;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;137000;KELP;2013;29;;;;;2016;29;;;;;2014.5;-711.2265625
-1;137000;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;137100;RAINFOREST_RESIN;9995;24;;;;;10002;3;10005;24;;;9998.5;-246.0
-1;137100;KELP;2013;24;;;;;2017;24;;;;;2015.0;-697.4296875
-1;137200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;137200;KELP;2014;1;2013;23;;;2017;23;;;;;2015.5;-693.8125
-1;137300;KELP;2013;28;;;;;2015;5;2016;28;;;2014.0;-710.125
-1;137300;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;137400;KELP;2013;29;;;;;2016;29;;;;;2014.5;-710.0859375
-1;137400;RAINFOREST_RESIN;9996;2;9995;27;;;10002;6;10004;2;10005;27;9999.0;-246.0
-1;137500;RAINFOREST_RESIN;9996;1;9995;29;;;9998;1;10004;1;10005;29;9997.0;-246.0
-1;137500;KELP;2013;30;;;;;2015;7;2016;30;;;2014.0;-710.0390625
-1;137600;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;137600;KELP;2013;22;;;;;2016;22;;;;;2014.5;-712.578125
-1;137700;KELP;2013;28;;;;;2014;3;2016;1;2017;27;2013.5;-707.0
-1;137700;RAINFOREST_RESIN;9996;1;9995;27;;;9998;8;10004;1;10005;27;9997.0;-246.0
-1;137800;KELP;2013;23;;;;;2016;23;;;;;2014.5;-718.8046875
-1;137800;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;137900;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;137900;KELP;2013;29;;;;;2016;29;;;;;2014.5;-718.2421875
-1;138000;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;138000;KELP;2013;30;;;;;2016;30;;;;;2014.5;-722.8203125
-1;138100;KELP;2013;31;;;;;2016;31;;;;;2014.5;-724.421875
-1;138100;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;138200;KELP;2012;24;;;;;2016;24;;;;;2014.0;-744.3046875
-1;138200;RAINFOREST_RESIN;9996;2;9995;22;;;9998;1;10004;2;10005;22;9997.0;-246.0
-1;138300;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;138300;KELP;2012;30;;;;;2016;30;;;;;2014.0;-745.015625
-1;138400;RAINFOREST_RESIN;9996;2;9995;24;;;9998;1;10002;5;10004;2;9997.0;-246.0
-1;138400;KELP;2012;26;;;;;2014;4;2015;26;;;2013.0;-773.015625
-1;138500;KELP;2013;23;;;;;2016;24;;;;;2014.5;-717.8125
-1;138500;RAINFOREST_RESIN;9996;2;9995;22;;;10002;3;10004;2;10005;22;9999.0;-246.0
-1;138600;KELP;2013;30;;;;;2014;2;2016;31;;;2013.5;-721.4296875
-1;138600;RAINFOREST_RESIN;9998;4;9996;1;9995;30;10000;2;10004;1;10005;30;9999.0;-246.0
-1;138700;RAINFOREST_RESIN;9998;6;9996;2;9995;23;10004;2;10005;23;;;10001.0;-246.0
-1;138700;KELP;2013;25;;;;;2016;25;;;;;2014.5;-728.53125
-1;138800;RAINFOREST_RESIN;9996;2;9995;29;;;10002;1;10004;2;10005;29;9999.0;-246.0
-1;138800;KELP;2013;31;;;;;2016;31;;;;;2014.5;-722.6484375
-1;138900;KELP;2013;22;;;;;2016;22;;;;;2014.5;-723.5703125
-1;138900;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;139000;KELP;2013;30;;;;;2016;1;2017;30;;;2014.5;-707.1953125
-1;139000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;139100;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;139100;KELP;2013;24;;;;;2017;24;;;;;2015.0;-699.4296875
-1;139200;RAINFOREST_RESIN;9998;3;9996;2;9995;24;10004;2;10005;24;;;10001.0;-246.0
-1;139200;KELP;2014;3;2013;26;;;2017;26;;;;;2015.5;-698.8203125
-1;139300;KELP;2013;22;;;;;2017;22;;;;;2015.0;-699.3203125
-1;139300;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;139400;KELP;2014;5;2013;25;;;2017;25;;;;;2015.5;-694.5546875
-1;139400;RAINFOREST_RESIN;10002;5;9996;1;9995;24;10004;1;10005;24;;;10003.0;-246.0
-1;139500;RAINFOREST_RESIN;9996;1;9995;20;;;10002;2;10004;1;10005;20;9999.0;-246.0
-1;139500;KELP;2013;21;;;;;2017;21;;;;;2015.0;-695.0859375
-1;139600;RAINFOREST_RESIN;9995;25;;;;;9998;1;10005;25;;;9996.5;-246.0
-1;139600;KELP;2014;6;2013;25;;;2017;25;;;;;2015.5;-692.5234375
-1;139700;KELP;2013;27;;;;;2014;5;2015;4;2017;27;2013.5;-695.78125
-1;139700;RAINFOREST_RESIN;9996;2;9995;25;;;10002;2;10004;2;10005;25;9999.0;-246.0
-1;139800;KELP;2015;1;2013;27;;;2017;27;;;;;2016.0;-698.859375
-1;139800;RAINFOREST_RESIN;9998;3;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;139900;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;139900;KELP;2014;1;2013;22;;;2015;1;2017;23;;;2014.5;-691.7265625
-1;140000;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;140000;KELP;2013;24;;;;;2016;24;;;;;2014.5;-708.6171875
-1;140100;KELP;2013;26;;;;;2016;27;;;;;2014.5;-717.296875
-1;140100;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;140200;KELP;2013;30;;;;;2016;30;;;;;2014.5;-733.90625
-1;140200;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;140300;RAINFOREST_RESIN;10002;1;9998;1;9996;2;10004;2;10005;26;;;10003.0;-246.0
-1;140300;KELP;2013;28;;;;;2016;28;;;;;2014.5;-733.0546875
-1;140400;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;140400;KELP;2012;27;;;;;2013;1;2016;27;;;2012.5;-744.4140625
-1;140500;KELP;2012;27;;;;;2016;27;;;;;2014.0;-747.40625
-1;140500;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;140600;KELP;2012;28;;;;;2013;3;2016;29;;;2012.5;-748.4140625
-1;140600;RAINFOREST_RESIN;9996;2;9995;27;;;10000;3;10002;1;10004;2;9998.0;-246.0
-1;140700;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;140700;KELP;2012;22;;;;;2016;22;;;;;2014.0;-752.6171875
-1;140800;RAINFOREST_RESIN;9998;7;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;140800;KELP;2013;26;;;;;2016;26;;;;;2014.5;-732.984375
-1;140900;KELP;2012;28;;;;;2016;28;;;;;2014.0;-738.4296875
-1;140900;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;141000;KELP;2013;27;;;;;2016;22;;;;;2014.5;-734.8984375
-1;141000;RAINFOREST_RESIN;9998;3;9996;2;9995;20;10004;2;10005;20;;;10001.0;-246.0
-1;141100;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;141100;KELP;2013;31;;;;;2016;28;;;;;2014.5;-736.8984375
-1;141200;RAINFOREST_RESIN;9995;24;;;;;10002;1;10005;24;;;9998.5;-246.0
-1;141200;KELP;2013;24;;;;;2015;2;2016;24;;;2014.0;-717.703125
-1;141300;KELP;2013;22;;;;;2016;22;;;;;2014.5;-718.1015625
-1;141300;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;141400;KELP;2013;28;;;;;2016;28;;;;;2014.5;-709.0234375
-1;141400;RAINFOREST_RESIN;9996;2;9995;26;;;10002;2;10004;2;10005;26;9999.0;-246.0
-1;141500;KELP;2013;27;;;;;2016;27;;;;;2014.5;-716.6953125
-1;141500;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;141600;RAINFOREST_RESIN;9996;2;9995;29;;;10002;5;10004;2;10005;29;9999.0;-246.0
-1;141600;KELP;2013;31;;;;;2016;31;;;;;2014.5;-712.1875
-1;141700;KELP;2013;22;;;;;2016;22;;;;;2014.5;-713.640625
-1;141700;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;141800;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;141800;KELP;2013;26;;;;;2017;26;;;;;2015.0;-703.3359375
-1;141900;KELP;2013;22;;;;;2017;22;;;;;2015.0;-702.2734375
-1;141900;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;142000;RAINFOREST_RESIN;9998;5;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;142000;KELP;2015;1;2013;26;;;2017;26;;;;;2016.0;-698.6640625
-1;142100;KELP;2013;31;;;;;2016;31;;;;;2014.5;-718.9375
-1;142100;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;142200;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;142200;KELP;2013;24;;;;;2017;24;;;;;2015.0;-701.8359375
-1;142300;KELP;2015;1;2013;25;;;2017;25;;;;;2016.0;-702.3828125
-1;142300;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;142400;RAINFOREST_RESIN;10002;3;9996;2;9995;29;10004;2;10005;29;;;10003.0;-246.0
-1;142400;KELP;2013;31;;;;;2017;31;;;;;2015.0;-702.4921875
-1;142500;KELP;2015;5;2013;23;;;2016;1;2017;22;;;2015.5;-704.0703125
-1;142500;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;142600;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;142600;KELP;2013;28;;;;;2016;29;;;;;2014.5;-712.3671875
-1;142700;KELP;2013;29;;;;;2015;4;2016;1;2017;28;2014.0;-706.4140625
-1;142700;RAINFOREST_RESIN;10002;5;9996;1;9995;28;10004;1;10005;28;;;10003.0;-246.0
-1;142800;RAINFOREST_RESIN;9998;1;9996;2;9995;21;10004;2;10005;21;;;10001.0;-246.0
-1;142800;KELP;2015;1;2013;23;;;2017;23;;;;;2016.0;-703.3046875
-1;142900;KELP;2013;27;;;;;2017;27;;;;;2015.0;-705.921875
-1;142900;RAINFOREST_RESIN;9995;27;;;;;9998;1;10005;27;;;9996.5;-246.0
-1;143000;RAINFOREST_RESIN;9996;2;9995;23;;;10002;2;10004;2;10005;23;9999.0;-246.0
-1;143000;KELP;2013;25;;;;;2017;25;;;;;2015.0;-699.8828125
-1;143100;KELP;2014;37;;;;;2017;30;;;;;2015.5;-682.09375
-1;143100;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;143200;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;143200;KELP;2014;32;;;;;2016;6;2017;32;;;2015.0;-683.359375
-1;143300;KELP;2014;27;;;;;2016;7;2017;27;;;2015.0;-681.71875
-1;143300;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;143400;RAINFOREST_RESIN;9996;2;9995;26;;;10002;4;10004;2;10005;26;9999.0;-246.0
-1;143400;KELP;2013;28;;;;;2017;28;;;;;2015.0;-698.03125
-1;143500;KELP;2014;34;;;;;2017;26;;;;;2015.5;-687.2421875
-1;143500;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;143600;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;143600;KELP;2013;22;;;;;2017;22;;;;;2015.0;-690.3515625
-1;143700;KELP;2014;1;2013;25;;;2017;26;;;;;2015.5;-690.28125
-1;143700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;143800;RAINFOREST_RESIN;9996;2;9995;28;;;10002;9;10004;2;10005;28;9999.0;-246.0
-1;143800;KELP;2014;34;;;;;2017;30;;;;;2015.5;-684.03125
-1;143900;KELP;2013;25;;;;;2015;2;2017;25;;;2014.0;-694.3046875
-1;143900;RAINFOREST_RESIN;10002;1;9996;1;9995;24;10004;1;10005;24;;;10003.0;-246.0
-1;144000;RAINFOREST_RESIN;9998;6;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;144000;KELP;2016;1;2014;22;;;2017;22;;;;;2016.5;-680.0078125
-1;144100;KELP;2013;22;;;;;2015;3;2017;22;;;2014.0;-688.890625
-1;144100;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;144200;RAINFOREST_RESIN;9996;1;9995;22;;;10002;5;10004;1;10005;22;9999.0;-246.0
-1;144200;KELP;2013;23;;;;;2015;4;2016;23;;;2014.0;-714.7109375
-1;144300;KELP;2013;28;;;;;2015;2;2016;28;;;2014.0;-708.6328125
-1;144300;RAINFOREST_RESIN;9998;6;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;144400;KELP;2013;30;;;;;2016;2;2017;28;;;2014.5;-707.6171875
-1;144400;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;144500;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;144500;KELP;2013;26;;;;;2017;26;;;;;2015.0;-701.171875
-1;144600;RAINFOREST_RESIN;10002;2;9998;9;9996;1;10004;1;10005;23;;;10003.0;-246.0
-1;144600;KELP;2013;24;;;;;2016;24;;;;;2014.5;-714.6171875
-1;144700;KELP;2013;22;;;;;2016;22;;;;;2014.5;-731.078125
-1;144700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;144800;KELP;2013;24;;;;;2016;24;;;;;2014.5;-720.171875
-1;144800;RAINFOREST_RESIN;9995;24;;;;;10002;7;10005;24;;;9998.5;-246.0
-1;144900;RAINFOREST_RESIN;9998;8;9996;2;9995;28;10004;2;10005;28;;;10001.0;-246.0
-1;144900;KELP;2013;30;;;;;2016;30;;;;;2014.5;-716.65625
-1;145000;RAINFOREST_RESIN;9998;9;9995;25;;;10005;25;;;;;10001.5;-246.0
-1;145000;KELP;2012;25;;;;;2016;25;;;;;2014.0;-756.234375
-1;145100;KELP;2012;26;;;;;2013;10;2016;26;;;2012.5;-746.4609375
-1;145100;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;145200;KELP;2015;1;2013;1;2012;24;2016;25;;;;;2015.5;-742.3828125
-1;145200;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;145300;RAINFOREST_RESIN;9996;2;9995;23;;;9998;3;10004;2;10005;23;9997.0;-246.0
-1;145300;KELP;2012;25;;;;;2016;25;;;;;2014.0;-745.8125
-1;145400;RAINFOREST_RESIN;9998;6;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;145400;KELP;2012;24;;;;;2016;24;;;;;2014.0;-752.9921875
-1;145500;KELP;2012;28;;;;;2014;6;2016;28;;;2013.0;-746.328125
-1;145500;RAINFOREST_RESIN;10002;1;9996;1;9995;27;10004;1;10005;27;;;10003.0;-246.0
-1;145600;KELP;2012;27;;;;;2013;1;2014;3;2016;27;2012.5;-743.5390625
-1;145600;RAINFOREST_RESIN;9996;2;9995;25;;;9998;8;10004;2;10005;25;9997.0;-246.0
-1;145700;RAINFOREST_RESIN;9998;5;9996;2;9995;20;10004;2;10005;20;;;10001.0;-246.0
-1;145700;KELP;2012;22;;;;;2014;4;2016;22;;;2013.0;-743.03125
-1;145800;RAINFOREST_RESIN;9998;6;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;145800;KELP;2012;27;;;;;2016;27;;;;;2014.0;-745.1171875
-1;145900;KELP;2012;24;;;;;2016;24;;;;;2014.0;-747.0625
-1;145900;RAINFOREST_RESIN;9998;6;9995;24;;;10005;24;;;;;10001.5;-246.0
-1;146000;KELP;2012;27;;;;;2016;27;;;;;2014.0;-745.6171875
-1;146000;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;146100;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;146100;KELP;2012;22;;;;;2014;8;2016;22;;;2013.0;-746.671875
-1;146200;RAINFOREST_RESIN;9998;9;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;146200;KELP;2012;24;;;;;2016;24;;;;;2014.0;-751.8359375
-1;146300;KELP;2012;29;;;;;2016;29;;;;;2014.0;-751.8125
-1;146300;RAINFOREST_RESIN;9998;1;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;146400;KELP;2012;28;;;;;2016;28;;;;;2014.0;-751.109375
-1;146400;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;146500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;146500;KELP;2012;30;;;;;2014;3;2016;30;;;2013.0;-749.1875
-1;146600;RAINFOREST_RESIN;10000;4;9998;5;9995;24;10005;24;;;;;10002.5;-246.0
-1;146600;KELP;2014;4;2012;24;;;2016;24;;;;;2015.0;-743.6875
-1;146700;KELP;2013;29;;;;;2016;29;;;;;2014.5;-727.203125
-1;146700;RAINFOREST_RESIN;9998;8;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;146800;KELP;2013;26;;;;;2016;26;;;;;2014.5;-727.2578125
-1;146800;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;146900;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;146900;KELP;2013;23;;;;;2016;24;;;;;2014.5;-730.8515625
-1;147000;RAINFOREST_RESIN;9996;1;9995;24;;;10002;10;10004;1;10005;24;9999.0;-246.0
-1;147000;KELP;2013;25;;;;;2016;25;;;;;2014.5;-732.46875
-1;147100;KELP;2013;2;2012;27;;;2014;4;2016;29;;;2013.5;-738.5859375
-1;147100;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;147200;KELP;2012;21;;;;;2016;21;;;;;2014.0;-748.3671875
-1;147200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;147300;RAINFOREST_RESIN;10000;3;9996;2;9995;28;10002;7;10004;2;10005;28;10001.0;-246.0
-1;147300;KELP;2014;3;2012;30;;;2016;30;;;;;2015.0;-746.75
-1;147400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;147400;KELP;2012;30;;;;;2016;30;;;;;2014.0;-744.1953125
-1;147500;KELP;2012;20;;;;;2016;20;;;;;2014.0;-740.875
-1;147500;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;147600;KELP;2012;24;;;;;2016;25;;;;;2014.0;-747.9765625
-1;147600;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;147700;RAINFOREST_RESIN;10002;1;9995;27;;;10005;27;;;;;10003.5;-246.0
-1;147700;KELP;2012;27;;;;;2015;27;;;;;2013.5;-767.9140625
-1;147800;RAINFOREST_RESIN;9996;2;9995;27;;;10002;1;10004;2;10005;27;9999.0;-246.0
-1;147800;KELP;2014;1;2012;29;;;2015;29;;;;;2014.5;-767.515625
-1;147900;KELP;2012;21;;;;;2015;21;;;;;2013.5;-763.0078125
-1;147900;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;148000;KELP;2012;31;;;;;2015;31;;;;;2013.5;-768.6640625
-1;148000;RAINFOREST_RESIN;9996;2;9995;29;;;10002;9;10004;2;10005;29;9999.0;-246.0
-1;148100;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;148100;KELP;2012;30;;;;;2016;30;;;;;2014.0;-739.0859375
-1;148200;RAINFOREST_RESIN;9998;5;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;148200;KELP;2012;26;;;;;2014;3;2016;27;;;2013.0;-742.15625
-1;148300;KELP;2013;2;2012;25;;;2016;27;;;;;2014.5;-741.8125
-1;148300;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;148400;KELP;2013;21;;;;;2016;21;;;;;2014.5;-735.640625
-1;148400;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;148500;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;148500;KELP;2013;22;;;;;2015;4;2016;22;;;2014.0;-735.3828125
-1;148600;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;148600;KELP;2013;21;;;;;2016;21;;;;;2014.5;-733.90625
-1;148700;KELP;2013;25;;;;;2016;26;;;;;2014.5;-733.5078125
-1;148700;RAINFOREST_RESIN;9998;4;9995;26;;;10005;26;;;;;10001.5;-246.0
-1;148800;KELP;2013;26;;;;;2016;26;;;;;2014.5;-724.7890625
-1;148800;RAINFOREST_RESIN;9995;26;;;;;10002;1;10005;26;;;9998.5;-246.0
-1;148900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;148900;KELP;2013;32;;;;;2016;32;;;;;2014.5;-728.875
-1;149000;RAINFOREST_RESIN;10002;5;9996;1;9995;30;10004;1;10005;30;;;10003.0;-246.0
-1;149000;KELP;2014;4;2013;31;;;2016;31;;;;;2015.0;-731.3515625
-1;149100;KELP;2014;2;2013;30;;;2016;25;;;;;2015.0;-733.4140625
-1;149100;RAINFOREST_RESIN;10000;2;9996;1;9995;24;10004;1;10005;24;;;10002.0;-246.0
-1;149200;KELP;2015;2;2013;27;;;2016;24;;;;;2015.5;-727.640625
-1;149200;RAINFOREST_RESIN;10002;1;9998;1;9996;2;10004;2;10005;22;;;10003.0;-246.0
-1;149300;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;149300;KELP;2013;27;;;;;2016;27;;;;;2014.5;-715.2421875
-1;149400;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;149400;KELP;2013;27;;;;;2015;7;2016;27;;;2014.0;-727.3125
-1;149500;KELP;2015;1;2013;32;;;2016;31;;;;;2015.5;-727.2265625
-1;149500;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;149600;KELP;2013;32;;;;;2016;30;;;;;2014.5;-730.7265625
-1;149600;RAINFOREST_RESIN;9995;30;;;;;10002;2;10005;30;;;9998.5;-246.0
-1;149700;RAINFOREST_RESIN;10002;6;9996;1;9995;28;10004;1;10005;28;;;10003.0;-246.0
-1;149700;KELP;2013;1;2012;28;;;2016;29;;;;;2014.5;-738.703125
-1;149800;RAINFOREST_RESIN;10002;5;9996;1;9995;20;10004;1;10005;20;;;10003.0;-246.0
-1;149800;KELP;2015;1;2013;1;2012;20;2016;21;;;;;2015.5;-740.671875
-1;149900;KELP;2013;25;;;;;2016;30;;;;;2014.5;-731.4453125
-1;149900;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;150000;KELP;2013;31;;;;;2015;3;2016;31;;;2014.0;-728.8984375
-1;150000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;150100;RAINFOREST_RESIN;9998;2;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;150100;KELP;2014;4;2013;22;;;2016;22;;;;;2015.0;-731.5078125
-1;150200;RAINFOREST_RESIN;9996;2;9995;27;;;9998;1;10004;2;10005;27;9997.0;-246.0
-1;150200;KELP;2013;29;;;;;2016;29;;;;;2014.5;-720.390625
-1;150300;KELP;2013;24;;;;;2015;8;2016;24;;;2014.0;-723.546875
-1;150300;RAINFOREST_RESIN;9998;10;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;150400;RAINFOREST_RESIN;9996;1;9995;30;;;9998;1;10004;1;10005;30;9997.0;-246.0
-1;150400;KELP;2013;30;;;;;2016;31;;;;;2014.5;-725.5078125
-1;150500;KELP;2013;29;;;;;2016;29;;;;;2014.5;-728.578125
-1;150500;RAINFOREST_RESIN;10002;1;9995;29;;;10005;29;;;;;10003.5;-246.0
-1;150600;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;150600;KELP;2013;22;;;;;2016;23;;;;;2014.5;-723.40625
-1;150700;KELP;2013;22;;;;;2015;1;2016;22;;;2014.0;-720.6796875
-1;150700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;150800;RAINFOREST_RESIN;9995;30;;;;;9998;1;10005;30;;;9996.5;-246.0
-1;150800;KELP;2013;31;;;;;2016;30;;;;;2014.5;-723.2734375
-1;150900;KELP;2013;27;;;;;2016;24;;;;;2014.5;-718.78125
-1;150900;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;151000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;151000;KELP;2013;27;;;;;2017;27;;;;;2015.0;-707.828125
-1;151100;KELP;2015;1;2013;30;;;2016;25;;;;;2015.5;-714.9140625
-1;151100;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;151200;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;151200;KELP;2013;24;;;;;2017;24;;;;;2015.0;-698.609375
-1;151300;KELP;2015;1;2014;8;2013;27;2017;27;;;;;2016.0;-698.8515625
-1;151300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;151400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;151400;KELP;2013;22;;;;;2017;22;;;;;2015.0;-703.953125
-1;151500;KELP;2014;31;;;;;2017;32;;;;;2015.5;-671.90625
-1;151500;RAINFOREST_RESIN;9996;2;9995;30;;;10002;9;10004;2;10005;30;9999.0;-246.0
-1;151600;RAINFOREST_RESIN;10002;3;9998;1;9995;20;10005;20;;;;;10003.5;-246.0
-1;151600;KELP;2016;12;2014;20;;;2017;20;;;;;2016.5;-659.703125
-1;151700;KELP;2014;30;;;;;2017;30;;;;;2015.5;-666.2265625
-1;151700;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;151800;RAINFOREST_RESIN;9998;2;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;151800;KELP;2014;30;;;;;2017;30;;;;;2015.5;-671.1328125
-1;151900;KELP;2014;27;;;;;2016;1;2017;27;;;2015.0;-676.1328125
-1;151900;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;152000;RAINFOREST_RESIN;9995;23;;;;;9998;11;10005;23;;;9996.5;-246.0
-1;152000;KELP;2014;23;;;;;2017;23;;;;;2015.5;-684.9296875
-1;152100;KELP;2014;28;;;;;2017;28;;;;;2015.5;-685.671875
-1;152100;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;152200;RAINFOREST_RESIN;9995;28;;;;;10002;2;10005;28;;;9998.5;-246.0
-1;152200;KELP;2014;23;;;;;2017;28;;;;;2015.5;-674.28125
-1;152300;KELP;2014;27;;;;;2017;27;;;;;2015.5;-686.8515625
-1;152300;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;152400;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;152400;KELP;2014;10;2013;22;;;2017;24;;;;;2015.5;-688.9765625
-1;152500;KELP;2013;32;;;;;2017;32;;;;;2015.0;-699.8671875
-1;152500;RAINFOREST_RESIN;9996;2;9995;30;;;10002;5;10004;2;10005;30;9999.0;-246.0
-1;152600;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;152600;KELP;2013;26;;;;;2017;27;;;;;2015.0;-700.828125
-1;152700;KELP;2014;4;2013;26;;;2017;26;;;;;2015.5;-691.203125
-1;152700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;152800;RAINFOREST_RESIN;9998;5;9995;29;;;10005;29;;;;;10001.5;-246.0
-1;152800;KELP;2013;29;;;;;2015;4;2017;29;;;2014.0;-698.2109375
-1;152900;KELP;2014;5;2013;26;;;2016;1;2017;25;;;2015.0;-703.7734375
-1;152900;RAINFOREST_RESIN;10000;5;9998;1;9996;1;10004;1;10005;25;;;10002.0;-246.0
-1;153000;RAINFOREST_RESIN;9995;30;;;;;10002;9;10005;30;;;9998.5;-246.0
-1;153000;KELP;2015;1;2013;30;;;2017;30;;;;;2016.0;-701.1328125
-1;153100;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;153100;KELP;2013;21;;;;;2017;21;;;;;2015.0;-697.0234375
-1;153200;RAINFOREST_RESIN;9998;3;9996;2;9995;20;10004;2;10005;20;;;10001.0;-246.0
-1;153200;KELP;2013;22;;;;;2017;22;;;;;2015.0;-700.9296875
-1;153300;KELP;2013;24;;;;;2017;24;;;;;2015.0;-700.9140625
-1;153300;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;153400;KELP;2014;6;2013;20;;;2017;20;;;;;2015.5;-702.140625
-1;153400;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;153500;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;-246.0
-1;153500;KELP;2015;2;2014;7;2013;21;2017;21;;;;;2016.0;-698.171875
-1;153600;RAINFOREST_RESIN;9998;5;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;153600;KELP;2013;22;;;;;2017;22;;;;;2015.0;-695.1953125
-1;153700;KELP;2014;26;;;;;2017;21;;;;;2015.5;-683.1015625
-1;153700;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;153800;KELP;2014;27;;;;;2017;27;;;;;2015.5;-682.0
-1;153800;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;153900;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;153900;KELP;2014;27;;;;;2017;2;2018;25;;;2015.5;-655.21875
-1;154000;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;154000;KELP;2015;29;;;;;2017;3;2018;29;;;2016.0;-626.3515625
-1;154100;KELP;2015;20;;;;;2018;20;;;;;2016.5;-621.1015625
-1;154100;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;154200;KELP;2015;29;;;;;2018;29;;;;;2016.5;-624.78125
-1;154200;RAINFOREST_RESIN;9998;5;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;154300;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;154300;KELP;2015;21;;;;;2018;21;;;;;2016.5;-631.9453125
-1;154400;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;154400;KELP;2015;29;;;;;2018;29;;;;;2016.5;-625.90625
-1;154500;KELP;2015;25;;;;;2018;25;;;;;2016.5;-620.859375
-1;154500;RAINFOREST_RESIN;9995;25;;;;;10002;3;10005;25;;;9998.5;-246.0
-1;154600;KELP;2015;27;;;;;2019;27;;;;;2017.0;-594.7578125
-1;154600;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;154700;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;154700;KELP;2015;30;;;;;2019;30;;;;;2017.0;-587.6640625
-1;154800;RAINFOREST_RESIN;10002;1;9998;8;9996;1;10004;1;10005;28;;;10003.0;-246.0
-1;154800;KELP;2016;32;;;;;2019;29;;;;;2017.5;-579.7109375
-1;154900;KELP;2015;28;;;;;2019;28;;;;;2017.0;-608.265625
-1;154900;RAINFOREST_RESIN;9995;28;;;;;9998;1;10005;28;;;9996.5;-246.0
-1;155000;KELP;2015;22;;;;;2019;22;;;;;2017.0;-594.7890625
-1;155000;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;155100;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;155100;KELP;2015;27;;;;;2019;28;;;;;2017.0;-606.9140625
-1;155200;RAINFOREST_RESIN;10002;1;9995;28;;;10005;28;;;;;10003.5;-246.0
-1;155200;KELP;2015;28;;;;;2018;28;;;;;2016.5;-622.90625
-1;155300;KELP;2014;27;;;;;2018;27;;;;;2016.0;-647.8046875
-1;155300;RAINFOREST_RESIN;9998;8;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;155400;KELP;2014;31;;;;;2017;23;;;;;2015.5;-677.5078125
-1;155400;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;155500;RAINFOREST_RESIN;9996;1;9995;28;;;9998;1;10002;6;10004;1;9997.0;-246.0
-1;155500;KELP;2014;29;;;;;2016;6;2017;29;;;2015.0;-665.3984375
-1;155600;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;155600;KELP;2015;2;2014;32;;;2018;32;;;;;2016.5;-649.859375
-1;155700;KELP;2014;22;;;;;2016;2;2018;22;;;2015.0;-657.859375
-1;155700;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;155800;KELP;2014;30;;;;;2016;3;2017;30;;;2015.0;-670.5234375
-1;155800;RAINFOREST_RESIN;9996;2;9995;28;;;10002;5;10004;2;10005;28;9999.0;-246.0
-1;155900;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;155900;KELP;2014;30;;;;;2016;3;2017;30;;;2015.0;-672.75
-1;156000;RAINFOREST_RESIN;9998;9;9996;1;9995;25;10004;1;10005;25;;;10001.0;-246.0
-1;156000;KELP;2014;26;;;;;2017;26;;;;;2015.5;-670.2421875
-1;156100;KELP;2014;28;;;;;2017;28;;;;;2015.5;-670.390625
-1;156100;RAINFOREST_RESIN;9998;6;9996;1;9995;27;10004;1;10005;27;;;10001.0;-246.0
-1;156200;KELP;2014;24;;;;;2017;2;2018;22;;;2015.5;-658.1484375
-1;156200;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;156300;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;156300;KELP;2014;29;;;;;2015;3;2017;29;;;2014.5;-667.625
-1;156400;RAINFOREST_RESIN;10002;1;9995;23;;;10005;23;;;;;10003.5;-246.0
-1;156400;KELP;2014;28;;;;;2017;23;;;;;2015.5;-666.03125
-1;156500;KELP;2014;29;;;;;2017;29;;;;;2015.5;-666.046875
-1;156500;RAINFOREST_RESIN;9996;2;9995;27;;;10002;2;10004;2;10005;27;9999.0;-246.0
-1;156600;KELP;2015;23;;;;;2018;24;;;;;2016.5;-637.2578125
-1;156600;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;156700;RAINFOREST_RESIN;9998;6;9995;27;;;10005;27;;;;;10001.5;-246.0
-1;156700;KELP;2015;31;;;;;2018;27;;;;;2016.5;-623.875
-1;156800;RAINFOREST_RESIN;9998;7;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;156800;KELP;2015;32;;;;;2018;24;;;;;2016.5;-629.1171875
-1;156900;KELP;2014;24;;;;;2015;5;2018;25;;;2014.5;-641.3203125
-1;156900;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;157000;KELP;2014;21;;;;;2016;8;2018;22;;;2015.0;-642.0546875
-1;157000;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;157100;RAINFOREST_RESIN;9996;2;9995;22;;;9998;1;10002;2;10004;2;9997.0;-246.0
-1;157100;KELP;2014;24;;;;;2018;24;;;;;2016.0;-651.3359375
-1;157200;RAINFOREST_RESIN;9995;22;;;;;10002;3;10005;22;;;9998.5;-246.0
-1;157200;KELP;2015;1;2014;22;;;2018;22;;;;;2016.5;-653.984375
-1;157300;KELP;2014;22;;;;;2015;4;2017;22;;;2014.5;-662.0625
-1;157300;RAINFOREST_RESIN;9995;22;;;;;10000;4;10005;22;;;9997.5;-246.0
-1;157400;KELP;2014;16;;;;;2017;25;;;;;2015.5;-661.1328125
-1;157400;RAINFOREST_RESIN;10002;1;9996;2;9995;23;10004;2;10005;23;;;10003.0;-246.0
-1;157500;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;157500;KELP;2014;25;;;;;2017;26;;;;;2015.5;-661.1875
-1;157600;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;157600;KELP;2014;24;;;;;2015;3;2017;24;;;2014.5;-667.6875
-1;157700;KELP;2016;1;2014;25;;;2017;25;;;;;2016.5;-660.4609375
-1;157700;RAINFOREST_RESIN;9996;2;9995;23;;;10002;6;10004;2;10005;23;9999.0;-246.0
-1;157800;KELP;2014;23;;;;;2017;23;;;;;2015.5;-665.2109375
-1;157800;RAINFOREST_RESIN;9996;1;9995;22;;;10002;4;10004;1;10005;22;9999.0;-246.0
-1;157900;RAINFOREST_RESIN;9995;24;;;;;10002;4;10005;24;;;9998.5;-246.0
-1;157900;KELP;2014;31;;;;;2017;24;;;;;2015.5;-666.3046875
-1;158000;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;158000;KELP;2014;29;;;;;2017;29;;;;;2015.5;-671.8671875
-1;158100;KELP;2014;22;;;;;2017;23;;;;;2015.5;-685.6875
-1;158100;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;158200;KELP;2014;26;;;;;2017;26;;;;;2015.5;-683.1640625
-1;158200;RAINFOREST_RESIN;10002;1;9996;1;9995;25;10004;1;10005;25;;;10003.0;-246.0
-1;158300;RAINFOREST_RESIN;9996;1;9995;30;;;9998;5;10004;1;10005;30;9997.0;-246.0
-1;158300;KELP;2014;31;;;;;2017;31;;;;;2015.5;-676.421875
-1;158400;RAINFOREST_RESIN;9996;1;9995;30;;;9998;5;10004;1;10005;30;9997.0;-246.0
-1;158400;KELP;2016;1;2014;31;;;2017;31;;;;;2016.5;-681.75
-1;158500;KELP;2014;22;;;;;2017;22;;;;;2015.5;-674.3125
-1;158500;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;158600;KELP;2014;27;;;;;2016;2;2017;27;;;2015.0;-670.25
-1;158600;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;158700;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;158700;KELP;2014;29;;;;;2016;5;2017;29;;;2015.0;-671.7109375
-1;158800;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;158800;KELP;2016;4;2014;24;;;2017;24;;;;;2016.5;-670.796875
-1;158900;KELP;2014;32;;;;;2017;32;;;;;2015.5;-663.109375
-1;158900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;159000;KELP;2015;1;2014;26;;;2018;27;;;;;2016.5;-642.125
-1;159000;RAINFOREST_RESIN;9996;1;9995;26;;;10002;7;10004;1;10005;26;9999.0;-246.0
-1;159100;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;159100;KELP;2014;31;;;;;2017;26;;;;;2015.5;-665.078125
-1;159200;RAINFOREST_RESIN;9995;30;;;;;10002;1;10005;30;;;9998.5;-246.0
-1;159200;KELP;2014;30;;;;;2017;30;;;;;2015.5;-659.9296875
-1;159300;KELP;2014;20;;;;;2018;21;;;;;2016.0;-654.28125
-1;159300;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;159400;RAINFOREST_RESIN;10000;6;9998;6;9996;1;10004;1;10005;23;;;10002.0;-246.0
-1;159400;KELP;2016;6;2014;24;;;2018;24;;;;;2017.0;-643.71875
-1;159500;KELP;2014;26;;;;;2018;26;;;;;2016.0;-645.84375
-1;159500;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;159600;RAINFOREST_RESIN;9998;8;9996;1;9995;23;10004;1;10005;23;;;10001.0;-246.0
-1;159600;KELP;2016;1;2014;24;;;2018;24;;;;;2017.0;-651.3671875
-1;159700;KELP;2014;30;;;;;2017;1;2018;29;;;2015.5;-655.640625
-1;159700;RAINFOREST_RESIN;9996;1;9995;29;;;9998;4;10004;1;10005;29;9997.0;-246.0
-1;159800;RAINFOREST_RESIN;9995;20;;;;;10002;3;10005;20;;;9998.5;-246.0
-1;159800;KELP;2014;20;;;;;2018;20;;;;;2016.0;-658.1796875
-1;159900;KELP;2014;25;;;;;2015;5;2017;1;2018;24;2014.5;-657.140625
-1;159900;RAINFOREST_RESIN;9998;2;9996;1;9995;24;10000;5;10004;1;10005;24;9999.0;-246.0
-1;160000;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;160000;KELP;2014;26;;;;;2018;26;;;;;2016.0;-652.984375
-1;160100;KELP;2015;33;;;;;2018;26;;;;;2016.5;-628.0078125
-1;160100;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;160200;RAINFOREST_RESIN;9998;4;9996;1;9995;23;10004;1;10005;23;;;10001.0;-246.0
-1;160200;KELP;2014;24;;;;;2016;5;2017;1;2018;23;2015.0;-654.1484375
-1;160300;KELP;2014;29;;;;;2017;26;;;;;2015.5;-661.703125
-1;160300;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10004;1;10005;25;9997.0;-246.0
-1;160400;RAINFOREST_RESIN;9995;23;;;;;9998;1;10002;8;10005;23;9996.5;-246.0
-1;160400;KELP;2017;1;2014;23;;;2018;23;;;;;2017.5;-646.9609375
-1;160500;KELP;2014;24;;;;;2018;24;;;;;2016.0;-653.015625
-1;160500;RAINFOREST_RESIN;9998;4;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;160600;RAINFOREST_RESIN;10002;1;9996;2;9995;20;10004;2;10005;20;;;10003.0;-246.0
-1;160600;KELP;2014;22;;;;;2017;22;;;;;2015.5;-662.484375
-1;160700;KELP;2014;26;;;;;2017;24;;;;;2015.5;-666.2890625
-1;160700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;160800;RAINFOREST_RESIN;10002;2;9996;2;9995;27;10004;2;10005;27;;;10003.0;-246.0
-1;160800;KELP;2015;2;2014;27;;;2018;29;;;;;2016.5;-638.1015625
-1;160900;KELP;2015;3;2014;30;;;2018;30;;;;;2016.5;-649.4765625
-1;160900;RAINFOREST_RESIN;10000;3;9996;1;9995;29;10004;1;10005;29;;;10002.0;-246.0
-1;161000;RAINFOREST_RESIN;9995;27;;;;;10002;3;10005;27;;;9998.5;-246.0
-1;161000;KELP;2014;27;;;;;2015;8;2018;27;;;2014.5;-656.5546875
-1;161100;KELP;2014;28;;;;;2018;28;;;;;2016.0;-647.84375
-1;161100;RAINFOREST_RESIN;9995;28;;;;;10002;10;10005;28;;;9998.5;-246.0
-1;161200;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;161200;KELP;2014;31;;;;;2017;1;2018;30;;;2015.5;-653.875
-1;161300;KELP;2014;20;;;;;2018;20;;;;;2016.0;-650.9296875
-1;161300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;161400;RAINFOREST_RESIN;9998;7;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;161400;KELP;2015;3;2014;27;;;2017;1;2018;26;;;2016.0;-654.1328125
-1;161500;KELP;2014;22;;;;;2018;22;;;;;2016.0;-649.5078125
-1;161500;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;161600;RAINFOREST_RESIN;9996;2;9995;20;;;9998;1;10004;2;10005;20;9997.0;-246.0
-1;161600;KELP;2014;22;;;;;2018;22;;;;;2016.0;-649.1328125
-1;161700;KELP;2016;7;2014;26;;;2018;26;;;;;2017.0;-649.125
-1;161700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;161800;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;161800;KELP;2014;21;;;;;2018;21;;;;;2016.0;-645.5
-1;161900;KELP;2015;23;;;;;2018;23;;;;;2016.5;-635.2890625
-1;161900;RAINFOREST_RESIN;9998;9;9996;1;9995;22;10004;1;10005;22;;;10001.0;-246.0
-1;162000;KELP;2015;28;;;;;2018;23;;;;;2016.5;-625.6328125
-1;162000;RAINFOREST_RESIN;9998;1;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;162100;RAINFOREST_RESIN;9998;4;9996;1;9995;24;10004;1;10005;24;;;10001.0;-246.0
-1;162100;KELP;2015;29;;;;;2018;25;;;;;2016.5;-608.90625
-1;162200;RAINFOREST_RESIN;9995;20;;;;;10002;10;10005;20;;;9998.5;-246.0
-1;162200;KELP;2015;20;;;;;2019;20;;;;;2017.0;-600.609375
-1;162300;KELP;2016;5;2015;30;;;2019;30;;;;;2017.5;-602.8125
-1;162300;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;162400;KELP;2015;24;;;;;2016;5;2019;24;;;2015.5;-598.203125
-1;162400;RAINFOREST_RESIN;9996;2;9995;22;;;10000;5;10004;2;10005;22;9998.0;-246.0
-1;162500;RAINFOREST_RESIN;9998;2;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;162500;KELP;2015;24;;;;;2017;5;2019;24;;;2016.0;-602.15625
-1;162600;RAINFOREST_RESIN;9995;21;;;;;10000;5;10002;3;10005;21;9997.5;-246.0
-1;162600;KELP;2015;21;;;;;2017;4;2019;21;;;2016.0;-589.3359375
-1;162700;KELP;2016;24;;;;;2019;24;;;;;2017.5;-576.8828125
-1;162700;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;162800;KELP;2016;29;;;;;2018;8;2019;29;;;2017.0;-583.1953125
-1;162800;RAINFOREST_RESIN;9998;5;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;162900;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;162900;KELP;2016;23;;;;;2018;3;2019;23;;;2017.0;-586.1015625
-1;163000;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;163000;KELP;2016;1;2015;29;;;2019;30;;;;;2017.5;-587.6640625
-1;163100;KELP;2015;28;;;;;2019;28;;;;;2017.0;-592.8046875
-1;163100;RAINFOREST_RESIN;9996;1;9995;27;;;9998;4;10002;7;10004;1;9997.0;-246.0
-1;163200;KELP;2015;21;;;;;2019;21;;;;;2017.0;-596.7421875
-1;163200;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;-246.0
-1;163300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;163300;KELP;2015;27;;;;;2018;27;;;;;2016.5;-619.2265625
-1;163400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;163400;KELP;2015;22;;;;;2018;22;;;;;2016.5;-619.0546875
-1;163500;KELP;2015;2;2014;28;;;2016;2;2018;30;;;2015.5;-638.4140625
-1;163500;RAINFOREST_RESIN;10002;3;9996;2;9995;28;10004;2;10005;28;;;10003.0;-246.0
-1;163600;KELP;2014;28;;;;;2017;1;2018;27;;;2015.5;-654.375
-1;163600;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;163700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;163700;KELP;2014;26;;;;;2018;26;;;;;2016.0;-642.5703125
-1;163800;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10004;1;10005;25;9997.0;-246.0
-1;163800;KELP;2015;1;2014;25;;;2018;26;;;;;2016.5;-642.046875
-1;163900;KELP;2015;24;;;;;2018;24;;;;;2016.5;-633.40625
-1;163900;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;164000;KELP;2015;39;;;;;2018;31;;;;;2016.5;-628.4140625
-1;164000;RAINFOREST_RESIN;9996;2;9995;29;;;9998;1;10004;2;10005;29;9997.0;-246.0
-1;164100;RAINFOREST_RESIN;9996;2;9995;22;;;10002;8;10004;2;10005;22;9999.0;-246.0
-1;164100;KELP;2015;26;;;;;2018;24;;;;;2016.5;-621.7109375
-1;164200;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;164200;KELP;2015;25;;;;;2019;25;;;;;2017.0;-602.6015625
-1;164300;KELP;2015;26;;;;;2018;24;;;;;2016.5;-609.3125
-1;164300;RAINFOREST_RESIN;9998;7;9996;1;9995;23;10004;1;10005;23;;;10001.0;-246.0
-1;164400;KELP;2017;2;2016;24;;;2020;26;;;;;2018.5;-539.28125
-1;164400;RAINFOREST_RESIN;9998;7;9996;2;9995;24;10004;2;10005;24;;;10001.0;-246.0
-1;164500;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;164500;KELP;2016;27;;;;;2020;27;;;;;2018.0;-551.4609375
-1;164600;RAINFOREST_RESIN;9996;1;9995;22;;;9998;1;10004;1;10005;22;9997.0;-246.0
-1;164600;KELP;2018;1;2017;1;2016;23;2019;1;2020;22;;;2018.5;-555.7421875
-1;164700;KELP;2016;26;;;;;2019;26;;;;;2017.5;-578.7890625
-1;164700;RAINFOREST_RESIN;9998;5;9996;2;9995;24;10004;2;10005;24;;;10001.0;-246.0
-1;164800;KELP;2016;23;;;;;2019;2;2020;21;;;2017.5;-556.8671875
-1;164800;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;164900;RAINFOREST_RESIN;9996;1;9995;28;;;10000;5;10004;1;10005;28;9998.0;-246.0
-1;164900;KELP;2016;29;;;;;2017;5;2020;29;;;2016.5;-551.8828125
-1;165000;RAINFOREST_RESIN;9996;2;9995;23;;;10002;8;10004;2;10005;23;9999.0;-246.0
-1;165000;KELP;2018;1;2016;25;;;2019;25;;;;;2018.5;-558.7265625
-1;165100;KELP;2018;1;2016;30;;;2019;30;;;;;2018.5;-568.5078125
-1;165100;RAINFOREST_RESIN;9998;6;9995;30;;;10005;30;;;;;10001.5;-246.0
-1;165200;KELP;2016;21;;;;;2017;6;2018;5;2019;21;2016.5;-579.375
-1;165200;RAINFOREST_RESIN;9995;21;;;;;10000;6;10005;21;;;9997.5;-246.0
-1;165300;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;165300;KELP;2016;22;;;;;2018;4;2019;22;;;2017.0;-570.390625
-1;165400;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;165400;KELP;2016;24;;;;;2019;24;;;;;2017.5;-577.59375
-1;165500;KELP;2017;4;2016;22;;;2019;22;;;;;2018.0;-568.2578125
-1;165500;RAINFOREST_RESIN;10000;4;9998;6;9996;1;10004;1;10005;21;;;10002.0;-246.0
-1;165600;KELP;2016;26;;;;;2019;26;;;;;2017.5;-564.046875
-1;165600;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10004;1;10005;25;9997.0;-246.0
-1;165700;RAINFOREST_RESIN;9996;2;9995;29;;;10002;6;10004;2;10005;29;9999.0;-246.0
-1;165700;KELP;2018;1;2016;31;;;2019;31;;;;;2018.5;-566.515625
-1;165800;RAINFOREST_RESIN;9995;26;;;;;10002;3;10005;26;;;9998.5;-246.0
-1;165800;KELP;2016;26;;;;;2019;26;;;;;2017.5;-563.0390625
-1;165900;KELP;2016;30;;;;;2019;30;;;;;2017.5;-560.234375
-1;165900;RAINFOREST_RESIN;9995;30;;;;;9998;1;10005;30;;;9996.5;-246.0
-1;166000;KELP;2019;1;2017;1;2016;23;2020;24;;;;;2019.5;-537.6640625
-1;166000;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;166100;RAINFOREST_RESIN;9995;27;;;;;10002;8;10005;27;;;9998.5;-246.0
-1;166100;KELP;2016;27;;;;;2019;27;;;;;2017.5;-573.0
-1;166200;RAINFOREST_RESIN;9996;1;9995;23;;;9998;1;10004;1;10005;23;9997.0;-246.0
-1;166200;KELP;2016;24;;;;;2017;3;2019;24;;;2016.5;-563.03125
-1;166300;KELP;2016;30;;;;;2020;30;;;;;2018.0;-550.21875
-1;166300;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;166400;KELP;2016;29;;;;;2020;29;;;;;2018.0;-550.84375
-1;166400;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;166500;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;166500;KELP;2016;24;;;;;2020;24;;;;;2018.0;-551.8671875
-1;166600;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;166600;KELP;2016;21;;;;;2020;21;;;;;2018.0;-549.7578125
-1;166700;KELP;2016;29;;;;;2020;29;;;;;2018.0;-550.71875
-1;166700;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;166800;KELP;2017;3;2016;28;;;2019;2;2020;26;;;2018.0;-553.859375
-1;166800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;166900;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;166900;KELP;2017;7;2016;26;;;2019;2;2020;24;;;2018.0;-554.765625
-1;167000;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;167000;KELP;2016;28;;;;;2017;5;2020;28;;;2016.5;-553.1171875
-1;167100;KELP;2016;28;;;;;2020;28;;;;;2018.0;-550.71875
-1;167100;RAINFOREST_RESIN;9996;1;9995;27;;;10002;7;10004;1;10005;27;9999.0;-246.0
-1;167200;KELP;2016;29;;;;;2019;1;2020;28;;;2017.5;-557.3671875
-1;167200;RAINFOREST_RESIN;9996;1;9995;28;;;10002;9;10004;1;10005;28;9999.0;-246.0
-1;167300;RAINFOREST_RESIN;9995;28;;;;;10002;4;10005;28;;;9998.5;-246.0
-1;167300;KELP;2016;28;;;;;2019;28;;;;;2017.5;-559.2578125
-1;167400;RAINFOREST_RESIN;9996;1;9995;26;;;10002;7;10004;1;10005;26;9999.0;-246.0
-1;167400;KELP;2016;27;;;;;2020;27;;;;;2018.0;-550.109375
-1;167500;KELP;2016;23;;;;;2020;23;;;;;2018.0;-548.15625
-1;167500;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;167600;KELP;2016;29;;;;;2018;1;2020;29;;;2017.0;-547.609375
-1;167600;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;167700;RAINFOREST_RESIN;9996;2;9995;26;;;9998;4;10004;2;10005;26;9997.0;-246.0
-1;167700;KELP;2016;28;;;;;2018;2;2020;28;;;2017.0;-550.046875
-1;167800;RAINFOREST_RESIN;9995;22;;;;;9998;1;10005;22;;;9996.5;-246.0
-1;167800;KELP;2019;1;2016;22;;;2020;22;;;;;2019.5;-548.03125
-1;167900;KELP;2016;32;;;;;2019;2;2020;30;;;2017.5;-556.3359375
-1;167900;RAINFOREST_RESIN;9996;2;9995;30;;;9998;1;10004;2;10005;30;9997.0;-246.0
-1;168000;KELP;2016;29;;;;;2019;29;;;;;2017.5;-571.1640625
-1;168000;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;168100;RAINFOREST_RESIN;9996;2;9995;24;;;9998;1;10004;2;10005;24;9997.0;-246.0
-1;168100;KELP;2016;26;;;;;2020;26;;;;;2018.0;-551.8203125
-1;168200;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;168200;KELP;2017;25;;;;;2020;25;;;;;2018.5;-529.8515625
-1;168300;KELP;2016;29;;;;;2020;29;;;;;2018.0;-542.9921875
-1;168300;RAINFOREST_RESIN;9996;1;9995;28;;;10002;5;10004;1;10005;28;9999.0;-246.0
-1;168400;RAINFOREST_RESIN;9996;1;9995;24;;;10002;8;10004;1;10005;24;9999.0;-246.0
-1;168400;KELP;2017;25;;;;;2020;25;;;;;2018.5;-535.0390625
-1;168500;KELP;2017;25;;;;;2020;25;;;;;2018.5;-534.328125
-1;168500;RAINFOREST_RESIN;10002;1;9998;3;9996;2;10004;2;10005;23;;;10003.0;-246.0
-1;168600;RAINFOREST_RESIN;9998;7;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;168600;KELP;2017;22;;;;;2019;1;2020;22;;;2018.0;-514.78125
-1;168700;KELP;2017;25;;;;;2019;3;2020;25;;;2018.0;-528.984375
-1;168700;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;168800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;168800;KELP;2017;25;;;;;2019;7;2020;25;;;2018.0;-523.3359375
-1;168900;KELP;2017;20;;;;;2020;20;;;;;2018.5;-534.484375
-1;168900;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;169000;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;169000;KELP;2017;28;;;;;2019;3;2020;28;;;2018.0;-534.4375
-1;169100;KELP;2017;27;;;;;2020;27;;;;;2018.5;-535.4609375
-1;169100;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;169200;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;169200;KELP;2019;1;2017;22;;;2020;22;;;;;2019.5;-532.75
-1;169300;KELP;2017;33;;;;;2020;29;;;;;2018.5;-519.03125
-1;169300;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;169400;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;169400;KELP;2017;23;;;;;2021;23;;;;;2019.0;-499.7890625
-1;169500;KELP;2019;1;2017;25;;;2021;25;;;;;2020.0;-498.8203125
-1;169500;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;169600;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;169600;KELP;2017;26;;;;;2021;26;;;;;2019.0;-497.1640625
-1;169700;KELP;2018;6;2017;30;;;2020;2;2021;28;;;2019.0;-504.9609375
-1;169700;RAINFOREST_RESIN;9998;3;9996;2;9995;28;10004;2;10005;28;;;10001.0;-246.0
-1;169800;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;169800;KELP;2017;32;;;;;2020;2;2021;30;;;2018.5;-506.3515625
-1;169900;KELP;2017;29;;;;;2020;30;;;;;2018.5;-520.6640625
-1;169900;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;170000;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;170000;KELP;2017;26;;;;;2020;26;;;;;2018.5;-523.515625
-1;170100;KELP;2017;32;;;;;2021;32;;;;;2019.0;-502.0546875
-1;170100;RAINFOREST_RESIN;9996;2;9995;30;;;10002;10;10004;2;10005;30;9999.0;-246.0
-1;170200;RAINFOREST_RESIN;9995;22;;;;;10002;5;10005;22;;;9998.5;-246.0
-1;170200;KELP;2017;21;;;;;2020;22;;;;;2018.5;-512.484375
-1;170300;KELP;2018;23;;;;;2021;23;;;;;2019.5;-462.421875
-1;170300;RAINFOREST_RESIN;9998;4;9996;1;9995;22;10004;1;10005;22;;;10001.0;-246.0
-1;170400;RAINFOREST_RESIN;10002;11;9996;1;9995;30;10004;1;10005;30;;;10003.0;-246.0
-1;170400;KELP;2020;10;2018;31;;;2021;31;;;;;2020.5;-461.3984375
-1;170500;KELP;2018;39;;;;;2021;32;;;;;2019.5;-477.546875
-1;170500;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;170600;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;170600;KELP;2018;24;;;;;2021;24;;;;;2019.5;-486.0703125
-1;170700;KELP;2018;29;;;;;2022;29;;;;;2020.0;-453.1796875
-1;170700;RAINFOREST_RESIN;9998;2;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;170800;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;170800;KELP;2019;26;;;;;2022;26;;;;;2020.5;-433.5703125
-1;170900;KELP;2019;1;2018;28;;;2022;28;;;;;2020.5;-444.96875
-1;170900;RAINFOREST_RESIN;9996;2;9995;26;;;10002;3;10004;2;10005;26;9999.0;-246.0
-1;171000;KELP;2018;27;;;;;2019;3;2022;27;;;2018.5;-441.515625
-1;171000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;171100;RAINFOREST_RESIN;10002;3;9998;5;9996;2;10004;2;10005;28;;;10003.0;-246.0
-1;171100;KELP;2018;30;;;;;2020;1;2022;30;;;2019.0;-451.921875
-1;171200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;171200;KELP;2018;21;;;;;2021;21;;;;;2019.5;-458.796875
-1;171300;KELP;2018;30;;;;;2021;25;;;;;2019.5;-461.03125
-1;171300;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;171400;KELP;2018;30;;;;;2021;30;;;;;2019.5;-471.28125
-1;171400;RAINFOREST_RESIN;10002;5;9996;1;9995;29;10004;1;10005;29;;;10003.0;-246.0
-1;171500;RAINFOREST_RESIN;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;-246.0
-1;171500;KELP;2018;23;;;;;2021;23;;;;;2019.5;-472.234375
-1;171600;RAINFOREST_RESIN;9996;2;9995;30;;;9998;11;10004;2;10005;30;9997.0;-246.0
-1;171600;KELP;2018;28;;;;;2020;8;2021;32;;;2019.0;-483.859375
-1;171700;KELP;2017;23;;;;;2021;23;;;;;2019.0;-493.2578125
-1;171700;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;171800;KELP;2017;27;;;;;2020;27;;;;;2018.5;-511.8671875
-1;171800;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;171900;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;-246.0
-1;171900;KELP;2017;26;;;;;2020;26;;;;;2018.5;-512.984375
-1;172000;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;172000;KELP;2017;28;;;;;2020;28;;;;;2018.5;-518.6328125
-1;172100;KELP;2017;31;;;;;2020;25;;;;;2018.5;-521.390625
-1;172100;RAINFOREST_RESIN;10002;1;9996;2;9995;23;10004;2;10005;23;;;10003.0;-246.0
-1;172200;KELP;2017;26;;;;;2020;26;;;;;2018.5;-526.78125
-1;172200;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;172300;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;172300;KELP;2017;22;;;;;2020;22;;;;;2018.5;-511.578125
-1;172400;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;172400;KELP;2017;23;;;;;2021;23;;;;;2019.0;-501.0078125
-1;172500;KELP;2017;22;;;;;2019;1;2020;22;;;2018.0;-512.015625
-1;172500;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;172600;KELP;2017;33;;;;;2020;29;;;;;2018.5;-523.8359375
-1;172600;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;172700;RAINFOREST_RESIN;9996;2;9995;27;;;9998;3;10004;2;10005;27;9997.0;-246.0
-1;172700;KELP;2017;29;;;;;2020;29;;;;;2018.5;-522.609375
-1;172800;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;172800;KELP;2017;20;;;;;2020;20;;;;;2018.5;-515.515625
-1;172900;KELP;2017;27;;;;;2019;1;2020;27;;;2018.0;-514.1953125
-1;172900;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;173000;KELP;2017;37;;;;;2020;31;;;;;2018.5;-515.8671875
-1;173000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;173100;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;173100;KELP;2017;21;;;;;2020;21;;;;;2018.5;-510.2890625
-1;173200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;173200;KELP;2017;23;;;;;2018;1;2021;23;;;2017.5;-496.1875
-1;173300;KELP;2017;25;;;;;2020;27;;;;;2018.5;-521.59375
-1;173300;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;173400;KELP;2017;26;;;;;2020;26;;;;;2018.5;-522.171875
-1;173400;RAINFOREST_RESIN;9996;1;9995;25;;;10002;9;10004;1;10005;25;9999.0;-246.0
-1;173500;RAINFOREST_RESIN;9996;1;9995;30;;;9998;3;10004;1;10005;30;9997.0;-246.0
-1;173500;KELP;2018;5;2017;31;;;2020;1;2021;30;;;2019.0;-506.234375
-1;173600;RAINFOREST_RESIN;9998;7;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;173600;KELP;2017;29;;;;;2021;29;;;;;2019.0;-502.7265625
-1;173700;KELP;2019;1;2017;27;;;2021;27;;;;;2020.0;-501.546875
-1;173700;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;173800;KELP;2019;4;2017;29;;;2020;1;2021;28;;;2019.5;-507.3515625
-1;173800;RAINFOREST_RESIN;9996;1;9995;28;;;10002;6;10004;1;10005;28;9999.0;-246.0
-1;173900;RAINFOREST_RESIN;9998;1;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;173900;KELP;2020;1;2017;28;;;2021;28;;;;;2020.5;-496.546875
-1;174000;RAINFOREST_RESIN;9998;9;9996;1;9995;24;10004;1;10005;24;;;10001.0;-246.0
-1;174000;KELP;2017;25;;;;;2021;25;;;;;2019.0;-502.53125
-1;174100;KELP;2017;30;;;;;2020;22;;;;;2018.5;-515.9609375
-1;174100;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;174200;KELP;2017;25;;;;;2020;25;;;;;2018.5;-528.6328125
-1;174200;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;174300;RAINFOREST_RESIN;9995;29;;;;;10002;2;10005;29;;;9998.5;-246.0
-1;174300;KELP;2017;29;;;;;2020;29;;;;;2018.5;-523.0703125
-1;174400;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;174400;KELP;2017;29;;;;;2020;28;;;;;2018.5;-521.0078125
-1;174500;KELP;2017;23;;;;;2020;23;;;;;2018.5;-518.9609375
-1;174500;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;174600;KELP;2017;23;;;;;2020;23;;;;;2018.5;-509.2578125
-1;174600;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;174700;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;174700;KELP;2017;29;;;;;2021;29;;;;;2019.0;-498.2421875
-1;174800;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;174800;KELP;2019;1;2017;22;;;2020;22;;;;;2019.5;-512.640625
-1;174900;KELP;2017;31;;;;;2020;31;;;;;2018.5;-509.703125
-1;174900;RAINFOREST_RESIN;9998;2;9996;1;9995;30;10004;1;10005;30;;;10001.0;-246.0
-1;175000;KELP;2017;27;;;;;2020;27;;;;;2018.5;-509.2578125
-1;175000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;175100;RAINFOREST_RESIN;9998;1;9996;2;9995;25;10004;2;10005;25;;;10001.0;-246.0
-1;175100;KELP;2017;27;;;;;2019;5;2020;27;;;2018.0;-509.265625
-1;175200;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;175200;KELP;2017;36;;;;;2020;29;;;;;2018.5;-509.8515625
-1;175300;KELP;2017;22;;;;;2020;22;;;;;2018.5;-515.0078125
-1;175300;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;175400;KELP;2017;26;;;;;2020;26;;;;;2018.5;-514.6328125
-1;175400;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;175500;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;175500;KELP;2017;29;;;;;2020;29;;;;;2018.5;-514.6875
-1;175600;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;175600;KELP;2017;26;;;;;2020;26;;;;;2018.5;-521.4375
-1;175700;KELP;2017;24;;;;;2020;24;;;;;2018.5;-513.1953125
-1;175700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;175800;KELP;2017;29;;;;;2020;29;;;;;2018.5;-510.09375
-1;175800;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;175900;RAINFOREST_RESIN;9996;2;9995;29;;;10002;9;10004;2;10005;29;9999.0;-246.0
-1;175900;KELP;2017;31;;;;;2019;8;2021;31;;;2018.0;-502.5546875
-1;176000;RAINFOREST_RESIN;10002;1;9995;30;;;10005;30;;;;;10003.5;-246.0
-1;176000;KELP;2017;29;;;;;2021;30;;;;;2019.0;-500.1953125
-1;176100;KELP;2018;2;2017;22;;;2021;22;;;;;2019.5;-494.625
-1;176100;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;176200;KELP;2017;29;;;;;2021;29;;;;;2019.0;-496.828125
-1;176200;RAINFOREST_RESIN;9998;4;9996;1;9995;28;10004;1;10005;28;;;10001.0;-246.0
-1;176300;RAINFOREST_RESIN;9996;1;9995;22;;;10002;2;10004;1;10005;22;9999.0;-246.0
-1;176300;KELP;2018;23;;;;;2021;23;;;;;2019.5;-470.6484375
-1;176400;RAINFOREST_RESIN;9995;24;;;;;10002;9;10005;24;;;9998.5;-246.0
-1;176400;KELP;2018;24;;;;;2021;24;;;;;2019.5;-484.71875
-1;176500;KELP;2017;28;;;;;2021;28;;;;;2019.0;-489.203125
-1;176500;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;176600;KELP;2018;27;;;;;2021;23;;;;;2019.5;-478.0390625
-1;176600;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;176700;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;176700;KELP;2018;21;;;;;2020;6;2021;21;;;2019.0;-467.3125
-1;176800;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;176800;KELP;2018;29;;;;;2021;29;;;;;2019.5;-469.4453125
-1;176900;KELP;2018;21;;;;;2020;4;2021;21;;;2019.0;-476.8984375
-1;176900;RAINFOREST_RESIN;9996;1;9995;20;;;10002;8;10004;1;10005;20;9999.0;-246.0
-1;177000;RAINFOREST_RESIN;9996;1;9995;23;;;10002;8;10004;1;10005;23;9999.0;-246.0
-1;177000;KELP;2018;32;;;;;2021;24;;;;;2019.5;-480.3984375
-1;177100;KELP;2018;28;;;;;2021;28;;;;;2019.5;-477.9140625
-1;177100;RAINFOREST_RESIN;9998;3;9995;28;;;10005;28;;;;;10001.5;-246.0
-1;177200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;177200;KELP;2018;21;;;;;2022;21;;;;;2020.0;-457.7734375
-1;177300;KELP;2018;20;;;;;2020;2;2021;20;;;2019.0;-467.734375
-1;177300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;177400;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;177400;KELP;2018;21;;;;;2021;22;;;;;2019.5;-460.140625
-1;177500;KELP;2018;28;;;;;2020;3;2021;1;2022;27;2019.0;-455.1484375
-1;177500;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;177600;RAINFOREST_RESIN;9996;1;9995;24;;;9998;1;10004;1;10005;24;9997.0;-246.0
-1;177600;KELP;2018;25;;;;;2021;1;2022;24;;;2019.5;-453.984375
-1;177700;KELP;2018;22;;;;;2022;22;;;;;2020.0;-448.0703125
-1;177700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;177800;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;177800;KELP;2018;26;;;;;2022;26;;;;;2020.0;-448.6796875
-1;177900;KELP;2018;25;;;;;2022;25;;;;;2020.0;-444.46875
-1;177900;RAINFOREST_RESIN;9996;1;9995;24;;;9998;12;10002;3;10004;1;9997.0;-246.0
-1;178000;RAINFOREST_RESIN;9998;7;9996;2;9995;21;10004;2;10005;21;;;10001.0;-246.0
-1;178000;KELP;2019;23;;;;;2022;23;;;;;2020.5;-435.34375
-1;178100;KELP;2019;1;2018;27;;;2022;28;;;;;2020.5;-441.453125
-1;178100;RAINFOREST_RESIN;9998;6;9996;1;9995;27;10004;1;10005;27;;;10001.0;-246.0
-1;178200;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;-246.0
-1;178200;KELP;2018;26;;;;;2022;26;;;;;2020.0;-443.375
-1;178300;KELP;2019;1;2018;29;;;2022;30;;;;;2020.5;-439.8828125
-1;178300;RAINFOREST_RESIN;9998;3;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;178400;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;178400;KELP;2018;27;;;;;2022;27;;;;;2020.0;-453.140625
-1;178500;KELP;2017;26;;;;;2021;26;;;;;2019.0;-491.125
-1;178500;RAINFOREST_RESIN;9995;26;;;;;10002;10;10005;26;;;9998.5;-246.0
-1;178600;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;178600;KELP;2018;25;;;;;2021;20;;;;;2019.5;-486.9921875
-1;178700;KELP;2018;1;2017;27;;;2019;8;2021;29;;;2018.5;-488.9140625
-1;178700;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;178800;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;178800;KELP;2018;37;;;;;2021;31;;;;;2019.5;-484.2265625
-1;178900;KELP;2018;24;;;;;2021;22;;;;;2019.5;-483.40625
-1;178900;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;179000;RAINFOREST_RESIN;9998;4;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;179000;KELP;2018;3;2017;29;;;2021;30;;;;;2019.5;-487.5546875
-1;179100;KELP;2018;29;;;;;2021;25;;;;;2019.5;-486.015625
-1;179100;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;179200;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;179200;KELP;2018;2;2017;29;;;2021;31;;;;;2019.5;-489.0859375
-1;179300;KELP;2017;32;;;;;2021;32;;;;;2019.0;-496.8984375
-1;179300;RAINFOREST_RESIN;9998;7;9996;2;9995;30;10004;2;10005;30;;;10001.0;-246.0
-1;179400;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;179400;KELP;2018;7;2017;25;;;2021;25;;;;;2019.5;-500.578125
-1;179500;KELP;2017;29;;;;;2021;29;;;;;2019.0;-504.7890625
-1;179500;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;179600;RAINFOREST_RESIN;9998;5;9996;2;9995;21;10004;2;10005;21;;;10001.0;-246.0
-1;179600;KELP;2017;23;;;;;2019;4;2021;23;;;2018.0;-498.5625
-1;179700;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;179700;KELP;2019;1;2017;26;;;2020;26;;;;;2019.5;-521.1015625
-1;179800;RAINFOREST_RESIN;9995;24;;;;;10002;9;10005;24;;;9998.5;-246.0
-1;179800;KELP;2017;27;;;;;2020;24;;;;;2018.5;-516.7109375
-1;179900;KELP;2017;27;;;;;2019;1;2020;27;;;2018.0;-516.1640625
-1;179900;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;180000;KELP;2017;24;;;;;2020;24;;;;;2018.5;-528.4609375
-1;180000;RAINFOREST_RESIN;9996;1;9995;23;;;10002;7;10004;1;10005;23;9999.0;-246.0
-1;180100;RAINFOREST_RESIN;9995;26;;;;;9998;3;10002;2;10005;26;9996.5;-246.0
-1;180100;KELP;2017;26;;;;;2020;26;;;;;2018.5;-518.3125
-1;180200;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;180200;KELP;2017;24;;;;;2020;24;;;;;2018.5;-510.65625
-1;180300;KELP;2017;24;;;;;2021;24;;;;;2019.0;-500.6484375
-1;180300;RAINFOREST_RESIN;9995;24;;;;;9998;4;10005;24;;;9996.5;-246.0
-1;180400;KELP;2018;8;2017;25;;;2021;26;;;;;2019.5;-488.828125
-1;180400;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;180500;RAINFOREST_RESIN;9995;23;;;;;10000;3;10005;23;;;9997.5;-246.0
-1;180500;KELP;2020;2;2018;23;;;2021;23;;;;;2020.5;-484.7890625
-1;180600;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;180600;KELP;2018;28;;;;;2021;26;;;;;2019.5;-484.3515625
-1;180700;KELP;2018;6;2017;24;;;2021;25;;;;;2019.5;-489.1953125
-1;180700;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;180800;KELP;2018;30;;;;;2021;30;;;;;2019.5;-477.8125
-1;180800;RAINFOREST_RESIN;9996;1;9995;29;;;10002;4;10004;1;10005;29;9999.0;-246.0
-1;180900;RAINFOREST_RESIN;9998;9;9996;1;9995;26;10004;1;10005;26;;;10001.0;-246.0
-1;180900;KELP;2018;27;;;;;2021;27;;;;;2019.5;-460.8046875
-1;181000;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;181000;KELP;2018;32;;;;;2020;1;2021;32;;;2019.0;-465.4921875
-1;181100;KELP;2018;27;;;;;2021;27;;;;;2019.5;-466.875
-1;181100;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;-246.0
-1;181200;KELP;2018;24;;;;;2021;24;;;;;2019.5;-465.375
-1;181200;RAINFOREST_RESIN;9998;3;9996;1;9995;23;10004;1;10005;23;;;10001.0;-246.0
-1;181300;RAINFOREST_RESIN;9995;27;;;;;10002;10;10005;27;;;9998.5;-246.0
-1;181300;KELP;2018;27;;;;;2021;27;;;;;2019.5;-473.09375
-1;181400;RAINFOREST_RESIN;9996;2;9995;28;;;10002;1;10004;2;10005;28;9999.0;-246.0
-1;181400;KELP;2018;30;;;;;2021;30;;;;;2019.5;-469.0390625
-1;181500;KELP;2018;24;;;;;2021;25;;;;;2019.5;-469.515625
-1;181500;RAINFOREST_RESIN;9998;6;9995;25;;;10005;25;;;;;10001.5;-246.0
-1;181600;KELP;2018;29;;;;;2020;6;2021;31;;;2019.0;-479.734375
-1;181600;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;181700;RAINFOREST_RESIN;9998;7;9995;20;;;10005;20;;;;;10001.5;-246.0
-1;181700;KELP;2018;27;;;;;2021;20;;;;;2019.5;-480.71875
-1;181800;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;181800;KELP;2018;27;;;;;2021;28;;;;;2019.5;-485.8671875
-1;181900;KELP;2017;28;;;;;2019;1;2021;28;;;2018.0;-496.0625
-1;181900;RAINFOREST_RESIN;10002;1;9998;5;9995;28;10005;28;;;;;10003.5;-246.0
-1;182000;KELP;2018;25;;;;;2021;25;;;;;2019.5;-485.15625
-1;182000;RAINFOREST_RESIN;10002;1;9998;2;9996;1;10004;1;10005;24;;;10003.0;-246.0
-1;182100;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;182100;KELP;2018;30;;;;;2021;32;;;;;2019.5;-484.7109375
-1;182200;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;-246.0
-1;182200;KELP;2020;1;2018;28;;;2021;28;;;;;2020.5;-487.2421875
-1;182300;KELP;2018;4;2017;25;;;2021;26;;;;;2019.5;-487.9140625
-1;182300;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;182400;KELP;2017;32;;;;;2021;32;;;;;2019.0;-493.0625
-1;182400;RAINFOREST_RESIN;9996;2;9995;30;;;10002;3;10004;2;10005;30;9999.0;-246.0
-1;182500;RAINFOREST_RESIN;10002;4;9995;20;;;10005;20;;;;;10003.5;-246.0
-1;182500;KELP;2018;1;2017;20;;;2021;20;;;;;2019.5;-491.625
-1;182600;RAINFOREST_RESIN;9996;1;9995;22;;;10002;9;10004;1;10005;22;9999.0;-246.0
-1;182600;KELP;2018;1;2017;22;;;2021;23;;;;;2019.5;-490.046875
-1;182700;KELP;2018;25;;;;;2021;25;;;;;2019.5;-475.9609375
-1;182700;RAINFOREST_RESIN;9998;1;9995;25;;;10005;25;;;;;10001.5;-246.0
-1;182800;KELP;2018;27;;;;;2019;1;2022;27;;;2018.5;-443.078125
-1;182800;RAINFOREST_RESIN;9995;27;;;;;10002;2;10005;27;;;9998.5;-246.0
-1;182900;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;182900;KELP;2019;34;;;;;2022;30;;;;;2020.5;-436.40625
-1;183000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;183000;KELP;2019;28;;;;;2022;22;;;;;2020.5;-415.28125
-1;183100;KELP;2021;1;2020;3;2019;21;2022;1;2023;20;;;2021.5;-404.8203125
-1;183100;RAINFOREST_RESIN;9998;1;9996;1;9995;20;10004;1;10005;20;;;10001.0;-246.0
-1;183200;KELP;2019;30;;;;;2023;30;;;;;2021.0;-395.71875
-1;183200;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;183300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;183300;KELP;2020;20;;;;;2023;20;;;;;2021.5;-371.03125
-1;183400;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;183400;KELP;2020;23;;;;;2023;23;;;;;2021.5;-368.5
-1;183500;KELP;2019;29;;;;;2021;3;2023;29;;;2020.0;-393.4765625
-1;183500;RAINFOREST_RESIN;9996;1;9995;28;;;10002;8;10004;1;10005;28;9999.0;-246.0
-1;183600;KELP;2020;3;2019;29;;;2023;29;;;;;2021.5;-397.3203125
-1;183600;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;183700;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;183700;KELP;2020;2;2019;29;;;2023;31;;;;;2021.5;-388.265625
-1;183800;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;183800;KELP;2020;30;;;;;2023;30;;;;;2021.5;-386.8203125
-1;183900;KELP;2019;24;;;;;2021;2;2023;24;;;2020.0;-394.5625
-1;183900;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;184000;KELP;2019;26;;;;;2022;26;;;;;2020.5;-409.484375
-1;184000;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;184100;RAINFOREST_RESIN;9995;22;;;;;10002;4;10005;22;;;9998.5;-246.0
-1;184100;KELP;2022;1;2019;22;;;2023;22;;;;;2022.5;-396.203125
-1;184200;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;184200;KELP;2020;27;;;;;2023;2;2024;25;;;2021.5;-353.765625
-1;184300;KELP;2021;24;;;;;2024;24;;;;;2022.5;-323.625
-1;184300;RAINFOREST_RESIN;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;184400;KELP;2021;2;2020;27;;;2024;29;;;;;2022.5;-338.4453125
-1;184400;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;-246.0
-1;184500;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;184500;KELP;2021;1;2020;24;;;2024;25;;;;;2022.5;-340.25
-1;184600;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;184600;KELP;2020;24;;;;;2022;6;2024;24;;;2021.0;-349.2109375
-1;184700;KELP;2022;1;2020;24;;;2024;24;;;;;2023.0;-357.890625
-1;184700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;184800;KELP;2020;23;;;;;2022;5;2023;23;;;2021.0;-373.109375
-1;184800;RAINFOREST_RESIN;10002;5;9995;23;;;10005;23;;;;;10003.5;-246.0
-1;184900;RAINFOREST_RESIN;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;-246.0
-1;184900;KELP;2020;23;;;;;2023;23;;;;;2021.5;-372.9453125
-1;185000;RAINFOREST_RESIN;9996;2;9995;24;;;10002;1;10004;2;10005;24;9999.0;-246.0
-1;185000;KELP;2020;26;;;;;2023;26;;;;;2021.5;-379.5078125
-1;185100;KELP;2021;8;2020;31;;;2023;2;2024;29;;;2022.0;-357.515625
-1;185100;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;185200;KELP;2020;26;;;;;2024;26;;;;;2022.0;-357.0
-1;185200;RAINFOREST_RESIN;10002;1;9995;26;;;10005;26;;;;;10003.5;-246.0
-1;185300;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;185300;KELP;2020;28;;;;;2023;1;2024;27;;;2021.5;-357.140625
-1;185400;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;185400;KELP;2020;23;;;;;2022;1;2023;23;;;2021.0;-361.46875
-1;185500;KELP;2020;25;;;;;2023;21;;;;;2021.5;-359.6875
-1;185500;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;-246.0
-1;185600;KELP;2020;21;;;;;2023;21;;;;;2021.5;-371.953125
-1;185600;RAINFOREST_RESIN;9998;9;9995;21;;;10005;21;;;;;10001.5;-246.0
-1;185700;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;185700;KELP;2020;21;;;;;2023;21;;;;;2021.5;-382.1796875
-1;185800;RAINFOREST_RESIN;9998;8;9995;21;;;10005;21;;;;;10001.5;-246.0
-1;185800;KELP;2020;21;;;;;2023;21;;;;;2021.5;-371.5625
-1;185900;KELP;2020;20;;;;;2022;5;2023;20;;;2021.0;-368.328125
-1;185900;RAINFOREST_RESIN;9995;20;;;;;10002;1;10005;20;;;9998.5;-246.0
-1;186000;RAINFOREST_RESIN;10002;4;9996;2;9995;24;10004;2;10005;24;;;10003.0;-246.0
-1;186000;KELP;2021;26;;;;;2024;26;;;;;2022.5;-313.0
-1;186100;KELP;2021;28;;;;;2022;4;2025;28;;;2021.5;-292.8828125
-1;186100;RAINFOREST_RESIN;9996;2;9995;26;;;10002;2;10004;2;10005;26;9999.0;-246.0
-1;186200;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;186200;KELP;2021;24;;;;;2023;7;2025;24;;;2022.0;-305.921875
-1;186300;KELP;2021;19;;;;;2024;29;;;;;2022.5;-317.984375
-1;186300;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;186400;RAINFOREST_RESIN;9995;30;;;;;9998;1;10005;30;;;9996.5;-246.0
-1;186400;KELP;2021;29;;;;;2024;30;;;;;2022.5;-319.109375
-1;186500;KELP;2021;31;;;;;2025;31;;;;;2023.0;-303.3203125
-1;186500;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;186600;RAINFOREST_RESIN;9998;10;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;186600;KELP;2021;29;;;;;2023;7;2024;2;2025;27;2022.0;-308.0234375
-1;186700;KELP;2021;27;;;;;2024;2;2025;25;;;2022.5;-308.640625
-1;186700;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;186800;RAINFOREST_RESIN;9995;20;;;;;10002;6;10005;20;;;9998.5;-246.0
-1;186800;KELP;2022;6;2021;20;;;2025;20;;;;;2023.5;-306.53125
-1;186900;KELP;2021;31;;;;;2024;31;;;;;2022.5;-309.84375
-1;186900;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;187000;RAINFOREST_RESIN;9998;1;9996;1;9995;30;10000;3;10004;1;10005;30;9999.0;-246.0
-1;187000;KELP;2021;31;;;;;2022;3;2023;7;2024;31;2021.5;-319.8046875
-1;187100;KELP;2021;20;;;;;2024;20;;;;;2022.5;-326.75
-1;187100;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;187200;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;187200;KELP;2021;23;;;;;2023;6;2024;23;;;2022.0;-329.265625
-1;187300;KELP;2021;27;;;;;2023;7;2024;27;;;2022.0;-324.359375
-1;187300;RAINFOREST_RESIN;9995;27;;;;;10002;10;10005;27;;;9998.5;-246.0
-1;187400;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;187400;KELP;2023;1;2021;2;2020;21;2024;23;;;;;2023.5;-337.6484375
-1;187500;KELP;2020;21;;;;;2024;21;;;;;2022.0;-347.1875
-1;187500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;-246.0
-1;187600;RAINFOREST_RESIN;9998;1;9996;1;9995;23;10004;1;10005;23;;;10001.0;-246.0
-1;187600;KELP;2020;24;;;;;2022;2;2024;24;;;2021.0;-347.1015625
-1;187700;KELP;2022;8;2021;6;2020;27;2024;27;;;;;2023.0;-339.703125
-1;187700;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;187800;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;187800;KELP;2020;21;;;;;2023;21;;;;;2021.5;-362.0625
-1;187900;KELP;2020;26;;;;;2024;26;;;;;2022.0;-352.359375
-1;187900;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;188000;RAINFOREST_RESIN;10002;1;9996;2;9995;27;10004;2;10005;27;;;10003.0;-246.0
-1;188000;KELP;2020;29;;;;;2022;2;2024;29;;;2021.0;-353.4296875
-1;188100;KELP;2020;26;;;;;2022;5;2023;26;;;2021.0;-374.046875
-1;188100;RAINFOREST_RESIN;9995;26;;;;;10002;8;10005;26;;;9998.5;-246.0
-1;188200;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;-246.0
-1;188200;KELP;2020;22;;;;;2023;22;;;;;2021.5;-373.40625
-1;188300;KELP;2020;21;;;;;2023;21;;;;;2021.5;-384.9140625
-1;188300;RAINFOREST_RESIN;9996;1;9995;20;;;10002;3;10004;1;10005;20;9999.0;-246.0
-1;188400;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10004;1;10005;25;9997.0;-246.0
-1;188400;KELP;2020;26;;;;;2023;26;;;;;2021.5;-372.2890625
-1;188500;KELP;2019;29;;;;;2023;29;;;;;2021.0;-394.25
-1;188500;RAINFOREST_RESIN;9996;1;9995;28;;;10002;1;10004;1;10005;28;9999.0;-246.0
-1;188600;KELP;2020;23;;;;;2023;23;;;;;2021.5;-384.40625
-1;188600;RAINFOREST_RESIN;9995;23;;;;;10002;8;10005;23;;;9998.5;-246.0
-1;188700;RAINFOREST_RESIN;9995;28;;;;;10002;8;10005;28;;;9998.5;-246.0
-1;188700;KELP;2020;28;;;;;2023;28;;;;;2021.5;-382.0
-1;188800;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;188800;KELP;2020;27;;;;;2023;27;;;;;2021.5;-383.6015625
-1;188900;KELP;2020;28;;;;;2023;24;;;;;2021.5;-372.484375
-1;188900;RAINFOREST_RESIN;9996;2;9995;22;;;10002;1;10004;2;10005;22;9999.0;-246.0
-1;189000;KELP;2020;22;;;;;2023;23;;;;;2021.5;-371.5390625
-1;189000;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;189100;RAINFOREST_RESIN;10000;5;9995;26;;;10005;26;;;;;10002.5;-246.0
-1;189100;KELP;2021;5;2020;26;;;2023;26;;;;;2022.0;-380.1796875
-1;189200;RAINFOREST_RESIN;9996;1;9995;26;;;10002;4;10004;1;10005;26;9999.0;-246.0
-1;189200;KELP;2021;2;2019;27;;;2023;27;;;;;2022.0;-392.4609375
-1;189300;KELP;2022;1;2020;2;2019;24;2023;26;;;;;2022.5;-391.9609375
-1;189300;RAINFOREST_RESIN;9998;9;9996;2;9995;24;10004;2;10005;24;;;10001.0;-246.0
-1;189400;KELP;2020;37;;;;;2023;30;;;;;2021.5;-369.890625
-1;189400;RAINFOREST_RESIN;9995;30;;;;;10002;9;10005;30;;;9998.5;-246.0
-1;189500;RAINFOREST_RESIN;9995;20;;;;;9998;1;10005;20;;;9996.5;-246.0
-1;189500;KELP;2020;20;;;;;2024;20;;;;;2022.0;-354.9921875
-1;189600;RAINFOREST_RESIN;9998;7;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;189600;KELP;2020;22;;;;;2023;22;;;;;2021.5;-374.9375
-1;189700;KELP;2020;22;;;;;2022;4;2023;22;;;2021.0;-368.0078125
-1;189700;RAINFOREST_RESIN;9998;8;9995;22;;;10005;22;;;;;10001.5;-246.0
-1;189800;KELP;2020;32;;;;;2023;24;;;;;2021.5;-373.140625
-1;189800;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;189900;RAINFOREST_RESIN;10000;3;9998;5;9996;1;10004;1;10005;26;;;10002.0;-246.0
-1;189900;KELP;2021;3;2020;27;;;2022;4;2023;27;;;2021.5;-363.5546875
-1;190000;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;190000;KELP;2020;17;;;;;2023;26;;;;;2021.5;-360.4765625
-1;190100;KELP;2020;21;;;;;2023;1;2024;20;;;2021.5;-355.3828125
-1;190100;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;190200;KELP;2021;7;2020;20;;;2024;20;;;;;2022.5;-345.421875
-1;190200;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;190300;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;-246.0
-1;190300;KELP;2020;26;;;;;2022;5;2024;26;;;2021.0;-345.390625
-1;190400;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;190400;KELP;2020;27;;;;;2024;27;;;;;2022.0;-339.234375
-1;190500;KELP;2021;3;2020;28;;;2024;28;;;;;2022.5;-342.71875
-1;190500;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;190600;KELP;2020;29;;;;;2024;30;;;;;2022.0;-351.0078125
-1;190600;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;190700;RAINFOREST_RESIN;10002;2;9998;6;9996;2;10004;2;10005;28;;;10003.0;-246.0
-1;190700;KELP;2020;30;;;;;2024;30;;;;;2022.0;-348.2578125
-1;190800;RAINFOREST_RESIN;9995;20;;;;;9998;5;10002;9;10005;20;9996.5;-246.0
-1;190800;KELP;2020;20;;;;;2024;20;;;;;2022.0;-340.015625
-1;190900;KELP;2023;1;2020;23;;;2024;23;;;;;2023.5;-341.484375
-1;190900;RAINFOREST_RESIN;10002;1;9995;23;;;10005;23;;;;;10003.5;-246.0
-1;191000;KELP;2020;27;;;;;2024;27;;;;;2022.0;-343.421875
-1;191000;RAINFOREST_RESIN;9996;2;9995;25;;;10002;1;10004;2;10005;25;9999.0;-246.0
-1;191100;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;-246.0
-1;191100;KELP;2020;24;;;;;2023;2;2024;22;;;2021.5;-355.8984375
-1;191200;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;191200;KELP;2020;22;;;;;2023;22;;;;;2021.5;-363.75
-1;191300;KELP;2021;6;2020;28;;;2023;26;;;;;2022.0;-372.78125
-1;191300;RAINFOREST_RESIN;10000;6;9998;2;9996;2;10004;2;10005;24;;;10002.0;-246.0
-1;191400;KELP;2020;32;;;;;2023;32;;;;;2021.5;-375.96875
-1;191400;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;191500;RAINFOREST_RESIN;9996;2;9995;20;;;9998;4;10004;2;10005;20;9997.0;-246.0
-1;191500;KELP;2020;22;;;;;2023;22;;;;;2021.5;-381.8046875
-1;191600;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;191600;KELP;2020;22;;;;;2023;22;;;;;2021.5;-381.21875
-1;191700;KELP;2020;2;2019;21;;;2023;23;;;;;2021.5;-391.59375
-1;191700;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;191800;KELP;2022;1;2019;31;;;2023;31;;;;;2022.5;-395.75
-1;191800;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;191900;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;191900;KELP;2020;4;2019;29;;;2022;1;2023;28;;;2021.0;-403.8203125
-1;192000;RAINFOREST_RESIN;9996;2;9995;22;;;10002;9;10004;2;10005;22;9999.0;-246.0
-1;192000;KELP;2019;24;;;;;2022;24;;;;;2020.5;-412.3828125
-1;192100;KELP;2019;32;;;;;2023;32;;;;;2021.0;-401.7890625
-1;192100;RAINFOREST_RESIN;9996;2;9995;30;;;9998;1;10004;2;10005;30;9997.0;-246.0
-1;192200;KELP;2019;30;;;;;2023;30;;;;;2021.0;-400.40625
-1;192200;RAINFOREST_RESIN;9995;30;;;;;9998;2;10005;30;;;9996.5;-246.0
-1;192300;RAINFOREST_RESIN;9998;2;9996;1;9995;23;10004;1;10005;23;;;10001.0;-246.0
-1;192300;KELP;2020;1;2019;23;;;2023;24;;;;;2021.5;-390.96875
-1;192400;RAINFOREST_RESIN;9998;9;9995;21;;;10005;21;;;;;10001.5;-246.0
-1;192400;KELP;2019;21;;;;;2023;21;;;;;2021.0;-395.7265625
-1;192500;KELP;2022;1;2019;21;;;2023;21;;;;;2022.5;-394.8203125
-1;192500;RAINFOREST_RESIN;9995;21;;;;;9998;1;10002;6;10005;21;9996.5;-246.0
-1;192600;KELP;2019;24;;;;;2021;6;2023;24;;;2020.0;-399.5234375
-1;192600;RAINFOREST_RESIN;10002;3;9996;2;9995;22;10004;2;10005;22;;;10003.0;-246.0
-1;192700;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;192700;KELP;2019;21;;;;;2023;21;;;;;2021.0;-400.2734375
-1;192800;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;-246.0
-1;192800;KELP;2019;29;;;;;2023;29;;;;;2021.0;-400.2578125
-1;192900;KELP;2020;25;;;;;2023;25;;;;;2021.5;-379.015625
-1;192900;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;193000;KELP;2019;31;;;;;2022;31;;;;;2020.5;-414.125
-1;193000;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;-246.0
-1;193100;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;193100;KELP;2019;28;;;;;2022;28;;;;;2020.5;-427.90625
-1;193200;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;193200;KELP;2019;30;;;;;2022;30;;;;;2020.5;-427.3515625
-1;193300;KELP;2019;29;;;;;2022;29;;;;;2020.5;-426.8046875
-1;193300;RAINFOREST_RESIN;10002;4;9996;1;9995;28;10004;1;10005;28;;;10003.0;-246.0
-1;193400;KELP;2018;21;;;;;2022;21;;;;;2020.0;-448.8203125
-1;193400;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;-246.0
-1;193500;RAINFOREST_RESIN;9996;2;9995;27;;;9998;1;10004;2;10005;27;9997.0;-246.0
-1;193500;KELP;2018;32;;;;;2021;29;;;;;2019.5;-465.484375
-1;193600;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;193600;KELP;2018;25;;;;;2021;25;;;;;2019.5;-465.5390625
-1;193700;KELP;2018;30;;;;;2020;7;2021;30;;;2019.0;-469.625
-1;193700;RAINFOREST_RESIN;9995;30;;;;;9998;1;10005;30;;;9996.5;-246.0
-1;193800;KELP;2020;1;2018;30;;;2021;30;;;;;2020.5;-463.3125
-1;193800;RAINFOREST_RESIN;9995;30;;;;;10002;10;10005;30;;;9998.5;-246.0
-1;193900;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;193900;KELP;2018;35;;;;;2021;31;;;;;2019.5;-463.8046875
-1;194000;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;194000;KELP;2018;24;;;;;2020;8;2021;25;;;2019.0;-479.0546875
-1;194100;KELP;2020;1;2018;25;;;2021;25;;;;;2020.5;-479.9609375
-1;194100;RAINFOREST_RESIN;9996;1;9995;24;;;9998;1;10004;1;10005;24;9997.0;-246.0
-1;194200;KELP;2018;33;;;;;2021;32;;;;;2019.5;-478.015625
-1;194200;RAINFOREST_RESIN;9998;1;9996;2;9995;30;10004;2;10005;30;;;10001.0;-246.0
-1;194300;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;-246.0
-1;194300;KELP;2018;29;;;;;2021;30;;;;;2019.5;-470.4765625
-1;194400;RAINFOREST_RESIN;9996;2;9995;28;;;10002;6;10004;2;10005;28;9999.0;-246.0
-1;194400;KELP;2018;30;;;;;2021;30;;;;;2019.5;-472.21875
-1;194500;KELP;2018;34;;;;;2021;31;;;;;2019.5;-470.4375
-1;194500;RAINFOREST_RESIN;9996;1;9995;30;;;10002;6;10004;1;10005;30;9999.0;-246.0
-1;194600;KELP;2018;30;;;;;2021;31;;;;;2019.5;-479.015625
-1;194600;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;-246.0
-1;194700;RAINFOREST_RESIN;9996;2;9995;23;;;10002;7;10004;2;10005;23;9999.0;-246.0
-1;194700;KELP;2018;25;;;;;2021;25;;;;;2019.5;-483.2109375
-1;194800;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;-246.0
-1;194800;KELP;2018;25;;;;;2021;22;;;;;2019.5;-483.390625
-1;194900;KELP;2017;25;;;;;2021;25;;;;;2019.0;-497.9296875
-1;194900;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;195000;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;-246.0
-1;195000;KELP;2017;29;;;;;2021;29;;;;;2019.0;-501.1171875
-1;195100;KELP;2018;2;2017;25;;;2020;4;2021;27;;;2019.0;-487.4765625
-1;195100;RAINFOREST_RESIN;10002;1;9996;2;9995;25;10004;2;10005;25;;;10003.0;-246.0
-1;195200;RAINFOREST_RESIN;9998;6;9995;29;;;10005;29;;;;;10001.5;-246.0
-1;195200;KELP;2018;30;;;;;2021;29;;;;;2019.5;-486.2890625
-1;195300;KELP;2018;27;;;;;2021;27;;;;;2019.5;-476.25
-1;195300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;195400;RAINFOREST_RESIN;9996;1;9995;28;;;10002;10;10004;1;10005;28;9999.0;-246.0
-1;195400;KELP;2018;29;;;;;2021;29;;;;;2019.5;-466.265625
-1;195500;KELP;2018;28;;;;;2021;28;;;;;2019.5;-472.4140625
-1;195500;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;195600;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;195600;KELP;2018;25;;;;;2021;25;;;;;2019.5;-461.5859375
-1;195700;KELP;2018;22;;;;;2020;6;2022;22;;;2019.0;-448.0
-1;195700;RAINFOREST_RESIN;10002;1;9996;1;9995;21;10004;1;10005;21;;;10003.0;-246.0
-1;195800;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;195800;KELP;2019;2;2018;30;;;2021;8;2022;32;;;2020.0;-438.359375
-1;195900;KELP;2019;27;;;;;2022;27;;;;;2020.5;-426.4765625
-1;195900;RAINFOREST_RESIN;9996;1;9995;26;;;9998;1;10004;1;10005;26;9997.0;-246.0
-1;196000;RAINFOREST_RESIN;10002;2;9998;3;9995;22;10005;22;;;;;10003.5;-246.0
-1;196000;KELP;2021;1;2019;22;;;2022;22;;;;;2021.5;-421.34375
-1;196100;KELP;2019;24;;;;;2023;24;;;;;2021.0;-403.40625
-1;196100;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;196200;RAINFOREST_RESIN;9998;3;9996;1;9995;21;10004;1;10005;21;;;10001.0;-246.0
-1;196200;KELP;2019;22;;;;;2022;1;2023;21;;;2020.5;-406.4609375
-1;196300;KELP;2019;25;;;;;2021;7;2023;25;;;2020.0;-398.3828125
-1;196300;RAINFOREST_RESIN;9995;25;;;;;10002;9;10005;25;;;9998.5;-246.0
-1;196400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;-246.0
-1;196400;KELP;2019;30;;;;;2023;30;;;;;2021.0;-399.828125
-1;196500;KELP;2022;1;2019;27;;;2023;27;;;;;2022.5;-397.2109375
-1;196500;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;-246.0
-1;196600;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;-246.0
-1;196600;KELP;2020;23;;;;;2023;23;;;;;2021.5;-386.6328125
-1;196700;KELP;2020;29;;;;;2023;26;;;;;2021.5;-381.4375
-1;196700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;-246.0
-1;196800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;-246.0
-1;196800;KELP;2020;28;;;;;2023;2;2024;26;;;2021.5;-356.296875
-1;196900;KELP;2020;33;;;;;2023;25;;;;;2021.5;-362.21875
-1;196900;RAINFOREST_RESIN;9998;9;9995;25;;;10005;25;;;;;10001.5;-246.0
-1;197000;RAINFOREST_RESIN;10000;6;9998;8;9996;1;10004;1;10005;25;;;10002.0;-246.0
-1;197000;KELP;2021;6;2020;26;;;2023;26;;;;;2022.0;-373.7734375
-1;197100;KELP;2020;32;;;;;2023;2;2024;30;;;2021.5;-357.0234375
-1;197100;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0
-1;197200;RAINFOREST_RESIN;9998;8;9996;1;9995;29;10004;1;10005;29;;;10001.0;-246.0
-1;197200;KELP;2020;30;;;;;2023;30;;;;;2021.5;-363.6953125
-1;197300;KELP;2020;25;;;;;2023;1;2024;24;;;2021.5;-356.53125
-1;197300;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;-246.0
-1;197400;RAINFOREST_RESIN;10002;1;9995;20;;;10005;20;;;;;10003.5;-246.0
-1;197400;KELP;2022;1;2021;8;2020;20;2024;20;;;;;2023.0;-355.6015625
-1;197500;KELP;2020;22;;;;;2023;23;;;;;2021.5;-362.21875
-1;197500;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;-246.0
-1;197600;KELP;2021;3;2020;20;;;2024;20;;;;;2022.5;-348.2578125
-1;197600;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;-246.0
-1;197700;RAINFOREST_RESIN;9996;2;9995;26;;;10002;4;10004;2;10005;26;9999.0;-246.0
-1;197700;KELP;2021;28;;;;;2024;28;;;;;2022.5;-322.28125
-1;197800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;-246.0
-1;197800;KELP;2021;25;;;;;2023;6;2024;25;;;2022.0;-318.5625
-1;197900;KELP;2021;24;;;;;2023;8;2024;24;;;2022.0;-318.1796875
-1;197900;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;-246.0
-1;198000;KELP;2021;28;;;;;2024;20;;;;;2022.5;-334.40625
-1;198000;RAINFOREST_RESIN;9995;20;;;;;10002;9;10005;20;;;9998.5;-246.0
-1;198100;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;198100;KELP;2021;28;;;;;2024;28;;;;;2022.5;-328.171875
-1;198200;RAINFOREST_RESIN;9998;3;9995;23;;;10005;23;;;;;10001.5;-246.0
-1;198200;KELP;2021;23;;;;;2024;23;;;;;2022.5;-325.9453125
-1;198300;KELP;2021;29;;;;;2024;29;;;;;2022.5;-321.5625
-1;198300;RAINFOREST_RESIN;9998;10;9996;2;9995;27;10004;2;10005;27;;;10001.0;-246.0
-1;198400;KELP;2021;30;;;;;2024;30;;;;;2022.5;-328.3125
-1;198400;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;-246.0
-1;198500;RAINFOREST_RESIN;9995;22;;;;;9998;10;10005;22;;;9996.5;-246.0
-1;198500;KELP;2023;1;2021;22;;;2024;22;;;;;2023.5;-335.875
-1;198600;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;-246.0
-1;198600;KELP;2021;24;;;;;2024;24;;;;;2022.5;-336.046875
-1;198700;KELP;2020;22;;;;;2022;7;2023;22;;;2021.0;-369.7265625
-1;198700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;-246.0
-1;198800;KELP;2021;27;;;;;2024;28;;;;;2022.5;-336.1328125
-1;198800;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;-246.0
-1;198900;RAINFOREST_RESIN;10002;1;9998;8;9996;1;10004;1;10005;26;;;10003.0;-246.0
-1;198900;KELP;2020;35;;;;;2021;5;2023;27;;;2020.5;-360.2890625
-1;199000;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;-246.0
-1;199000;KELP;2020;25;;;;;2023;25;;;;;2021.5;-361.1796875
-1;199100;KELP;2020;26;;;;;2022;3;2023;27;;;2021.0;-376.21875
-1;199100;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;-246.0
-1;199200;KELP;2021;3;2020;22;;;2023;22;;;;;2022.0;-366.5703125
-1;199200;RAINFOREST_RESIN;10000;5;9995;22;;;10002;9;10005;22;;;10001.0;-246.0
-1;199300;RAINFOREST_RESIN;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;-246.0
-1;199300;KELP;2020;24;;;;;2022;6;2024;24;;;2021.0;-349.5625
-1;199400;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;-246.0
-1;199400;KELP;2020;23;;;;;2021;4;2024;23;;;2020.5;-349.328125
-1;199500;KELP;2020;23;;;;;2024;23;;;;;2022.0;-343.671875
-1;199500;RAINFOREST_RESIN;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;-246.0
-1;199600;KELP;2020;22;;;;;2023;1;2024;21;;;2021.5;-354.1328125
-1;199600;RAINFOREST_RESIN;9996;1;9995;21;;;10002;7;10004;1;10005;21;9999.0;-246.0
-1;199700;RAINFOREST_RESIN;9998;8;9996;2;9995;25;10004;2;10005;25;;;10001.0;-246.0
-1;199700;KELP;2020;27;;;;;2023;2;2024;25;;;2021.5;-358.53125
-1;199800;RAINFOREST_RESIN;9995;21;;;;;10002;8;10005;21;;;9998.5;-246.0
-1;199800;KELP;2020;21;;;;;2023;21;;;;;2021.5;-360.59375
-1;199900;KELP;2020;32;;;;;2022;7;2023;2;2024;30;2021.0;-356.3515625
-1;199900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;-246.0




Trade History:
[
  {
    "timestamp": 0,
    "buyer": "SUBMISSION",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2029,
    "quantity": 29
  },
  {
    "timestamp": 0,
    "buyer": "SUBMISSION",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2029,
    "quantity": 2
  },
  {
    "timestamp": 0,
    "buyer": "SUBMISSION",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 0,
    "buyer": "SUBMISSION",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 29
  },
  {
    "timestamp": 100,
    "buyer": "SUBMISSION",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2028,
    "quantity": 2
  },
  {
    "timestamp": 100,
    "buyer": "SUBMISSION",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2029,
    "quantity": 17
  },
  {
    "timestamp": 100,
    "buyer": "SUBMISSION",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 100,
    "buyer": "SUBMISSION",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 17
  },
  {
    "timestamp": 1100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 1700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 8
  },
  {
    "timestamp": 1700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 1800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 1900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 1
  },
  {
    "timestamp": 2000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 2400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 2900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 2900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 11
  },
  {
    "timestamp": 3000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 1
  },
  {
    "timestamp": 3000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 3100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 3100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 3200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 3200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 3200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 3700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 3800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 14
  },
  {
    "timestamp": 3800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 3800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 4200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 4300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 4300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 4300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 4500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 4700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 7
  },
  {
    "timestamp": 4800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 2
  },
  {
    "timestamp": 4800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 5300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 5700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 6100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 6500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 6600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 6700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 6900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 1
  },
  {
    "timestamp": 6900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 7000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 2
  },
  {
    "timestamp": 7000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 7300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 2
  },
  {
    "timestamp": 7300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 7400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 7700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 8100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 1
  },
  {
    "timestamp": 8100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 8100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 8600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 8800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 9200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 10300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 10300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 10400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 10800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 10800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 10
  },
  {
    "timestamp": 11100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 11100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 11300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 3
  },
  {
    "timestamp": 11400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 2
  },
  {
    "timestamp": 11400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 11500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 11700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 11800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 12000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 12400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 15
  },
  {
    "timestamp": 12500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 13000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 13000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 13200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 13300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 2
  },
  {
    "timestamp": 13300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 13600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 14200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 15000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 2
  },
  {
    "timestamp": 15200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 15300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 15400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 15600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 2
  },
  {
    "timestamp": 15600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 15700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 15800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 16200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 16200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 16200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 16300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 16400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 16600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 16700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 16700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 16800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 5
  },
  {
    "timestamp": 18200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 4
  },
  {
    "timestamp": 18200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 18500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 1
  },
  {
    "timestamp": 19000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 10
  },
  {
    "timestamp": 19300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 19300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 19700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 19700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 20100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 20100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 20200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 20300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 20400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 4
  },
  {
    "timestamp": 20500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 20700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 21200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 21300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 21300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 7
  },
  {
    "timestamp": 21700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 8
  },
  {
    "timestamp": 22100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 22200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 6
  },
  {
    "timestamp": 22400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 22500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 11
  },
  {
    "timestamp": 22700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 22800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 22800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 23200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 23200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 23300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 23500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 23700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 23900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 24100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 24100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 24100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 7
  },
  {
    "timestamp": 24500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 2
  },
  {
    "timestamp": 24500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 24600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 5
  },
  {
    "timestamp": 24600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 24900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 4
  },
  {
    "timestamp": 25100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 25200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 25200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 25200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 25200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 5
  },
  {
    "timestamp": 25300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 25700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 25800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 26000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 7
  },
  {
    "timestamp": 26300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 26400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 26600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 26900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 27300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 27600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 27600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 27700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 5
  },
  {
    "timestamp": 27800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 27900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 28200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 5
  },
  {
    "timestamp": 28200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 28400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 29000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 29000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 8
  },
  {
    "timestamp": 29300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 2
  },
  {
    "timestamp": 29300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 10
  },
  {
    "timestamp": 29400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 29400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 29700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 30000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 30000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 30200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 10
  },
  {
    "timestamp": 30300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 1
  },
  {
    "timestamp": 30600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 30600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 1
  },
  {
    "timestamp": 30600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 31300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 13
  },
  {
    "timestamp": 31600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 31900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 32400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 32500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 32600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2027,
    "quantity": 2
  },
  {
    "timestamp": 32600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 32600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 32800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 33000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 6
  },
  {
    "timestamp": 33100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 33200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 33200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 10
  },
  {
    "timestamp": 33500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2026,
    "quantity": 1
  },
  {
    "timestamp": 33500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 33600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 6
  },
  {
    "timestamp": 34000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 34100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 34100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 34200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 9
  },
  {
    "timestamp": 34300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 34600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 35000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 35000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 35100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 35300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 35300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 8
  },
  {
    "timestamp": 35400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2025,
    "quantity": 1
  },
  {
    "timestamp": 35400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 35800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 36100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 36200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 36400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 36500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 37300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 37500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 37500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 37800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 38400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 6
  },
  {
    "timestamp": 38500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 38600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 38600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 38800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 39200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 39200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 39400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 39400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 39500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 40500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 40900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 40900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 40900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 40900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 8
  },
  {
    "timestamp": 41000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 41100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 2
  },
  {
    "timestamp": 41100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 41500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 5
  },
  {
    "timestamp": 41700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 41900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 42000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 42000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 5
  },
  {
    "timestamp": 42300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 7
  },
  {
    "timestamp": 42400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 42500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 42500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 42500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 42600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 2
  },
  {
    "timestamp": 42600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 42900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 2
  },
  {
    "timestamp": 42900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 43500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 43900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 44500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 44800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 45000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 45400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 45500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 3
  },
  {
    "timestamp": 45800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 45900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 2
  },
  {
    "timestamp": 45900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 45900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 46600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 2
  },
  {
    "timestamp": 46600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 46900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 47100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 4
  },
  {
    "timestamp": 47100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 47500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 48100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 48100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 48100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 48600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 48600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 48600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 49000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 49200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 11
  },
  {
    "timestamp": 49300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 49400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 9
  },
  {
    "timestamp": 49500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 6
  },
  {
    "timestamp": 49600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 49800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 5
  },
  {
    "timestamp": 49900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 49900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 6
  },
  {
    "timestamp": 49900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 50400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 50600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 2
  },
  {
    "timestamp": 50600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 50600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 6
  },
  {
    "timestamp": 50600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 51300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 13
  },
  {
    "timestamp": 51600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 51600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 51600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 51700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 4
  },
  {
    "timestamp": 51700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 11
  },
  {
    "timestamp": 51900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 52100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 8
  },
  {
    "timestamp": 52300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 52300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 52700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 52900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 6
  },
  {
    "timestamp": 53900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 53900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 54100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 54100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 54300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 54300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 54300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 54600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 54700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 4
  },
  {
    "timestamp": 55000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 55100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 2
  },
  {
    "timestamp": 55100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 55200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 2
  },
  {
    "timestamp": 55200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 3
  },
  {
    "timestamp": 55700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 55700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 56700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 2
  },
  {
    "timestamp": 57200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 57200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 57500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 5
  },
  {
    "timestamp": 57800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 57900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 2
  },
  {
    "timestamp": 57900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 58000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 58000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 11
  },
  {
    "timestamp": 58000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 58100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 3
  },
  {
    "timestamp": 58400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 15
  },
  {
    "timestamp": 58600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 58800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 12
  },
  {
    "timestamp": 59100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 59100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 59300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 60000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 60000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 60000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 60200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 60200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 8
  },
  {
    "timestamp": 60700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 60800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 60900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 3
  },
  {
    "timestamp": 61200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 2
  },
  {
    "timestamp": 61700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 61900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 61900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 62000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 62200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 62300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 62800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 62900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 63000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 63100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 63400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 5
  },
  {
    "timestamp": 63600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 63800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 63900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 12
  },
  {
    "timestamp": 64000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 64000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 64200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 64200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 64400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 64500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 65000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 65100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 65100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 65300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 65400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 3
  },
  {
    "timestamp": 66000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 66300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 66900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 67100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 9
  },
  {
    "timestamp": 67200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 67300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 5
  },
  {
    "timestamp": 67500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 67600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 12
  },
  {
    "timestamp": 68000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 6
  },
  {
    "timestamp": 68100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 68200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 68300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 68600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 68900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 69100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 69100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 8
  },
  {
    "timestamp": 69100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 69200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 69200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 69300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 69300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 69600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 69700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 69700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 70100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 70300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 70600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 70600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 70800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 71200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 71200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 71500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 3
  },
  {
    "timestamp": 71500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 71700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 8
  },
  {
    "timestamp": 71900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 72000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 72400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 72500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 72500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 72900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 72900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 73000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 73000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 73100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 73900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 5
  },
  {
    "timestamp": 73900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 3
  },
  {
    "timestamp": 74000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 74300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 74900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 75000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 75000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 9
  },
  {
    "timestamp": 75000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 75500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 75500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 75600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 75900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 6
  },
  {
    "timestamp": 76100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 76200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 14
  },
  {
    "timestamp": 76900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 76900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 3
  },
  {
    "timestamp": 77000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 2
  },
  {
    "timestamp": 77000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 77100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 77200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 77200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 10
  },
  {
    "timestamp": 77600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 3
  },
  {
    "timestamp": 77600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 7
  },
  {
    "timestamp": 77900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 78100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 78100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 3
  },
  {
    "timestamp": 78100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 78500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 78500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 10
  },
  {
    "timestamp": 78700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 2
  },
  {
    "timestamp": 78800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 78900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 78900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 79000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 3
  },
  {
    "timestamp": 79100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 79200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 5
  },
  {
    "timestamp": 79200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 79400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 79600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 13
  },
  {
    "timestamp": 79900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 79900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 80900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 81100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 81400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 81800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 81900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 82500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 82600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 82600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 3
  },
  {
    "timestamp": 82800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 82800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 83100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 83100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 3
  },
  {
    "timestamp": 83100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 84100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 84100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 8
  },
  {
    "timestamp": 84200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 84200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 84200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 84300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 84500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 85100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 14
  },
  {
    "timestamp": 85100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 13
  },
  {
    "timestamp": 85800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 85900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 86100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 86200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 3
  },
  {
    "timestamp": 86700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 86700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 87200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 87400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 87700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 87900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 87900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 88000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 2
  },
  {
    "timestamp": 88000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 88100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 8
  },
  {
    "timestamp": 88300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 88500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 88900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 89100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 89100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 89200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 89600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 6
  },
  {
    "timestamp": 89600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 2
  },
  {
    "timestamp": 89600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 89800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 89900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 89900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 90000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 90000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 90100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 90300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 90900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 91000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 91100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 91100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 91200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 91200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 1
  },
  {
    "timestamp": 91500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 15
  },
  {
    "timestamp": 91700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 92100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 92200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 8
  },
  {
    "timestamp": 92200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 92200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 92200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 92300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 12
  },
  {
    "timestamp": 92700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 92700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 92700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 92700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 92900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 92900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 93200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 93300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 93400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 93600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 93600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 93800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 94200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 94300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 94400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 94400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 94600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 94900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 6
  },
  {
    "timestamp": 95000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 95000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 95000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 95600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 95700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 95800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 7
  },
  {
    "timestamp": 96000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 2
  },
  {
    "timestamp": 96000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 96200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 96200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 5
  },
  {
    "timestamp": 96300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 96800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 96900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 14
  },
  {
    "timestamp": 97100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 97100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 1
  },
  {
    "timestamp": 97200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 10
  },
  {
    "timestamp": 97200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 3
  },
  {
    "timestamp": 97300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 97600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 7
  },
  {
    "timestamp": 97700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 97900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 98400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 7
  },
  {
    "timestamp": 98800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 98800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 98900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 15
  },
  {
    "timestamp": 99000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 99400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 2
  },
  {
    "timestamp": 99400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 99800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 4
  },
  {
    "timestamp": 99900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 100000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 100000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 100200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 100500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 8
  },
  {
    "timestamp": 100700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 100900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 8
  },
  {
    "timestamp": 101200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 101200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 15
  },
  {
    "timestamp": 101200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 2
  },
  {
    "timestamp": 101200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 101500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 101500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 2
  },
  {
    "timestamp": 101500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 101500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 101600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 5
  },
  {
    "timestamp": 101600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 102200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 102200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 2
  },
  {
    "timestamp": 102200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 102300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 102600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 2
  },
  {
    "timestamp": 102600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 102600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 102700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 6
  },
  {
    "timestamp": 103400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 104200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 104300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 104700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 104900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 104900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 105200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 105400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 105700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 106000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 4
  },
  {
    "timestamp": 106100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 106100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 5
  },
  {
    "timestamp": 106200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 13
  },
  {
    "timestamp": 106300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 106300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 4
  },
  {
    "timestamp": 106300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 4
  },
  {
    "timestamp": 106300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 106500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 10
  },
  {
    "timestamp": 106600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 107400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 107400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 1
  },
  {
    "timestamp": 107600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 108100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 108400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 108500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 108600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 108600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 109000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 109100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 109300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 109300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 11
  },
  {
    "timestamp": 109700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 110000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 110100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 110400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 7
  },
  {
    "timestamp": 110400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 10
  },
  {
    "timestamp": 111000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 111000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 111100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 15
  },
  {
    "timestamp": 111100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 111300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 111700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 112100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 5
  },
  {
    "timestamp": 113000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 6
  },
  {
    "timestamp": 113300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 5
  },
  {
    "timestamp": 113700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 113700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 6
  },
  {
    "timestamp": 113700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 6
  },
  {
    "timestamp": 113800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 13
  },
  {
    "timestamp": 113800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 113800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 114100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 114400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 114800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 15
  },
  {
    "timestamp": 115300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 115700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 116000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 116000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 10
  },
  {
    "timestamp": 116200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 116200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 1
  },
  {
    "timestamp": 116800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 116900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 116900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 7
  },
  {
    "timestamp": 117500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 2
  },
  {
    "timestamp": 117700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 118100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 118200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 118300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 118700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 10
  },
  {
    "timestamp": 119100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 2
  },
  {
    "timestamp": 119300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 119600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 119800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 119800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 119800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10000,
    "quantity": 1
  },
  {
    "timestamp": 119900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 120000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 120300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 120300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 120400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 120500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 3
  },
  {
    "timestamp": 120500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 5
  },
  {
    "timestamp": 120500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 120500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 4
  },
  {
    "timestamp": 120500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 120600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 121100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 121500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 121500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 121800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 121900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 122300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 3
  },
  {
    "timestamp": 122300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 2
  },
  {
    "timestamp": 122600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 122800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 6
  },
  {
    "timestamp": 122900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 123000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2010,
    "quantity": 1
  },
  {
    "timestamp": 123000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 123200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 4
  },
  {
    "timestamp": 123200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 123500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 15
  },
  {
    "timestamp": 123600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2010,
    "quantity": 7
  },
  {
    "timestamp": 123700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 6
  },
  {
    "timestamp": 123800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 123800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 124000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 124000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 124500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2011,
    "quantity": 3
  },
  {
    "timestamp": 124600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 125200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 125300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 1
  },
  {
    "timestamp": 125400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 125400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 125900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 6
  },
  {
    "timestamp": 126300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 2
  },
  {
    "timestamp": 126300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 126400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 126400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 2
  },
  {
    "timestamp": 126400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 126700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 127000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 127000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 127400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 2
  },
  {
    "timestamp": 127400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 127500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 127900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 127900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 7
  },
  {
    "timestamp": 128200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 128400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 128400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 128400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 128700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 6
  },
  {
    "timestamp": 128900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 128900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 129600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 129700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 3
  },
  {
    "timestamp": 130300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 130700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 130900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 131000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 131700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 9
  },
  {
    "timestamp": 131800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 4
  },
  {
    "timestamp": 131800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 131800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 12
  },
  {
    "timestamp": 132100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 132100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 132300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 132400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 132400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 132500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 14
  },
  {
    "timestamp": 132500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 132500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 133000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 13
  },
  {
    "timestamp": 133100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 133100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 4
  },
  {
    "timestamp": 133100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 5
  },
  {
    "timestamp": 133200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 133400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 133400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 133500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 133700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 134000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 134000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 134100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 134200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 134300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 134600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 134600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 134700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 134700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 134700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 134900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 134900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 135400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 9
  },
  {
    "timestamp": 135500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 135600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 135900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 135900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 136000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 136300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 136500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 136500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 136500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 137000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 137100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 137400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 137600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 137700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 3
  },
  {
    "timestamp": 137700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 137900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 137900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 138100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 138100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 7
  },
  {
    "timestamp": 138300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 7
  },
  {
    "timestamp": 138500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 138500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 13
  },
  {
    "timestamp": 138600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 138600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 2
  },
  {
    "timestamp": 138900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 10
  },
  {
    "timestamp": 139000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 139400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 139400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 139400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 139400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 139400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 5
  },
  {
    "timestamp": 139600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 139700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 4
  },
  {
    "timestamp": 139700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 140100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 140600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 1
  },
  {
    "timestamp": 141600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 142600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 142800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 143100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 143100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 143600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 143600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 1
  },
  {
    "timestamp": 144000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 144200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 144600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 145000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 1
  },
  {
    "timestamp": 145000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 145300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 145400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 1
  },
  {
    "timestamp": 145400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 145500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 145500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 145700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 145700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 8
  },
  {
    "timestamp": 146000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 6
  },
  {
    "timestamp": 146300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 15
  },
  {
    "timestamp": 146300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 146400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 9
  },
  {
    "timestamp": 146500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 146500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 146600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10000,
    "quantity": 4
  },
  {
    "timestamp": 146900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 147200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 14
  },
  {
    "timestamp": 147600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2012,
    "quantity": 1
  },
  {
    "timestamp": 147700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 147800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 148000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 9
  },
  {
    "timestamp": 148200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 148700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 148700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 2
  },
  {
    "timestamp": 148700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 149500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 149700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 5
  },
  {
    "timestamp": 149800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 149800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 149800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 149900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 5
  },
  {
    "timestamp": 150000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 150200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 150400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 150500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 150600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 151500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 151600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 152200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 5
  },
  {
    "timestamp": 152300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 9
  },
  {
    "timestamp": 152300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 152300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 152600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2013,
    "quantity": 1
  },
  {
    "timestamp": 153000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 3
  },
  {
    "timestamp": 153300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 14
  },
  {
    "timestamp": 153500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 153500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 153600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 14
  },
  {
    "timestamp": 154300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 6
  },
  {
    "timestamp": 154300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 154300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 154700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 11
  },
  {
    "timestamp": 154800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 154900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 15
  },
  {
    "timestamp": 155100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 155200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 155500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 155700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 155700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 156200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 7
  },
  {
    "timestamp": 156500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 156600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 156600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 156600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 156600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 156900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 157000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 157300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 4
  },
  {
    "timestamp": 157400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 9
  },
  {
    "timestamp": 157400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 10
  },
  {
    "timestamp": 157500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 157700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 158100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 158200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 158300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 7
  },
  {
    "timestamp": 158800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 1
  },
  {
    "timestamp": 159200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 9
  },
  {
    "timestamp": 159300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2014,
    "quantity": 1
  },
  {
    "timestamp": 160000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 2
  },
  {
    "timestamp": 160000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 160300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 160400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 160400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 160500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 13
  },
  {
    "timestamp": 160600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 161000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 8
  },
  {
    "timestamp": 161600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 162400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 4
  },
  {
    "timestamp": 162600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 162900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 4
  },
  {
    "timestamp": 163500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 2
  },
  {
    "timestamp": 163500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 2
  },
  {
    "timestamp": 163500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 163800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 1
  },
  {
    "timestamp": 163800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 13
  },
  {
    "timestamp": 163900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2015,
    "quantity": 2
  },
  {
    "timestamp": 163900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 164600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 164800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 164800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 6
  },
  {
    "timestamp": 165100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 165200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 6
  },
  {
    "timestamp": 166000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 166400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 167000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 5
  },
  {
    "timestamp": 167100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 167300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2016,
    "quantity": 11
  },
  {
    "timestamp": 167800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 167800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 167900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 168000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 8
  },
  {
    "timestamp": 169000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 3
  },
  {
    "timestamp": 169900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 170200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 170200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 171000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 3
  },
  {
    "timestamp": 171100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 171400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 5
  },
  {
    "timestamp": 171600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 4
  },
  {
    "timestamp": 171900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 171900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 172100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 172600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 172600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 172700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 173300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 173400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 2
  },
  {
    "timestamp": 173400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 173400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 173500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 173800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 173900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 9
  },
  {
    "timestamp": 174000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 174000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 174300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 174400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 175800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 175800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 176000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 176000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2017,
    "quantity": 1
  },
  {
    "timestamp": 176000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 176100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 2
  },
  {
    "timestamp": 176100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 176100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 176600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 176900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 5
  },
  {
    "timestamp": 177400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 177600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 177700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 177700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 177900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 14
  },
  {
    "timestamp": 178000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 178700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 178800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 5
  },
  {
    "timestamp": 178900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 179000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 2
  },
  {
    "timestamp": 179000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 179100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 179300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 179600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 179800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 8
  },
  {
    "timestamp": 179900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 180000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 11
  },
  {
    "timestamp": 180100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 180300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 180500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 6
  },
  {
    "timestamp": 180500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 180800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 180900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 11
  },
  {
    "timestamp": 180900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 181000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 181400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 2
  },
  {
    "timestamp": 181400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 181500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 181500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 2
  },
  {
    "timestamp": 181500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 181600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 2
  },
  {
    "timestamp": 181700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 14
  },
  {
    "timestamp": 181800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 181900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 182000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 182100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 2
  },
  {
    "timestamp": 182200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 182300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 182500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 183100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 183100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 183200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 9
  },
  {
    "timestamp": 183500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 183700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 8
  },
  {
    "timestamp": 183900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 6
  },
  {
    "timestamp": 184000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 13
  },
  {
    "timestamp": 184100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 184600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 184600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 1
  },
  {
    "timestamp": 184800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 184800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 5
  },
  {
    "timestamp": 185200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 10
  },
  {
    "timestamp": 185400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 185400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 185800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 186100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 186100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 4
  },
  {
    "timestamp": 186300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 10
  },
  {
    "timestamp": 186300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 186300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 10
  },
  {
    "timestamp": 186400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 187000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 3
  },
  {
    "timestamp": 187300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 187400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 187700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 187700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 15
  },
  {
    "timestamp": 188000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 188400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 188500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 189000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 189200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 3
  },
  {
    "timestamp": 189500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 2
  },
  {
    "timestamp": 189500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 189500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 189800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 2
  },
  {
    "timestamp": 189800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 189800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 189900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 190000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 9
  },
  {
    "timestamp": 190300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 190600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 190700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 10
  },
  {
    "timestamp": 190800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 5
  },
  {
    "timestamp": 190900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 1
  },
  {
    "timestamp": 190900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 190900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 190900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 191000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 191400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 191700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 191700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 4
  },
  {
    "timestamp": 191800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 192000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 192000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 192100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 192200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 5
  },
  {
    "timestamp": 192200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 192400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2019,
    "quantity": 1
  },
  {
    "timestamp": 192400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 192700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 192700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 5
  },
  {
    "timestamp": 193300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 193300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 193600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 14
  },
  {
    "timestamp": 193700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 193800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 194000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 194300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 194400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 2
  },
  {
    "timestamp": 194400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 194600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 1
  },
  {
    "timestamp": 195100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 2
  },
  {
    "timestamp": 195100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2018,
    "quantity": 6
  },
  {
    "timestamp": 195100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 195100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 195700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 195800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 195800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 196000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 196500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 197300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 197300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 197300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 197500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 197700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 2
  },
  {
    "timestamp": 197700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 198500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2024,
    "quantity": 2
  },
  {
    "timestamp": 198500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 198800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 198900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 5
  },
  {
    "timestamp": 198900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 199000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 2
  },
  {
    "timestamp": 199000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 199100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2020,
    "quantity": 1
  },
  {
    "timestamp": 199200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 2
  },
  {
    "timestamp": 199400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2022,
    "quantity": 1
  },
  {
    "timestamp": 199400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 2
  },
  {
    "timestamp": 199400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 1
  },
  {
    "timestamp": 199400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2021,
    "quantity": 3
  },
  {
    "timestamp": 199400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 199500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 199600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 199600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2023,
    "quantity": 1
  },
  {
    "timestamp": 199600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  }
]